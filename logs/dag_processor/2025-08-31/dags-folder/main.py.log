{"timestamp":"2025-08-31T17:35:39.837585","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:35:42.174068Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:35:43.029411Z","level":"error","event":"25/08/31 17:35:43 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:35:43.308453Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:35:43.316060Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:35:43.316285Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:20.128346","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:36:20.489475Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:21.580822Z","level":"error","event":"25/08/31 17:36:21 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:21.723992Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:21.724146Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:21.724220Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:56.724141","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:36:57.064381Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:58.646639Z","level":"error","event":"25/08/31 17:36:58 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:58.816847Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:58.821476Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:58.821631Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:36:59.919528Z","level":"error","event":"25/08/31 17:36:59 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:37:34.961014","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:37:35.280983Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:37:36.682392Z","level":"error","event":"25/08/31 17:37:36 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:37:36.874226Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:37:36.874269Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:37:36.874315Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:14.780071","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:38:15.219378Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:16.744123Z","level":"error","event":"25/08/31 17:38:16 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:17.023289Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:17.030426Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:17.030648Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:18.114966Z","level":"error","event":"25/08/31 17:38:18 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:54.296491","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:38:54.650880Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:56.496471Z","level":"error","event":"25/08/31 17:38:56 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:56.729615Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:56.736250Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:56.736436Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:38:57.942911Z","level":"error","event":"25/08/31 17:38:57 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:39:32.686502","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:39:33.198772Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:39:34.577816Z","level":"error","event":"25/08/31 17:39:34 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:39:34.742687Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:39:34.742864Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:39:34.742932Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:09.584855","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:40:10.116356Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:11.171104Z","level":"error","event":"25/08/31 17:40:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:11.312502Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:11.316239Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:11.316386Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:45.694572","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:40:46.165247Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:47.280886Z","level":"error","event":"25/08/31 17:40:47 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:47.482666Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:47.497581Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:40:47.497851Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:41:23.395031","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:41:23.926695Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:41:25.902505Z","level":"error","event":"25/08/31 17:41:25 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:41:26.165191Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:41:26.175008Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:41:26.175406Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:02.981790","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:42:03.365458Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:04.775494Z","level":"error","event":"25/08/31 17:42:04 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:04.969063Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:04.975116Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:04.975295Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:41.051245","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:42:41.384078Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:42.806094Z","level":"error","event":"25/08/31 17:42:42 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:43.003805Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:43.007745Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:42:43.008005Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:18.376808","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:43:18.671596Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:19.906672Z","level":"error","event":"25/08/31 17:43:19 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:20.099329Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:20.104954Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:20.105090Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:54.642428","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:43:54.955639Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:55.976851Z","level":"error","event":"25/08/31 17:43:55 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:56.153092Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:56.156627Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:43:56.156746Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:44:30.513102","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:44:30.814034Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:44:31.866567Z","level":"error","event":"25/08/31 17:44:31 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:44:32.026734Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:44:32.033065Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:44:32.033338Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:06.647184","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:45:06.915236Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:08.073556Z","level":"error","event":"25/08/31 17:45:08 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:08.250621Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:08.255204Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:08.255386Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:08.944943Z","level":"error","event":"25/08/31 17:45:08 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:42.665565","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:45:42.956802Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:44.069833Z","level":"error","event":"25/08/31 17:45:44 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:44.239520Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:44.243957Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:44.244109Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:45:45.034515Z","level":"error","event":"25/08/31 17:45:45 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:18.838134","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:46:19.162635Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:20.639466Z","level":"error","event":"25/08/31 17:46:20 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:20.829219Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:20.833229Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:20.833426Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:21.743176Z","level":"error","event":"25/08/31 17:46:21 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:56.258428","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:46:56.574062Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:57.927747Z","level":"error","event":"25/08/31 17:46:57 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:58.072560Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:58.077342Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:46:58.077477Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:47:32.459163","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:47:32.766441Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:47:34.106608Z","level":"error","event":"25/08/31 17:47:34 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:47:34.290643Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:47:34.290849Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:47:34.290922Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:47:35.129057Z","level":"error","event":"25/08/31 17:47:35 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:09.493979","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:48:09.801997Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:10.918278Z","level":"error","event":"25/08/31 17:48:10 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:11.057897Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:11.060654Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:11.060752Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:11.806366Z","level":"error","event":"25/08/31 17:48:11 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:45.241289","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:48:45.526857Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:46.621974Z","level":"error","event":"25/08/31 17:48:46 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:46.755902Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:46.760829Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:46.760934Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:48:47.422243Z","level":"error","event":"25/08/31 17:48:47 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:20.919294","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:49:21.222601Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:22.318560Z","level":"error","event":"25/08/31 17:49:22 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:22.471253Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:22.475189Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:22.475361Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:57.053629","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:49:57.368387Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:58.619093Z","level":"error","event":"25/08/31 17:49:58 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:58.787803Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:58.791291Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:58.791423Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:49:59.588725Z","level":"error","event":"25/08/31 17:49:59 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:50:33.123661","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:50:33.588165Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:50:35.015843Z","level":"error","event":"25/08/31 17:50:35 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:50:35.189883Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:50:35.195981Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:50:35.196134Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:50:35.970412Z","level":"error","event":"25/08/31 17:50:35 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:10.334261","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:51:10.644970Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:11.889552Z","level":"error","event":"25/08/31 17:51:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:12.072285Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:12.076282Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:12.076420Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:12.915565Z","level":"error","event":"25/08/31 17:51:12 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:47.416781","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:51:47.718289Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:48.850825Z","level":"error","event":"25/08/31 17:51:48 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:49.030594Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:49.035344Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:51:49.035521Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:52:23.986010","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:52:24.281597Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:52:25.418721Z","level":"error","event":"25/08/31 17:52:25 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:52:25.581061Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:52:25.585109Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:52:25.585259Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:52:59.994561","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:53:00.282142Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:01.406182Z","level":"error","event":"25/08/31 17:53:01 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:01.548047Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:01.551460Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:01.551567Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:36.060745","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:53:36.384723Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:37.834209Z","level":"error","event":"25/08/31 17:53:37 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:37.995973Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:37.999631Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:53:37.999739Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:12.330544","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:54:12.703571Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:14.007857Z","level":"error","event":"25/08/31 17:54:14 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:14.190312Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:14.195698Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:14.195890Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:14.936850Z","level":"error","event":"25/08/31 17:54:14 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:48.673283","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:54:49.010721Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:50.133196Z","level":"error","event":"25/08/31 17:54:50 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:50.287157Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:50.290788Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:50.290894Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:54:51.071774Z","level":"error","event":"25/08/31 17:54:51 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:55:25.274074","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:55:25.654273Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:55:26.733322Z","level":"error","event":"25/08/31 17:55:26 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:55:26.958259Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:55:26.958607Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:55:26.958702Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:55:27.816181Z","level":"error","event":"25/08/31 17:55:27 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:01.096978","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:56:01.596203Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.647735Z","level":"error","event":"25/08/31 17:56:02 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.800115Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.805435Z","level":"error","event":"25/08/31 17:56:02 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.810307Z","level":"error","event":"25/08/31 17:56:02 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.955465Z","level":"error","event":"25/08/31 17:56:02 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.961107Z","level":"error","event":"25/08/31 17:56:02 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.961291Z","level":"error","event":"25/08/31 17:56:02 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.988236Z","level":"error","event":"25/08/31 17:56:02 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.992373Z","level":"error","event":"25/08/31 17:56:02 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.992498Z","level":"error","event":"25/08/31 17:56:02 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:02.992536Z","level":"error","event":"25/08/31 17:56:02 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.019669Z","level":"error","event":"25/08/31 17:56:03 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.023632Z","level":"error","event":"25/08/31 17:56:03 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.026579Z","level":"error","event":"25/08/31 17:56:03 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.067830Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.073365Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.073586Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.073664Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.073735Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.273153Z","level":"error","event":"25/08/31 17:56:03 INFO Utils: Successfully started service 'sparkDriver' on port 46869.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.292151Z","level":"error","event":"25/08/31 17:56:03 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.301633Z","level":"error","event":"25/08/31 17:56:03 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.316773Z","level":"error","event":"25/08/31 17:56:03 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.321135Z","level":"error","event":"25/08/31 17:56:03 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.321337Z","level":"error","event":"25/08/31 17:56:03 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.339747Z","level":"error","event":"25/08/31 17:56:03 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-7b5ad70d-5aee-4458-bd18-8be250c94d01","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.355327Z","level":"error","event":"25/08/31 17:56:03 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.456960Z","level":"error","event":"25/08/31 17:56:03 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.511182Z","level":"error","event":"25/08/31 17:56:03 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.520175Z","level":"error","event":"25/08/31 17:56:03 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.563294Z","level":"error","event":"25/08/31 17:56:03 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://b444cfaee251:46869/jars/hadoop-aws-3.3.6.jar with timestamp 1756662962951","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.569594Z","level":"error","event":"25/08/31 17:56:03 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://b444cfaee251:46869/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756662962951","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.569797Z","level":"error","event":"25/08/31 17:56:03 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://b444cfaee251:46869/jars/ojdbc11.jar with timestamp 1756662962951","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.569893Z","level":"error","event":"25/08/31 17:56:03 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.569960Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570021Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570080Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570138Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570192Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570247Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570309Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570363Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570413Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570465Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570523Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570596Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570657Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570719Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570777Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570832Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570891Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.570950Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571007Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571061Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571119Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571167Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571218Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571269Z","level":"error","event":"25/08/31 17:56:03 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571339Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571384Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571435Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571486Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571536Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571584Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571633Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571678Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571722Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571775Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571822Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571870Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571919Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.571970Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572023Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572066Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572113Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572157Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572207Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572256Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.572327Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.577557Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.577745Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.589500Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.594397Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.594561Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.594605Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.594640Z","level":"error","event":"25/08/31 17:56:03 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.709831Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Starting executor ID driver on host b444cfaee251","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.714885Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.715054Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.721531Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.727514Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.735679Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Fetching spark://b444cfaee251:46869/jars/hadoop-aws-3.3.6.jar with timestamp 1756662962951","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.781169Z","level":"error","event":"25/08/31 17:56:03 INFO TransportClientFactory: Successfully created connection to b444cfaee251/172.18.0.11:46869 after 20 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.788357Z","level":"error","event":"25/08/31 17:56:03 INFO Utils: Fetching spark://b444cfaee251:46869/jars/hadoop-aws-3.3.6.jar to /tmp/spark-b1f33389-de49-46b1-8159-6b813f92b345/userFiles-5fbb0be0-8a74-471d-bd04-08d214821eca/fetchFileTemp4308246557117420946.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.818102Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Adding file:/tmp/spark-b1f33389-de49-46b1-8159-6b813f92b345/userFiles-5fbb0be0-8a74-471d-bd04-08d214821eca/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.825819Z","level":"error","event":"25/08/31 17:56:03 INFO Executor: Fetching spark://b444cfaee251:46869/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756662962951","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:03.826032Z","level":"error","event":"25/08/31 17:56:03 INFO Utils: Fetching spark://b444cfaee251:46869/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-b1f33389-de49-46b1-8159-6b813f92b345/userFiles-5fbb0be0-8a74-471d-bd04-08d214821eca/fetchFileTemp12679688164316426648.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.593782Z","level":"error","event":"25/08/31 17:56:04 INFO Executor: Adding file:/tmp/spark-b1f33389-de49-46b1-8159-6b813f92b345/userFiles-5fbb0be0-8a74-471d-bd04-08d214821eca/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.604264Z","level":"error","event":"25/08/31 17:56:04 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37465.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.609201Z","level":"error","event":"25/08/31 17:56:04 INFO NettyBlockTransferService: Server created on b444cfaee251:37465","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.609410Z","level":"error","event":"25/08/31 17:56:04 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.620501Z","level":"error","event":"25/08/31 17:56:04 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, b444cfaee251, 37465, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.626448Z","level":"error","event":"25/08/31 17:56:04 INFO BlockManagerMasterEndpoint: Registering block manager b444cfaee251:37465 with 434.4 MiB RAM, BlockManagerId(driver, b444cfaee251, 37465, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.631480Z","level":"error","event":"25/08/31 17:56:04 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, b444cfaee251, 37465, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.631702Z","level":"error","event":"25/08/31 17:56:04 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, b444cfaee251, 37465, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899436Z","level":"error","event":"25/08/31 17:56:04 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899683Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899752Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899809Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899860Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899910Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.899962Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900013Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900062Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900112Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900162Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900213Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900264Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900328Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900378Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900425Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900473Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900517Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900563Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900608Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900669Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900719Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900767Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900814Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900863Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900909Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.900955Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.901005Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.901053Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.901101Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:04.901148Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.220847Z","level":"error","event":"25/08/31 17:56:06 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.220957Z","level":"error","event":"25/08/31 17:56:06 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.226373Z","level":"error","event":"25/08/31 17:56:06 INFO SparkUI: Stopped Spark web UI at http://b444cfaee251:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.232230Z","level":"error","event":"25/08/31 17:56:06 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.241865Z","level":"error","event":"25/08/31 17:56:06 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.244264Z","level":"error","event":"25/08/31 17:56:06 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.244357Z","level":"error","event":"25/08/31 17:56:06 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.246360Z","level":"error","event":"25/08/31 17:56:06 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.249234Z","level":"error","event":"25/08/31 17:56:06 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.289105Z","level":"error","event":"25/08/31 17:56:06 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.292198Z","level":"error","event":"25/08/31 17:56:06 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.292292Z","level":"error","event":"25/08/31 17:56:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-b1f33389-de49-46b1-8159-6b813f92b345/pyspark-e66e56c9-68d3-4554-a1b1-24fd482dc2f8","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.293968Z","level":"error","event":"25/08/31 17:56:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-c076b013-8ed9-4b48-8042-eb17ea8520ea","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:56:06.295446Z","level":"error","event":"25/08/31 17:56:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-b1f33389-de49-46b1-8159-6b813f92b345","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:29.006735","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:57:31.620388Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.277450Z","level":"error","event":"25/08/31 17:57:32 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.542829Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.548692Z","level":"error","event":"25/08/31 17:57:32 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.548895Z","level":"error","event":"25/08/31 17:57:32 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.850413Z","level":"error","event":"25/08/31 17:57:32 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.850478Z","level":"error","event":"25/08/31 17:57:32 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.854910Z","level":"error","event":"25/08/31 17:57:32 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.881881Z","level":"error","event":"25/08/31 17:57:32 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.888534Z","level":"error","event":"25/08/31 17:57:32 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.888752Z","level":"error","event":"25/08/31 17:57:32 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.888854Z","level":"error","event":"25/08/31 17:57:32 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.930211Z","level":"error","event":"25/08/31 17:57:32 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.935934Z","level":"error","event":"25/08/31 17:57:32 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:32.940681Z","level":"error","event":"25/08/31 17:57:32 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.021074Z","level":"error","event":"25/08/31 17:57:33 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.036691Z","level":"error","event":"25/08/31 17:57:33 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.036883Z","level":"error","event":"25/08/31 17:57:33 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.036946Z","level":"error","event":"25/08/31 17:57:33 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.047277Z","level":"error","event":"25/08/31 17:57:33 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.442640Z","level":"error","event":"25/08/31 17:57:33 INFO Utils: Successfully started service 'sparkDriver' on port 40849.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.479810Z","level":"error","event":"25/08/31 17:57:33 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.503599Z","level":"error","event":"25/08/31 17:57:33 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.526020Z","level":"error","event":"25/08/31 17:57:33 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.534488Z","level":"error","event":"25/08/31 17:57:33 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.534722Z","level":"error","event":"25/08/31 17:57:33 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.565931Z","level":"error","event":"25/08/31 17:57:33 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-5fbda27e-19f1-4c3d-b3a4-058507c11ecf","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.595410Z","level":"error","event":"25/08/31 17:57:33 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.799436Z","level":"error","event":"25/08/31 17:57:33 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.960519Z","level":"error","event":"25/08/31 17:57:33 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:33.979686Z","level":"error","event":"25/08/31 17:57:33 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.101843Z","level":"error","event":"25/08/31 17:57:34 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:40849/jars/hadoop-aws-3.3.6.jar with timestamp 1756663052841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.125713Z","level":"error","event":"25/08/31 17:57:34 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:40849/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663052841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.125963Z","level":"error","event":"25/08/31 17:57:34 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:40849/jars/ojdbc11.jar with timestamp 1756663052841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126031Z","level":"error","event":"25/08/31 17:57:34 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126102Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126153Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126198Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126250Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126309Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126365Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126412Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126458Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126502Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126547Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126593Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126637Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126683Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126728Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126772Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126816Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126861Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126904Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126950Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.126998Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.127045Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.127108Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.127157Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.127206Z","level":"error","event":"25/08/31 17:57:34 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.127254Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.134846Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135083Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135143Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135189Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135237Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135284Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135348Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135397Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135442Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135489Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135541Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135587Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135632Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135677Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135724Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135772Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135816Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135863Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135932Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.135976Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.162958Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.163206Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.188968Z","level":"error","event":"25/08/31 17:57:34 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.214037Z","level":"error","event":"25/08/31 17:57:34 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.214254Z","level":"error","event":"25/08/31 17:57:34 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.214331Z","level":"error","event":"25/08/31 17:57:34 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.214387Z","level":"error","event":"25/08/31 17:57:34 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.440822Z","level":"error","event":"25/08/31 17:57:34 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.440904Z","level":"error","event":"25/08/31 17:57:34 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.450537Z","level":"error","event":"25/08/31 17:57:34 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.460616Z","level":"error","event":"25/08/31 17:57:34 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.466800Z","level":"error","event":"25/08/31 17:57:34 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@146d4810 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.479613Z","level":"error","event":"25/08/31 17:57:34 INFO Executor: Fetching spark://f80e8a4e0fa3:40849/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663052841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.555708Z","level":"error","event":"25/08/31 17:57:34 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:40849 after 31 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:34.581344Z","level":"error","event":"25/08/31 17:57:34 INFO Utils: Fetching spark://f80e8a4e0fa3:40849/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-3b3e76e8-27c8-48be-a370-21db2c8c08a3/userFiles-1a031160-3c8c-47e0-8bea-4b1a597a167b/fetchFileTemp6667615442400323271.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.956457Z","level":"error","event":"25/08/31 17:57:35 INFO Executor: Adding file:/tmp/spark-3b3e76e8-27c8-48be-a370-21db2c8c08a3/userFiles-1a031160-3c8c-47e0-8bea-4b1a597a167b/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.956779Z","level":"error","event":"25/08/31 17:57:35 INFO Executor: Fetching spark://f80e8a4e0fa3:40849/jars/hadoop-aws-3.3.6.jar with timestamp 1756663052841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.965007Z","level":"error","event":"25/08/31 17:57:35 INFO Utils: Fetching spark://f80e8a4e0fa3:40849/jars/hadoop-aws-3.3.6.jar to /tmp/spark-3b3e76e8-27c8-48be-a370-21db2c8c08a3/userFiles-1a031160-3c8c-47e0-8bea-4b1a597a167b/fetchFileTemp2903860945655859607.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.972620Z","level":"error","event":"25/08/31 17:57:35 INFO Executor: Adding file:/tmp/spark-3b3e76e8-27c8-48be-a370-21db2c8c08a3/userFiles-1a031160-3c8c-47e0-8bea-4b1a597a167b/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.983651Z","level":"error","event":"25/08/31 17:57:35 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37411.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.990915Z","level":"error","event":"25/08/31 17:57:35 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:37411","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:35.991161Z","level":"error","event":"25/08/31 17:57:35 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.020687Z","level":"error","event":"25/08/31 17:57:36 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 37411, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.027338Z","level":"error","event":"25/08/31 17:57:36 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:37411 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 37411, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.032771Z","level":"error","event":"25/08/31 17:57:36 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 37411, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.037761Z","level":"error","event":"25/08/31 17:57:36 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 37411, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334456Z","level":"error","event":"25/08/31 17:57:36 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334616Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334658Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334691Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334722Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334752Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334781Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334809Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334837Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334875Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334904Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334931Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334959Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.334987Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335014Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335042Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335070Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335098Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335126Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335153Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335180Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335208Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335236Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335264Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335293Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335341Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335372Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335400Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335428Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335456Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:36.335485Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.214781Z","level":"error","event":"25/08/31 17:57:38 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.216589Z","level":"error","event":"25/08/31 17:57:38 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.221142Z","level":"error","event":"25/08/31 17:57:38 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.227627Z","level":"error","event":"25/08/31 17:57:38 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.243899Z","level":"error","event":"25/08/31 17:57:38 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.247634Z","level":"error","event":"25/08/31 17:57:38 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.247807Z","level":"error","event":"25/08/31 17:57:38 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.251339Z","level":"error","event":"25/08/31 17:57:38 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.254184Z","level":"error","event":"25/08/31 17:57:38 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.289275Z","level":"error","event":"25/08/31 17:57:38 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.291934Z","level":"error","event":"25/08/31 17:57:38 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.292027Z","level":"error","event":"25/08/31 17:57:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-c2affc83-97b2-4905-8387-97c07fddb85b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.293661Z","level":"error","event":"25/08/31 17:57:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-3b3e76e8-27c8-48be-a370-21db2c8c08a3/pyspark-2fc9327a-0f01-41e4-8ee3-92c8c742e3f4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:57:38.295314Z","level":"error","event":"25/08/31 17:57:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-3b3e76e8-27c8-48be-a370-21db2c8c08a3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:09.052272","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:58:09.539635Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:11.654793Z","level":"error","event":"25/08/31 17:58:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:11.979470Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:11.987077Z","level":"error","event":"25/08/31 17:58:11 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:11.987361Z","level":"error","event":"25/08/31 17:58:11 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.257817Z","level":"error","event":"25/08/31 17:58:12 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.267281Z","level":"error","event":"25/08/31 17:58:12 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.267518Z","level":"error","event":"25/08/31 17:58:12 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.308925Z","level":"error","event":"25/08/31 17:58:12 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.320412Z","level":"error","event":"25/08/31 17:58:12 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.320679Z","level":"error","event":"25/08/31 17:58:12 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.320753Z","level":"error","event":"25/08/31 17:58:12 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.354977Z","level":"error","event":"25/08/31 17:58:12 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.368118Z","level":"error","event":"25/08/31 17:58:12 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.368448Z","level":"error","event":"25/08/31 17:58:12 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.498370Z","level":"error","event":"25/08/31 17:58:12 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.521046Z","level":"error","event":"25/08/31 17:58:12 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.521437Z","level":"error","event":"25/08/31 17:58:12 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.521507Z","level":"error","event":"25/08/31 17:58:12 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.521565Z","level":"error","event":"25/08/31 17:58:12 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.926331Z","level":"error","event":"25/08/31 17:58:12 INFO Utils: Successfully started service 'sparkDriver' on port 35817.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.972074Z","level":"error","event":"25/08/31 17:58:12 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.976876Z","level":"error","event":"25/08/31 17:58:12 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.993005Z","level":"error","event":"25/08/31 17:58:12 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.993157Z","level":"error","event":"25/08/31 17:58:12 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:12.997941Z","level":"error","event":"25/08/31 17:58:12 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.014263Z","level":"error","event":"25/08/31 17:58:13 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-d6c76bce-0c69-4c32-878f-2c8759e6bc0a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.039774Z","level":"error","event":"25/08/31 17:58:13 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.214765Z","level":"error","event":"25/08/31 17:58:13 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.378621Z","level":"error","event":"25/08/31 17:58:13 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.403322Z","level":"error","event":"25/08/31 17:58:13 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.512771Z","level":"error","event":"25/08/31 17:58:13 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:35817/jars/hadoop-aws-3.3.6.jar with timestamp 1756663092251","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523064Z","level":"error","event":"25/08/31 17:58:13 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:35817/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663092251","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523354Z","level":"error","event":"25/08/31 17:58:13 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:35817/jars/ojdbc11.jar with timestamp 1756663092251","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523449Z","level":"error","event":"25/08/31 17:58:13 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523517Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523579Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523638Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523692Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523753Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523808Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523840Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523871Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523901Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523930Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.523968Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524001Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524031Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524079Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524136Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524187Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524237Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524305Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524376Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524428Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524474Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524505Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524557Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524613Z","level":"error","event":"25/08/31 17:58:13 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524678Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.524750Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525043Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525137Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525205Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525262Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525328Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525382Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525452Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525510Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525568Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525626Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525682Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525744Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525798Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525858Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525915Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.525968Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.526026Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.526088Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.526146Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.535157Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.535397Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.555561Z","level":"error","event":"25/08/31 17:58:13 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.555937Z","level":"error","event":"25/08/31 17:58:13 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.556013Z","level":"error","event":"25/08/31 17:58:13 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.556067Z","level":"error","event":"25/08/31 17:58:13 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.556122Z","level":"error","event":"25/08/31 17:58:13 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.791925Z","level":"error","event":"25/08/31 17:58:13 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.792163Z","level":"error","event":"25/08/31 17:58:13 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.792271Z","level":"error","event":"25/08/31 17:58:13 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.818531Z","level":"error","event":"25/08/31 17:58:13 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.831877Z","level":"error","event":"25/08/31 17:58:13 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.865062Z","level":"error","event":"25/08/31 17:58:13 INFO Executor: Fetching spark://f80e8a4e0fa3:35817/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663092251","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:13.979375Z","level":"error","event":"25/08/31 17:58:13 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:35817 after 49 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:14.002085Z","level":"error","event":"25/08/31 17:58:13 INFO Utils: Fetching spark://f80e8a4e0fa3:35817/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-9d9bc446-f015-47e0-9d89-666096b27355/userFiles-938985fc-3c19-4916-a8a8-a6e79c1ecbe1/fetchFileTemp6221650255438771112.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.536022Z","level":"error","event":"25/08/31 17:58:15 INFO Executor: Adding file:/tmp/spark-9d9bc446-f015-47e0-9d89-666096b27355/userFiles-938985fc-3c19-4916-a8a8-a6e79c1ecbe1/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.536094Z","level":"error","event":"25/08/31 17:58:15 INFO Executor: Fetching spark://f80e8a4e0fa3:35817/jars/hadoop-aws-3.3.6.jar with timestamp 1756663092251","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.536145Z","level":"error","event":"25/08/31 17:58:15 INFO Utils: Fetching spark://f80e8a4e0fa3:35817/jars/hadoop-aws-3.3.6.jar to /tmp/spark-9d9bc446-f015-47e0-9d89-666096b27355/userFiles-938985fc-3c19-4916-a8a8-a6e79c1ecbe1/fetchFileTemp196714527834069305.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.542990Z","level":"error","event":"25/08/31 17:58:15 INFO Executor: Adding file:/tmp/spark-9d9bc446-f015-47e0-9d89-666096b27355/userFiles-938985fc-3c19-4916-a8a8-a6e79c1ecbe1/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.554563Z","level":"error","event":"25/08/31 17:58:15 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 33791.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.559795Z","level":"error","event":"25/08/31 17:58:15 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:33791","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.559991Z","level":"error","event":"25/08/31 17:58:15 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.573656Z","level":"error","event":"25/08/31 17:58:15 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 33791, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.578445Z","level":"error","event":"25/08/31 17:58:15 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:33791 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 33791, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.582244Z","level":"error","event":"25/08/31 17:58:15 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 33791, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.582451Z","level":"error","event":"25/08/31 17:58:15 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 33791, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923584Z","level":"error","event":"25/08/31 17:58:15 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923729Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923768Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923801Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923832Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923861Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923892Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923920Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923948Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.923979Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924016Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924046Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924086Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924134Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924183Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924230Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924277Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924355Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924439Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924504Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924582Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924645Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924704Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924765Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924821Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924874Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924933Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.924992Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.925050Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.925107Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:15.925166Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.275602Z","level":"error","event":"25/08/31 17:58:18 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.279813Z","level":"error","event":"25/08/31 17:58:18 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.289268Z","level":"error","event":"25/08/31 17:58:18 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.302892Z","level":"error","event":"25/08/31 17:58:18 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.320247Z","level":"error","event":"25/08/31 17:58:18 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.326599Z","level":"error","event":"25/08/31 17:58:18 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.326829Z","level":"error","event":"25/08/31 17:58:18 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.333420Z","level":"error","event":"25/08/31 17:58:18 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.343149Z","level":"error","event":"25/08/31 17:58:18 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.405325Z","level":"error","event":"25/08/31 17:58:18 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.410008Z","level":"error","event":"25/08/31 17:58:18 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.410183Z","level":"error","event":"25/08/31 17:58:18 INFO ShutdownHookManager: Deleting directory /tmp/spark-fdfb1bf8-1d38-4825-96ec-f95809dd9d72","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.413578Z","level":"error","event":"25/08/31 17:58:18 INFO ShutdownHookManager: Deleting directory /tmp/spark-9d9bc446-f015-47e0-9d89-666096b27355/pyspark-bee603fd-4b82-4c50-9e7d-346111d2bb45","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:18.416673Z","level":"error","event":"25/08/31 17:58:18 INFO ShutdownHookManager: Deleting directory /tmp/spark-9d9bc446-f015-47e0-9d89-666096b27355","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:48.904086","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:58:49.230409Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:50.701320Z","level":"error","event":"25/08/31 17:58:50 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:50.911613Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:50.916904Z","level":"error","event":"25/08/31 17:58:50 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:50.920863Z","level":"error","event":"25/08/31 17:58:50 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.123610Z","level":"error","event":"25/08/31 17:58:51 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.123830Z","level":"error","event":"25/08/31 17:58:51 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.123918Z","level":"error","event":"25/08/31 17:58:51 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.160990Z","level":"error","event":"25/08/31 17:58:51 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.161153Z","level":"error","event":"25/08/31 17:58:51 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.161194Z","level":"error","event":"25/08/31 17:58:51 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.166444Z","level":"error","event":"25/08/31 17:58:51 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.197902Z","level":"error","event":"25/08/31 17:58:51 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.197984Z","level":"error","event":"25/08/31 17:58:51 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.204822Z","level":"error","event":"25/08/31 17:58:51 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.280691Z","level":"error","event":"25/08/31 17:58:51 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.280748Z","level":"error","event":"25/08/31 17:58:51 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.280796Z","level":"error","event":"25/08/31 17:58:51 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.280841Z","level":"error","event":"25/08/31 17:58:51 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.290445Z","level":"error","event":"25/08/31 17:58:51 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.627852Z","level":"error","event":"25/08/31 17:58:51 INFO Utils: Successfully started service 'sparkDriver' on port 43183.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.653335Z","level":"error","event":"25/08/31 17:58:51 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.666880Z","level":"error","event":"25/08/31 17:58:51 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.682165Z","level":"error","event":"25/08/31 17:58:51 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.686704Z","level":"error","event":"25/08/31 17:58:51 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.686883Z","level":"error","event":"25/08/31 17:58:51 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.705903Z","level":"error","event":"25/08/31 17:58:51 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-0ce73c5f-7dbb-4b64-9511-d80d369347b9","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.725433Z","level":"error","event":"25/08/31 17:58:51 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.855137Z","level":"error","event":"25/08/31 17:58:51 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.938950Z","level":"error","event":"25/08/31 17:58:51 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:51.958815Z","level":"error","event":"25/08/31 17:58:51 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.007586Z","level":"error","event":"25/08/31 17:58:52 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:43183/jars/hadoop-aws-3.3.6.jar with timestamp 1756663131113","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017150Z","level":"error","event":"25/08/31 17:58:52 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:43183/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663131113","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017350Z","level":"error","event":"25/08/31 17:58:52 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:43183/jars/ojdbc11.jar with timestamp 1756663131113","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017439Z","level":"error","event":"25/08/31 17:58:52 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017493Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017545Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017596Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017651Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017703Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017754Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017804Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017856Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017908Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.017961Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018014Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018065Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018115Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018164Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018212Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018265Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018335Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018390Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018440Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018489Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018538Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018612Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018664Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018718Z","level":"error","event":"25/08/31 17:58:52 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018773Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018829Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018879Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018930Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.018978Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019028Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019081Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019134Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019185Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019232Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019286Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019360Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019427Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019473Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019519Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019567Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019609Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019652Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019716Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019777Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.019829Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.030118Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.030351Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.039628Z","level":"error","event":"25/08/31 17:58:52 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.044408Z","level":"error","event":"25/08/31 17:58:52 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.044551Z","level":"error","event":"25/08/31 17:58:52 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.044586Z","level":"error","event":"25/08/31 17:58:52 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.044619Z","level":"error","event":"25/08/31 17:58:52 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.188975Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.196897Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.197179Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.206195Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.216351Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.234970Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Fetching spark://f80e8a4e0fa3:43183/jars/hadoop-aws-3.3.6.jar with timestamp 1756663131113","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.290948Z","level":"error","event":"25/08/31 17:58:52 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:43183 after 28 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.298845Z","level":"error","event":"25/08/31 17:58:52 INFO Utils: Fetching spark://f80e8a4e0fa3:43183/jars/hadoop-aws-3.3.6.jar to /tmp/spark-d92f8ef2-089f-43ad-b6e7-2bd37777d46d/userFiles-09a5cf6e-eda0-4da0-829f-398bf484a9e0/fetchFileTemp2109939684822264285.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.344814Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Adding file:/tmp/spark-d92f8ef2-089f-43ad-b6e7-2bd37777d46d/userFiles-09a5cf6e-eda0-4da0-829f-398bf484a9e0/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.355179Z","level":"error","event":"25/08/31 17:58:52 INFO Executor: Fetching spark://f80e8a4e0fa3:43183/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663131113","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:52.355460Z","level":"error","event":"25/08/31 17:58:52 INFO Utils: Fetching spark://f80e8a4e0fa3:43183/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-d92f8ef2-089f-43ad-b6e7-2bd37777d46d/userFiles-09a5cf6e-eda0-4da0-829f-398bf484a9e0/fetchFileTemp2120676216124889941.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.157617Z","level":"error","event":"25/08/31 17:58:53 INFO Executor: Adding file:/tmp/spark-d92f8ef2-089f-43ad-b6e7-2bd37777d46d/userFiles-09a5cf6e-eda0-4da0-829f-398bf484a9e0/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.174920Z","level":"error","event":"25/08/31 17:58:53 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35739.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.182593Z","level":"error","event":"25/08/31 17:58:53 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:35739","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.182813Z","level":"error","event":"25/08/31 17:58:53 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.199710Z","level":"error","event":"25/08/31 17:58:53 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 35739, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.208564Z","level":"error","event":"25/08/31 17:58:53 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:35739 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 35739, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.218879Z","level":"error","event":"25/08/31 17:58:53 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 35739, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.219248Z","level":"error","event":"25/08/31 17:58:53 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 35739, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.606892Z","level":"error","event":"25/08/31 17:58:53 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607080Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607139Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607174Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607205Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607234Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607264Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607293Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607360Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607412Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607442Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607470Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607499Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607528Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607556Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607584Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607612Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607640Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607669Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607698Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607727Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607755Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607783Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607810Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607838Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607866Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607894Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607922Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607948Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.607976Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:53.608007Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.468778Z","level":"error","event":"25/08/31 17:58:55 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.472415Z","level":"error","event":"25/08/31 17:58:55 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.479967Z","level":"error","event":"25/08/31 17:58:55 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.490283Z","level":"error","event":"25/08/31 17:58:55 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.503716Z","level":"error","event":"25/08/31 17:58:55 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.510243Z","level":"error","event":"25/08/31 17:58:55 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.510464Z","level":"error","event":"25/08/31 17:58:55 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.517393Z","level":"error","event":"25/08/31 17:58:55 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.517618Z","level":"error","event":"25/08/31 17:58:55 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.557276Z","level":"error","event":"25/08/31 17:58:55 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.562318Z","level":"error","event":"25/08/31 17:58:55 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.562426Z","level":"error","event":"25/08/31 17:58:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-d06ab738-061a-4d31-8c0a-90b693862852","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.562464Z","level":"error","event":"25/08/31 17:58:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-d92f8ef2-089f-43ad-b6e7-2bd37777d46d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:58:55.565225Z","level":"error","event":"25/08/31 17:58:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-d92f8ef2-089f-43ad-b6e7-2bd37777d46d/pyspark-35b54c83-9a6a-4155-895e-122d6cc07eff","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:26.213871","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T17:59:26.563213Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.023641Z","level":"error","event":"25/08/31 17:59:28 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.216269Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.220851Z","level":"error","event":"25/08/31 17:59:28 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.220977Z","level":"error","event":"25/08/31 17:59:28 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.422001Z","level":"error","event":"25/08/31 17:59:28 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.427840Z","level":"error","event":"25/08/31 17:59:28 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.428020Z","level":"error","event":"25/08/31 17:59:28 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.460606Z","level":"error","event":"25/08/31 17:59:28 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.466406Z","level":"error","event":"25/08/31 17:59:28 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.466566Z","level":"error","event":"25/08/31 17:59:28 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.466604Z","level":"error","event":"25/08/31 17:59:28 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.497976Z","level":"error","event":"25/08/31 17:59:28 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.503222Z","level":"error","event":"25/08/31 17:59:28 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.508401Z","level":"error","event":"25/08/31 17:59:28 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.582986Z","level":"error","event":"25/08/31 17:59:28 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.595268Z","level":"error","event":"25/08/31 17:59:28 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.595548Z","level":"error","event":"25/08/31 17:59:28 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.595633Z","level":"error","event":"25/08/31 17:59:28 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.595695Z","level":"error","event":"25/08/31 17:59:28 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.841195Z","level":"error","event":"25/08/31 17:59:28 INFO Utils: Successfully started service 'sparkDriver' on port 42849.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.870797Z","level":"error","event":"25/08/31 17:59:28 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.881318Z","level":"error","event":"25/08/31 17:59:28 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.899270Z","level":"error","event":"25/08/31 17:59:28 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.904761Z","level":"error","event":"25/08/31 17:59:28 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.904950Z","level":"error","event":"25/08/31 17:59:28 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.929789Z","level":"error","event":"25/08/31 17:59:28 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-35fb8738-03c3-4cf1-82aa-3401da213048","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:28.952911Z","level":"error","event":"25/08/31 17:59:28 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.060636Z","level":"error","event":"25/08/31 17:59:29 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.142964Z","level":"error","event":"25/08/31 17:59:29 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.206737Z","level":"error","event":"25/08/31 17:59:29 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:42849/jars/hadoop-aws-3.3.6.jar with timestamp 1756663168416","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.216919Z","level":"error","event":"25/08/31 17:59:29 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:42849/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663168416","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217233Z","level":"error","event":"25/08/31 17:59:29 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:42849/jars/ojdbc11.jar with timestamp 1756663168416","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217366Z","level":"error","event":"25/08/31 17:59:29 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217438Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217493Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217544Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217597Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217643Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217692Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217740Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217788Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217840Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217888Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.217940Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218020Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218075Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218127Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218177Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218226Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218275Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218353Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218408Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218463Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218512Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218567Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218627Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218688Z","level":"error","event":"25/08/31 17:59:29 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218739Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218790Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218835Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218881Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218928Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.218978Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219028Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219078Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219124Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219193Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219247Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219521Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219635Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219692Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219743Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219797Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219847Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219895Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219943Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.219990Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.220043Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.232130Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.232393Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.258541Z","level":"error","event":"25/08/31 17:59:29 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.258960Z","level":"error","event":"25/08/31 17:59:29 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.259038Z","level":"error","event":"25/08/31 17:59:29 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.266553Z","level":"error","event":"25/08/31 17:59:29 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.266802Z","level":"error","event":"25/08/31 17:59:29 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.417430Z","level":"error","event":"25/08/31 17:59:29 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.424568Z","level":"error","event":"25/08/31 17:59:29 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.424779Z","level":"error","event":"25/08/31 17:59:29 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.437434Z","level":"error","event":"25/08/31 17:59:29 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.444865Z","level":"error","event":"25/08/31 17:59:29 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.458159Z","level":"error","event":"25/08/31 17:59:29 INFO Executor: Fetching spark://f80e8a4e0fa3:42849/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663168416","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.510834Z","level":"error","event":"25/08/31 17:59:29 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:42849 after 20 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:29.517333Z","level":"error","event":"25/08/31 17:59:29 INFO Utils: Fetching spark://f80e8a4e0fa3:42849/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-e81be851-ae4d-44c8-bcfa-823be419445c/userFiles-b64425bf-16d0-46c1-b500-21134ec0cdd5/fetchFileTemp4349838208519622208.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.251834Z","level":"error","event":"25/08/31 17:59:30 INFO Executor: Adding file:/tmp/spark-e81be851-ae4d-44c8-bcfa-823be419445c/userFiles-b64425bf-16d0-46c1-b500-21134ec0cdd5/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.264740Z","level":"error","event":"25/08/31 17:59:30 INFO Executor: Fetching spark://f80e8a4e0fa3:42849/jars/hadoop-aws-3.3.6.jar with timestamp 1756663168416","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.264879Z","level":"error","event":"25/08/31 17:59:30 INFO Utils: Fetching spark://f80e8a4e0fa3:42849/jars/hadoop-aws-3.3.6.jar to /tmp/spark-e81be851-ae4d-44c8-bcfa-823be419445c/userFiles-b64425bf-16d0-46c1-b500-21134ec0cdd5/fetchFileTemp11315815160258203065.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.264925Z","level":"error","event":"25/08/31 17:59:30 INFO Executor: Adding file:/tmp/spark-e81be851-ae4d-44c8-bcfa-823be419445c/userFiles-b64425bf-16d0-46c1-b500-21134ec0cdd5/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.269088Z","level":"error","event":"25/08/31 17:59:30 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35343.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.272910Z","level":"error","event":"25/08/31 17:59:30 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:35343","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.273034Z","level":"error","event":"25/08/31 17:59:30 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.284038Z","level":"error","event":"25/08/31 17:59:30 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 35343, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.289440Z","level":"error","event":"25/08/31 17:59:30 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:35343 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 35343, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.292815Z","level":"error","event":"25/08/31 17:59:30 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 35343, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.295057Z","level":"error","event":"25/08/31 17:59:30 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 35343, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.884811Z","level":"error","event":"25/08/31 17:59:30 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.884997Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885037Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885072Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885102Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885132Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885162Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885190Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885219Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885247Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885275Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885317Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885347Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885375Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885403Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885430Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885458Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885485Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885513Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885540Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885582Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885612Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885640Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885667Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885695Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885722Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885750Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885777Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885804Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885831Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:30.885857Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.496790Z","level":"error","event":"25/08/31 17:59:32 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.498878Z","level":"error","event":"25/08/31 17:59:32 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.504674Z","level":"error","event":"25/08/31 17:59:32 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.511543Z","level":"error","event":"25/08/31 17:59:32 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.522523Z","level":"error","event":"25/08/31 17:59:32 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.525588Z","level":"error","event":"25/08/31 17:59:32 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.525705Z","level":"error","event":"25/08/31 17:59:32 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.528323Z","level":"error","event":"25/08/31 17:59:32 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.531772Z","level":"error","event":"25/08/31 17:59:32 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.563485Z","level":"error","event":"25/08/31 17:59:32 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.566011Z","level":"error","event":"25/08/31 17:59:32 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.566108Z","level":"error","event":"25/08/31 17:59:32 INFO ShutdownHookManager: Deleting directory /tmp/spark-e81be851-ae4d-44c8-bcfa-823be419445c","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.568055Z","level":"error","event":"25/08/31 17:59:32 INFO ShutdownHookManager: Deleting directory /tmp/spark-935a1a5e-f534-49af-9a51-39e251349bac","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T17:59:32.570810Z","level":"error","event":"25/08/31 17:59:32 INFO ShutdownHookManager: Deleting directory /tmp/spark-e81be851-ae4d-44c8-bcfa-823be419445c/pyspark-839dbad7-a7ca-46a4-b5de-2df8a9812ced","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:03.125435","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:00:04.117922Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:06.491267Z","level":"error","event":"25/08/31 18:00:06 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:06.792105Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:06.800018Z","level":"error","event":"25/08/31 18:00:06 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:06.800241Z","level":"error","event":"25/08/31 18:00:06 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:06.998641Z","level":"error","event":"25/08/31 18:00:06 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.007801Z","level":"error","event":"25/08/31 18:00:07 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.008109Z","level":"error","event":"25/08/31 18:00:07 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.041770Z","level":"error","event":"25/08/31 18:00:07 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.053793Z","level":"error","event":"25/08/31 18:00:07 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.054001Z","level":"error","event":"25/08/31 18:00:07 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.054065Z","level":"error","event":"25/08/31 18:00:07 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.085387Z","level":"error","event":"25/08/31 18:00:07 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.095589Z","level":"error","event":"25/08/31 18:00:07 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.095979Z","level":"error","event":"25/08/31 18:00:07 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.162646Z","level":"error","event":"25/08/31 18:00:07 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.171853Z","level":"error","event":"25/08/31 18:00:07 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.172097Z","level":"error","event":"25/08/31 18:00:07 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.172168Z","level":"error","event":"25/08/31 18:00:07 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.172227Z","level":"error","event":"25/08/31 18:00:07 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.527490Z","level":"error","event":"25/08/31 18:00:07 INFO Utils: Successfully started service 'sparkDriver' on port 33017.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.586209Z","level":"error","event":"25/08/31 18:00:07 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.609729Z","level":"error","event":"25/08/31 18:00:07 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.635585Z","level":"error","event":"25/08/31 18:00:07 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.646596Z","level":"error","event":"25/08/31 18:00:07 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.646982Z","level":"error","event":"25/08/31 18:00:07 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.678725Z","level":"error","event":"25/08/31 18:00:07 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-b06c3ce7-f8c6-4053-943d-a198dae1792f","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.714775Z","level":"error","event":"25/08/31 18:00:07 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:07.938317Z","level":"error","event":"25/08/31 18:00:07 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.042325Z","level":"error","event":"25/08/31 18:00:08 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.057524Z","level":"error","event":"25/08/31 18:00:08 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.131955Z","level":"error","event":"25/08/31 18:00:08 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:33017/jars/hadoop-aws-3.3.6.jar with timestamp 1756663206993","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.132322Z","level":"error","event":"25/08/31 18:00:08 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:33017/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663206993","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.132411Z","level":"error","event":"25/08/31 18:00:08 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:33017/jars/ojdbc11.jar with timestamp 1756663206993","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.145335Z","level":"error","event":"25/08/31 18:00:08 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.145787Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.145930Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146001Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146067Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146123Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146182Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146239Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146294Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146374Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146430Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146487Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146544Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146600Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146652Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146704Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146753Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146804Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146853Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146907Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.146976Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147036Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147138Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147218Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147282Z","level":"error","event":"25/08/31 18:00:08 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147378Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147438Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147498Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147561Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147630Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147699Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147765Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147826Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147883Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147937Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.147991Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148053Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148112Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148169Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148226Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148284Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148366Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148423Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148481Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148554Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148612Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148666Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.148715Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.183240Z","level":"error","event":"25/08/31 18:00:08 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.183328Z","level":"error","event":"25/08/31 18:00:08 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.183392Z","level":"error","event":"25/08/31 18:00:08 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.183445Z","level":"error","event":"25/08/31 18:00:08 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.183497Z","level":"error","event":"25/08/31 18:00:08 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.447885Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.457719Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.458055Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.469888Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.479541Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@141a8777 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.514866Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Fetching spark://f80e8a4e0fa3:33017/jars/hadoop-aws-3.3.6.jar with timestamp 1756663206993","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.601473Z","level":"error","event":"25/08/31 18:00:08 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:33017 after 33 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.621486Z","level":"error","event":"25/08/31 18:00:08 INFO Utils: Fetching spark://f80e8a4e0fa3:33017/jars/hadoop-aws-3.3.6.jar to /tmp/spark-361da807-d5ef-4b52-9972-7dd854bf5e50/userFiles-ddb35f3c-55c7-4754-bb7f-a4099c3cd2b5/fetchFileTemp9289788458537691080.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.692491Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Adding file:/tmp/spark-361da807-d5ef-4b52-9972-7dd854bf5e50/userFiles-ddb35f3c-55c7-4754-bb7f-a4099c3cd2b5/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.713459Z","level":"error","event":"25/08/31 18:00:08 INFO Executor: Fetching spark://f80e8a4e0fa3:33017/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663206993","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:08.713796Z","level":"error","event":"25/08/31 18:00:08 INFO Utils: Fetching spark://f80e8a4e0fa3:33017/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-361da807-d5ef-4b52-9972-7dd854bf5e50/userFiles-ddb35f3c-55c7-4754-bb7f-a4099c3cd2b5/fetchFileTemp11726043310575686097.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.023473Z","level":"error","event":"25/08/31 18:00:10 INFO Executor: Adding file:/tmp/spark-361da807-d5ef-4b52-9972-7dd854bf5e50/userFiles-ddb35f3c-55c7-4754-bb7f-a4099c3cd2b5/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.046521Z","level":"error","event":"25/08/31 18:00:10 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 44007.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.046605Z","level":"error","event":"25/08/31 18:00:10 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:44007","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.046666Z","level":"error","event":"25/08/31 18:00:10 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.076973Z","level":"error","event":"25/08/31 18:00:10 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 44007, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.088812Z","level":"error","event":"25/08/31 18:00:10 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:44007 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 44007, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.095926Z","level":"error","event":"25/08/31 18:00:10 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 44007, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.100586Z","level":"error","event":"25/08/31 18:00:10 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 44007, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.571995Z","level":"error","event":"25/08/31 18:00:10 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572305Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572402Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572465Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572519Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572571Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572626Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572676Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572728Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572810Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572884Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.572950Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573011Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573067Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573117Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573173Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573227Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573280Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573350Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573402Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573451Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573498Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573553Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573602Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573658Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573713Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573775Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573829Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573878Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573929Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:10.573981Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.887332Z","level":"error","event":"25/08/31 18:00:12 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.897947Z","level":"error","event":"25/08/31 18:00:12 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.918036Z","level":"error","event":"25/08/31 18:00:12 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.949494Z","level":"error","event":"25/08/31 18:00:12 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.964857Z","level":"error","event":"25/08/31 18:00:12 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.968668Z","level":"error","event":"25/08/31 18:00:12 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.968801Z","level":"error","event":"25/08/31 18:00:12 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.972847Z","level":"error","event":"25/08/31 18:00:12 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:12.978082Z","level":"error","event":"25/08/31 18:00:12 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:13.019978Z","level":"error","event":"25/08/31 18:00:13 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:13.023483Z","level":"error","event":"25/08/31 18:00:13 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:13.023596Z","level":"error","event":"25/08/31 18:00:13 INFO ShutdownHookManager: Deleting directory /tmp/spark-afc33dc9-be16-4be4-946e-ed710b1dc122","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:13.026687Z","level":"error","event":"25/08/31 18:00:13 INFO ShutdownHookManager: Deleting directory /tmp/spark-361da807-d5ef-4b52-9972-7dd854bf5e50/pyspark-bd9019e8-8ea4-4cf8-967e-c29046dc77ba","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:13.029674Z","level":"error","event":"25/08/31 18:00:13 INFO ShutdownHookManager: Deleting directory /tmp/spark-361da807-d5ef-4b52-9972-7dd854bf5e50","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:43.767144","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:00:44.285574Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:45.824131Z","level":"error","event":"25/08/31 18:00:45 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.004909Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.008639Z","level":"error","event":"25/08/31 18:00:46 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.014121Z","level":"error","event":"25/08/31 18:00:46 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.168537Z","level":"error","event":"25/08/31 18:00:46 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.168641Z","level":"error","event":"25/08/31 18:00:46 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.168707Z","level":"error","event":"25/08/31 18:00:46 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.199729Z","level":"error","event":"25/08/31 18:00:46 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.199792Z","level":"error","event":"25/08/31 18:00:46 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.199847Z","level":"error","event":"25/08/31 18:00:46 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.199902Z","level":"error","event":"25/08/31 18:00:46 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.226460Z","level":"error","event":"25/08/31 18:00:46 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.231140Z","level":"error","event":"25/08/31 18:00:46 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.231326Z","level":"error","event":"25/08/31 18:00:46 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.283592Z","level":"error","event":"25/08/31 18:00:46 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.283637Z","level":"error","event":"25/08/31 18:00:46 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.283671Z","level":"error","event":"25/08/31 18:00:46 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.283706Z","level":"error","event":"25/08/31 18:00:46 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.288147Z","level":"error","event":"25/08/31 18:00:46 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.589323Z","level":"error","event":"25/08/31 18:00:46 INFO Utils: Successfully started service 'sparkDriver' on port 46501.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.617970Z","level":"error","event":"25/08/31 18:00:46 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.630025Z","level":"error","event":"25/08/31 18:00:46 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.644452Z","level":"error","event":"25/08/31 18:00:46 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.649435Z","level":"error","event":"25/08/31 18:00:46 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.649617Z","level":"error","event":"25/08/31 18:00:46 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.669397Z","level":"error","event":"25/08/31 18:00:46 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-eb907d87-d2d1-4b0f-bfc3-8f053691f611","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.697736Z","level":"error","event":"25/08/31 18:00:46 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.892630Z","level":"error","event":"25/08/31 18:00:46 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:46.999032Z","level":"error","event":"25/08/31 18:00:46 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.012546Z","level":"error","event":"25/08/31 18:00:47 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.094009Z","level":"error","event":"25/08/31 18:00:47 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:46501/jars/hadoop-aws-3.3.6.jar with timestamp 1756663246157","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.100679Z","level":"error","event":"25/08/31 18:00:47 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:46501/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663246157","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.100969Z","level":"error","event":"25/08/31 18:00:47 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:46501/jars/ojdbc11.jar with timestamp 1756663246157","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101034Z","level":"error","event":"25/08/31 18:00:47 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101073Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101109Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101143Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101176Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101206Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101238Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101271Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101311Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101344Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101374Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101424Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101456Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101494Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101531Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101563Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101596Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101626Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101658Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101690Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101721Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101751Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101782Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101816Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101849Z","level":"error","event":"25/08/31 18:00:47 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101878Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101909Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.101940Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102157Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102210Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102244Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102277Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102324Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102438Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102530Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102567Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102599Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102630Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102660Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102691Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102722Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102753Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102784Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102817Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102845Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.102873Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.110321Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.110573Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.133907Z","level":"error","event":"25/08/31 18:00:47 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.143290Z","level":"error","event":"25/08/31 18:00:47 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.143543Z","level":"error","event":"25/08/31 18:00:47 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.143626Z","level":"error","event":"25/08/31 18:00:47 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.143680Z","level":"error","event":"25/08/31 18:00:47 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.368111Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.368439Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.368526Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.386848Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.398553Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.414193Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Fetching spark://f80e8a4e0fa3:46501/jars/hadoop-aws-3.3.6.jar with timestamp 1756663246157","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.508180Z","level":"error","event":"25/08/31 18:00:47 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:46501 after 54 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.527587Z","level":"error","event":"25/08/31 18:00:47 INFO Utils: Fetching spark://f80e8a4e0fa3:46501/jars/hadoop-aws-3.3.6.jar to /tmp/spark-2d4b854b-6e3f-44da-a7ab-15c680ca883b/userFiles-4c964ee3-126c-486d-96f6-cf7bea06db2a/fetchFileTemp3083931086767186445.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.584039Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Adding file:/tmp/spark-2d4b854b-6e3f-44da-a7ab-15c680ca883b/userFiles-4c964ee3-126c-486d-96f6-cf7bea06db2a/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.584669Z","level":"error","event":"25/08/31 18:00:47 INFO Executor: Fetching spark://f80e8a4e0fa3:46501/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663246157","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:47.598454Z","level":"error","event":"25/08/31 18:00:47 INFO Utils: Fetching spark://f80e8a4e0fa3:46501/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-2d4b854b-6e3f-44da-a7ab-15c680ca883b/userFiles-4c964ee3-126c-486d-96f6-cf7bea06db2a/fetchFileTemp6466731668977912854.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.278941Z","level":"error","event":"25/08/31 18:00:48 INFO Executor: Adding file:/tmp/spark-2d4b854b-6e3f-44da-a7ab-15c680ca883b/userFiles-4c964ee3-126c-486d-96f6-cf7bea06db2a/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.287499Z","level":"error","event":"25/08/31 18:00:48 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 36573.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.292164Z","level":"error","event":"25/08/31 18:00:48 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:36573","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.292356Z","level":"error","event":"25/08/31 18:00:48 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.302111Z","level":"error","event":"25/08/31 18:00:48 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 36573, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.309511Z","level":"error","event":"25/08/31 18:00:48 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:36573 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 36573, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.313585Z","level":"error","event":"25/08/31 18:00:48 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 36573, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.319261Z","level":"error","event":"25/08/31 18:00:48 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 36573, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579116Z","level":"error","event":"25/08/31 18:00:48 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579392Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579477Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579533Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579583Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579636Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579687Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579738Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579791Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579838Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579886Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579939Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.579990Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580041Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580094Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580147Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580201Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580254Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580317Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580386Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580454Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580511Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580567Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580622Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580677Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580732Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580787Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580839Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580894Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580949Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:48.580999Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.341557Z","level":"error","event":"25/08/31 18:00:50 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.341615Z","level":"error","event":"25/08/31 18:00:50 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.349687Z","level":"error","event":"25/08/31 18:00:50 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.359171Z","level":"error","event":"25/08/31 18:00:50 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.368998Z","level":"error","event":"25/08/31 18:00:50 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.372401Z","level":"error","event":"25/08/31 18:00:50 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.372517Z","level":"error","event":"25/08/31 18:00:50 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.374690Z","level":"error","event":"25/08/31 18:00:50 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.377896Z","level":"error","event":"25/08/31 18:00:50 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.416413Z","level":"error","event":"25/08/31 18:00:50 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.420064Z","level":"error","event":"25/08/31 18:00:50 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.420179Z","level":"error","event":"25/08/31 18:00:50 INFO ShutdownHookManager: Deleting directory /tmp/spark-2d4b854b-6e3f-44da-a7ab-15c680ca883b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.422032Z","level":"error","event":"25/08/31 18:00:50 INFO ShutdownHookManager: Deleting directory /tmp/spark-2d4b854b-6e3f-44da-a7ab-15c680ca883b/pyspark-7aefb0ef-90a2-4e00-bee6-544dff5b5b1a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:00:50.424031Z","level":"error","event":"25/08/31 18:00:50 INFO ShutdownHookManager: Deleting directory /tmp/spark-258a81a8-ec79-4025-b909-c307a2e31e91","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:21.720884","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:01:22.298619Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:23.761944Z","level":"error","event":"25/08/31 18:01:23 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:23.948729Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:23.956367Z","level":"error","event":"25/08/31 18:01:23 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:23.963899Z","level":"error","event":"25/08/31 18:01:23 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.135749Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.141193Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.141391Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.170344Z","level":"error","event":"25/08/31 18:01:24 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.176710Z","level":"error","event":"25/08/31 18:01:24 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.176892Z","level":"error","event":"25/08/31 18:01:24 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.176971Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.202845Z","level":"error","event":"25/08/31 18:01:24 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.208248Z","level":"error","event":"25/08/31 18:01:24 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.208446Z","level":"error","event":"25/08/31 18:01:24 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.264064Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.271863Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.272093Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.272162Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.272200Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.567017Z","level":"error","event":"25/08/31 18:01:24 INFO Utils: Successfully started service 'sparkDriver' on port 32943.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.602267Z","level":"error","event":"25/08/31 18:01:24 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.616165Z","level":"error","event":"25/08/31 18:01:24 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.632472Z","level":"error","event":"25/08/31 18:01:24 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.638476Z","level":"error","event":"25/08/31 18:01:24 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.638710Z","level":"error","event":"25/08/31 18:01:24 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.660042Z","level":"error","event":"25/08/31 18:01:24 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-57caa515-3271-4d09-9a23-56142fd1a589","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.677991Z","level":"error","event":"25/08/31 18:01:24 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.794426Z","level":"error","event":"25/08/31 18:01:24 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.895324Z","level":"error","event":"25/08/31 18:01:24 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.954893Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:32943/jars/hadoop-aws-3.3.6.jar with timestamp 1756663284131","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.960743Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:32943/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663284131","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.960960Z","level":"error","event":"25/08/31 18:01:24 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:32943/jars/ojdbc11.jar with timestamp 1756663284131","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961029Z","level":"error","event":"25/08/31 18:01:24 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961087Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961126Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961177Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961237Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961291Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961379Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961442Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961492Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961552Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961610Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961671Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961728Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961786Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961843Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961900Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.961961Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962015Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962065Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962119Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962168Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962223Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962288Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962403Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962464Z","level":"error","event":"25/08/31 18:01:24 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962516Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962562Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962611Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962669Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962732Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962776Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962813Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962847Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962879Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962912Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962945Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.962993Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963039Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963077Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963111Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963147Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963178Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963208Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963238Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963266Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.963325Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.969246Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.969526Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.989154Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.995205Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.995447Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.995521Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:24.995580Z","level":"error","event":"25/08/31 18:01:24 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.134450Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.138738Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.138900Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.152676Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.157977Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.168754Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Fetching spark://f80e8a4e0fa3:32943/jars/hadoop-aws-3.3.6.jar with timestamp 1756663284131","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.223132Z","level":"error","event":"25/08/31 18:01:25 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:32943 after 28 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.229184Z","level":"error","event":"25/08/31 18:01:25 INFO Utils: Fetching spark://f80e8a4e0fa3:32943/jars/hadoop-aws-3.3.6.jar to /tmp/spark-e6b580ca-8f71-48f2-a44b-9deaf6ad8220/userFiles-c2b462e4-4193-4eb7-9d00-a7f06a02167d/fetchFileTemp18128494085819052341.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.258363Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Adding file:/tmp/spark-e6b580ca-8f71-48f2-a44b-9deaf6ad8220/userFiles-c2b462e4-4193-4eb7-9d00-a7f06a02167d/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.265182Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Fetching spark://f80e8a4e0fa3:32943/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663284131","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.265383Z","level":"error","event":"25/08/31 18:01:25 INFO Utils: Fetching spark://f80e8a4e0fa3:32943/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-e6b580ca-8f71-48f2-a44b-9deaf6ad8220/userFiles-c2b462e4-4193-4eb7-9d00-a7f06a02167d/fetchFileTemp12834215775619726272.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.960010Z","level":"error","event":"25/08/31 18:01:25 INFO Executor: Adding file:/tmp/spark-e6b580ca-8f71-48f2-a44b-9deaf6ad8220/userFiles-c2b462e4-4193-4eb7-9d00-a7f06a02167d/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.968845Z","level":"error","event":"25/08/31 18:01:25 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 44775.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.973414Z","level":"error","event":"25/08/31 18:01:25 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:44775","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.973580Z","level":"error","event":"25/08/31 18:01:25 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.983752Z","level":"error","event":"25/08/31 18:01:25 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 44775, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.995143Z","level":"error","event":"25/08/31 18:01:25 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:44775 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 44775, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:25.995246Z","level":"error","event":"25/08/31 18:01:25 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 44775, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.001008Z","level":"error","event":"25/08/31 18:01:25 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 44775, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336613Z","level":"error","event":"25/08/31 18:01:26 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336784Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336831Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336870Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336902Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336943Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.336974Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337006Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337038Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337070Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337131Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337174Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337206Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337251Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337283Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337360Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337396Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337426Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337455Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337484Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337512Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337540Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337567Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337596Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337624Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337654Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337684Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337713Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337741Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337768Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:26.337796Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.352561Z","level":"error","event":"25/08/31 18:01:28 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.356936Z","level":"error","event":"25/08/31 18:01:28 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.376749Z","level":"error","event":"25/08/31 18:01:28 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.401042Z","level":"error","event":"25/08/31 18:01:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.416618Z","level":"error","event":"25/08/31 18:01:28 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.416706Z","level":"error","event":"25/08/31 18:01:28 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.416768Z","level":"error","event":"25/08/31 18:01:28 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.421647Z","level":"error","event":"25/08/31 18:01:28 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.428367Z","level":"error","event":"25/08/31 18:01:28 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.475927Z","level":"error","event":"25/08/31 18:01:28 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.481584Z","level":"error","event":"25/08/31 18:01:28 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.481814Z","level":"error","event":"25/08/31 18:01:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-e6b580ca-8f71-48f2-a44b-9deaf6ad8220/pyspark-319e5c47-5cde-4c7d-bd0d-a080c316e4eb","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.486570Z","level":"error","event":"25/08/31 18:01:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-e6b580ca-8f71-48f2-a44b-9deaf6ad8220","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:28.491248Z","level":"error","event":"25/08/31 18:01:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-cb86d478-eb30-48f5-8465-fadebe7f53a6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:01:59.471020","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:01:59.976860Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.236663Z","level":"error","event":"25/08/31 18:02:01 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.395611Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.399404Z","level":"error","event":"25/08/31 18:02:01 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.402054Z","level":"error","event":"25/08/31 18:02:01 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.551259Z","level":"error","event":"25/08/31 18:02:01 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.560120Z","level":"error","event":"25/08/31 18:02:01 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.560332Z","level":"error","event":"25/08/31 18:02:01 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.594368Z","level":"error","event":"25/08/31 18:02:01 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.600862Z","level":"error","event":"25/08/31 18:02:01 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.601057Z","level":"error","event":"25/08/31 18:02:01 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.601127Z","level":"error","event":"25/08/31 18:02:01 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.638676Z","level":"error","event":"25/08/31 18:02:01 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.646574Z","level":"error","event":"25/08/31 18:02:01 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.653594Z","level":"error","event":"25/08/31 18:02:01 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.721251Z","level":"error","event":"25/08/31 18:02:01 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.729418Z","level":"error","event":"25/08/31 18:02:01 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.729682Z","level":"error","event":"25/08/31 18:02:01 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.729756Z","level":"error","event":"25/08/31 18:02:01 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.737770Z","level":"error","event":"25/08/31 18:02:01 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:01.997930Z","level":"error","event":"25/08/31 18:02:01 INFO Utils: Successfully started service 'sparkDriver' on port 42115.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.021462Z","level":"error","event":"25/08/31 18:02:02 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.033562Z","level":"error","event":"25/08/31 18:02:02 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.047833Z","level":"error","event":"25/08/31 18:02:02 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.051620Z","level":"error","event":"25/08/31 18:02:02 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.051772Z","level":"error","event":"25/08/31 18:02:02 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.069530Z","level":"error","event":"25/08/31 18:02:02 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-d5ef9a09-a496-4dfc-88d8-11446dfdc80a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.090380Z","level":"error","event":"25/08/31 18:02:02 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.233806Z","level":"error","event":"25/08/31 18:02:02 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.322509Z","level":"error","event":"25/08/31 18:02:02 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.379537Z","level":"error","event":"25/08/31 18:02:02 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:42115/jars/hadoop-aws-3.3.6.jar with timestamp 1756663321543","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.387840Z","level":"error","event":"25/08/31 18:02:02 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:42115/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663321543","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388093Z","level":"error","event":"25/08/31 18:02:02 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:42115/jars/ojdbc11.jar with timestamp 1756663321543","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388167Z","level":"error","event":"25/08/31 18:02:02 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388223Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388290Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388368Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388425Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388481Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388538Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388594Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388649Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388710Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388767Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388821Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.388898Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389000Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389063Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389121Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389179Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389234Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389288Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389368Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389424Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389483Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389544Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389605Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389659Z","level":"error","event":"25/08/31 18:02:02 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389714Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389768Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.389870Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390079Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390154Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390209Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390263Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390352Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390417Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390480Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390571Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390638Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390698Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390758Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390816Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390886Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.390946Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.391010Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.391075Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.391134Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.391192Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.399535Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.399851Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.424317Z","level":"error","event":"25/08/31 18:02:02 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.424358Z","level":"error","event":"25/08/31 18:02:02 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.424387Z","level":"error","event":"25/08/31 18:02:02 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.424416Z","level":"error","event":"25/08/31 18:02:02 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.424447Z","level":"error","event":"25/08/31 18:02:02 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.586728Z","level":"error","event":"25/08/31 18:02:02 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.595097Z","level":"error","event":"25/08/31 18:02:02 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.595398Z","level":"error","event":"25/08/31 18:02:02 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.606550Z","level":"error","event":"25/08/31 18:02:02 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.613140Z","level":"error","event":"25/08/31 18:02:02 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@335c844f for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.622505Z","level":"error","event":"25/08/31 18:02:02 INFO Executor: Fetching spark://f80e8a4e0fa3:42115/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663321543","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.678979Z","level":"error","event":"25/08/31 18:02:02 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:42115 after 26 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:02.686265Z","level":"error","event":"25/08/31 18:02:02 INFO Utils: Fetching spark://f80e8a4e0fa3:42115/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-013ff6d1-4443-4b36-817f-0d4292ace760/userFiles-5eece455-2ad2-4b9e-a8fe-6a6169aaf83b/fetchFileTemp997366936085138369.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.588754Z","level":"error","event":"25/08/31 18:02:03 INFO Executor: Adding file:/tmp/spark-013ff6d1-4443-4b36-817f-0d4292ace760/userFiles-5eece455-2ad2-4b9e-a8fe-6a6169aaf83b/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.596466Z","level":"error","event":"25/08/31 18:02:03 INFO Executor: Fetching spark://f80e8a4e0fa3:42115/jars/hadoop-aws-3.3.6.jar with timestamp 1756663321543","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.596649Z","level":"error","event":"25/08/31 18:02:03 INFO Utils: Fetching spark://f80e8a4e0fa3:42115/jars/hadoop-aws-3.3.6.jar to /tmp/spark-013ff6d1-4443-4b36-817f-0d4292ace760/userFiles-5eece455-2ad2-4b9e-a8fe-6a6169aaf83b/fetchFileTemp1121265732059359673.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.603366Z","level":"error","event":"25/08/31 18:02:03 INFO Executor: Adding file:/tmp/spark-013ff6d1-4443-4b36-817f-0d4292ace760/userFiles-5eece455-2ad2-4b9e-a8fe-6a6169aaf83b/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.615544Z","level":"error","event":"25/08/31 18:02:03 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37241.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.621700Z","level":"error","event":"25/08/31 18:02:03 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:37241","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.621861Z","level":"error","event":"25/08/31 18:02:03 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.634761Z","level":"error","event":"25/08/31 18:02:03 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 37241, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.642061Z","level":"error","event":"25/08/31 18:02:03 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:37241 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 37241, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.645965Z","level":"error","event":"25/08/31 18:02:03 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 37241, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:03.649660Z","level":"error","event":"25/08/31 18:02:03 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 37241, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.003505Z","level":"error","event":"25/08/31 18:02:04 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.003720Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.003796Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.003861Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.003925Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.003986Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004053Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004115Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004182Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004246Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004323Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004386Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004451Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004514Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004579Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004646Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004706Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004769Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004832Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004894Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.004959Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005048Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005112Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005175Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005236Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005313Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005383Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005446Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005508Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005570Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:04.005631Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.910932Z","level":"error","event":"25/08/31 18:02:05 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.917641Z","level":"error","event":"25/08/31 18:02:05 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.924469Z","level":"error","event":"25/08/31 18:02:05 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.937200Z","level":"error","event":"25/08/31 18:02:05 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.950330Z","level":"error","event":"25/08/31 18:02:05 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.953755Z","level":"error","event":"25/08/31 18:02:05 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.953873Z","level":"error","event":"25/08/31 18:02:05 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.956192Z","level":"error","event":"25/08/31 18:02:05 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.960552Z","level":"error","event":"25/08/31 18:02:05 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.997571Z","level":"error","event":"25/08/31 18:02:05 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.997650Z","level":"error","event":"25/08/31 18:02:05 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.997713Z","level":"error","event":"25/08/31 18:02:05 INFO ShutdownHookManager: Deleting directory /tmp/spark-8ef8c171-0916-4068-ae94-dc81d8b1c72a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:05.997784Z","level":"error","event":"25/08/31 18:02:05 INFO ShutdownHookManager: Deleting directory /tmp/spark-013ff6d1-4443-4b36-817f-0d4292ace760","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:06.003801Z","level":"error","event":"25/08/31 18:02:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-013ff6d1-4443-4b36-817f-0d4292ace760/pyspark-0e48de13-4da2-4a90-a0f3-5b130d4e272d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:36.882996","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:02:37.248581Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:38.718155Z","level":"error","event":"25/08/31 18:02:38 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:38.936508Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:38.942021Z","level":"error","event":"25/08/31 18:02:38 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:38.946080Z","level":"error","event":"25/08/31 18:02:38 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.098246Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.103788Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.103972Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.124525Z","level":"error","event":"25/08/31 18:02:39 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.130400Z","level":"error","event":"25/08/31 18:02:39 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.130576Z","level":"error","event":"25/08/31 18:02:39 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.130650Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.157721Z","level":"error","event":"25/08/31 18:02:39 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.162954Z","level":"error","event":"25/08/31 18:02:39 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.167704Z","level":"error","event":"25/08/31 18:02:39 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.222285Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.227093Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.227291Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.227395Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.232255Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.466999Z","level":"error","event":"25/08/31 18:02:39 INFO Utils: Successfully started service 'sparkDriver' on port 32939.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.501448Z","level":"error","event":"25/08/31 18:02:39 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.518217Z","level":"error","event":"25/08/31 18:02:39 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.543305Z","level":"error","event":"25/08/31 18:02:39 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.551893Z","level":"error","event":"25/08/31 18:02:39 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.552129Z","level":"error","event":"25/08/31 18:02:39 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.572394Z","level":"error","event":"25/08/31 18:02:39 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-9e979b1f-9a93-45a6-aba2-ff7eea19666b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.607517Z","level":"error","event":"25/08/31 18:02:39 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.759608Z","level":"error","event":"25/08/31 18:02:39 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.825465Z","level":"error","event":"25/08/31 18:02:39 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.866336Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:32939/jars/hadoop-aws-3.3.6.jar with timestamp 1756663359094","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871174Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:32939/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663359094","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871388Z","level":"error","event":"25/08/31 18:02:39 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:32939/jars/ojdbc11.jar with timestamp 1756663359094","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871473Z","level":"error","event":"25/08/31 18:02:39 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871549Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871765Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871862Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871931Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.871998Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872059Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872120Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872181Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872244Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872331Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872401Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872468Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872528Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872593Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872650Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872717Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872786Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872852Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872914Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.872978Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873041Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873104Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873168Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873230Z","level":"error","event":"25/08/31 18:02:39 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873324Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873411Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873474Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873537Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873594Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873650Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873704Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873766Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873847Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873905Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.873972Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874033Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874093Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874157Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874218Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874281Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874369Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874430Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874491Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874550Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.874612Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.880207Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.880401Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.889871Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.895675Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.895860Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.895927Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:39.895987Z","level":"error","event":"25/08/31 18:02:39 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.030454Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.037614Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.037761Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.050915Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.055805Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.073643Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Fetching spark://f80e8a4e0fa3:32939/jars/hadoop-aws-3.3.6.jar with timestamp 1756663359094","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.136320Z","level":"error","event":"25/08/31 18:02:40 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:32939 after 21 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.144284Z","level":"error","event":"25/08/31 18:02:40 INFO Utils: Fetching spark://f80e8a4e0fa3:32939/jars/hadoop-aws-3.3.6.jar to /tmp/spark-28902d2f-a089-4e15-bd66-d4b2ac8eac0a/userFiles-35505973-3711-4629-b396-9e750a38d64a/fetchFileTemp7254954684581189762.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.164383Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Adding file:/tmp/spark-28902d2f-a089-4e15-bd66-d4b2ac8eac0a/userFiles-35505973-3711-4629-b396-9e750a38d64a/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.169148Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Fetching spark://f80e8a4e0fa3:32939/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663359094","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.169325Z","level":"error","event":"25/08/31 18:02:40 INFO Utils: Fetching spark://f80e8a4e0fa3:32939/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-28902d2f-a089-4e15-bd66-d4b2ac8eac0a/userFiles-35505973-3711-4629-b396-9e750a38d64a/fetchFileTemp13875805146172041055.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.863738Z","level":"error","event":"25/08/31 18:02:40 INFO Executor: Adding file:/tmp/spark-28902d2f-a089-4e15-bd66-d4b2ac8eac0a/userFiles-35505973-3711-4629-b396-9e750a38d64a/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.880621Z","level":"error","event":"25/08/31 18:02:40 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 34513.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.880872Z","level":"error","event":"25/08/31 18:02:40 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:34513","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.888871Z","level":"error","event":"25/08/31 18:02:40 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.907374Z","level":"error","event":"25/08/31 18:02:40 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 34513, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.922543Z","level":"error","event":"25/08/31 18:02:40 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:34513 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 34513, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.931119Z","level":"error","event":"25/08/31 18:02:40 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 34513, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:40.939652Z","level":"error","event":"25/08/31 18:02:40 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 34513, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402252Z","level":"error","event":"25/08/31 18:02:41 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402488Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402548Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402590Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402621Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402659Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402757Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402790Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402822Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402854Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402885Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402923Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.402993Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403058Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403098Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403129Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403160Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403201Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403238Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403266Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403295Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403337Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403371Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403398Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403426Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403453Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403481Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403516Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403577Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403621Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:41.403671Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.107996Z","level":"error","event":"25/08/31 18:02:43 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.111493Z","level":"error","event":"25/08/31 18:02:43 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.120799Z","level":"error","event":"25/08/31 18:02:43 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.130131Z","level":"error","event":"25/08/31 18:02:43 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.146833Z","level":"error","event":"25/08/31 18:02:43 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.147044Z","level":"error","event":"25/08/31 18:02:43 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.147111Z","level":"error","event":"25/08/31 18:02:43 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.152419Z","level":"error","event":"25/08/31 18:02:43 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.158879Z","level":"error","event":"25/08/31 18:02:43 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.195935Z","level":"error","event":"25/08/31 18:02:43 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.196074Z","level":"error","event":"25/08/31 18:02:43 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.196115Z","level":"error","event":"25/08/31 18:02:43 INFO ShutdownHookManager: Deleting directory /tmp/spark-28902d2f-a089-4e15-bd66-d4b2ac8eac0a/pyspark-44aeeb27-ef8f-45b5-be18-b5902e4147bd","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.199503Z","level":"error","event":"25/08/31 18:02:43 INFO ShutdownHookManager: Deleting directory /tmp/spark-28902d2f-a089-4e15-bd66-d4b2ac8eac0a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:02:43.203195Z","level":"error","event":"25/08/31 18:02:43 INFO ShutdownHookManager: Deleting directory /tmp/spark-abfefe24-7bde-4fa7-a207-c727dd8afa55","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:14.422403","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:03:14.702079Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:15.733912Z","level":"error","event":"25/08/31 18:03:15 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:15.888164Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:15.892266Z","level":"error","event":"25/08/31 18:03:15 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:15.892429Z","level":"error","event":"25/08/31 18:03:15 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.080251Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.080286Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.082464Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.102583Z","level":"error","event":"25/08/31 18:03:16 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.102637Z","level":"error","event":"25/08/31 18:03:16 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.102679Z","level":"error","event":"25/08/31 18:03:16 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.102727Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.119771Z","level":"error","event":"25/08/31 18:03:16 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.125375Z","level":"error","event":"25/08/31 18:03:16 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.125577Z","level":"error","event":"25/08/31 18:03:16 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.164318Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.169125Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.169338Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.169402Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.173613Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.342918Z","level":"error","event":"25/08/31 18:03:16 INFO Utils: Successfully started service 'sparkDriver' on port 40397.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.379150Z","level":"error","event":"25/08/31 18:03:16 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.383397Z","level":"error","event":"25/08/31 18:03:16 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.397790Z","level":"error","event":"25/08/31 18:03:16 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.402798Z","level":"error","event":"25/08/31 18:03:16 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.403016Z","level":"error","event":"25/08/31 18:03:16 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.422981Z","level":"error","event":"25/08/31 18:03:16 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-64e34789-a4f3-4b0e-9480-883a57bef9f0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.445603Z","level":"error","event":"25/08/31 18:03:16 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.571904Z","level":"error","event":"25/08/31 18:03:16 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.639845Z","level":"error","event":"25/08/31 18:03:16 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.650604Z","level":"error","event":"25/08/31 18:03:16 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.680860Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:40397/jars/hadoop-aws-3.3.6.jar with timestamp 1756663396075","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.684961Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:40397/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663396075","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685086Z","level":"error","event":"25/08/31 18:03:16 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:40397/jars/ojdbc11.jar with timestamp 1756663396075","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685123Z","level":"error","event":"25/08/31 18:03:16 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685155Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685185Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685215Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685244Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685273Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685312Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685345Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685375Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685402Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685429Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685456Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685483Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685520Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685549Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685577Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685604Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685631Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685658Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685687Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685714Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685741Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685769Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685796Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685828Z","level":"error","event":"25/08/31 18:03:16 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685856Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685884Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685912Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685940Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685968Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.685995Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686020Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686047Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686074Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686101Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686127Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686157Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686184Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686211Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686237Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686264Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686290Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686350Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686378Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686405Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.686432Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.691960Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.692152Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.702661Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.707506Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.707671Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.707731Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.707784Z","level":"error","event":"25/08/31 18:03:16 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.804659Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.807415Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.807518Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.815059Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.820506Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.827937Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Fetching spark://f80e8a4e0fa3:40397/jars/hadoop-aws-3.3.6.jar with timestamp 1756663396075","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.866135Z","level":"error","event":"25/08/31 18:03:16 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:40397 after 15 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.875711Z","level":"error","event":"25/08/31 18:03:16 INFO Utils: Fetching spark://f80e8a4e0fa3:40397/jars/hadoop-aws-3.3.6.jar to /tmp/spark-c1292817-a675-4766-b586-7ad3b4f447ed/userFiles-ab8a8350-7c22-47c0-a386-4ec38b2e10bf/fetchFileTemp412416971078630292.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.899265Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Adding file:/tmp/spark-c1292817-a675-4766-b586-7ad3b4f447ed/userFiles-ab8a8350-7c22-47c0-a386-4ec38b2e10bf/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.904260Z","level":"error","event":"25/08/31 18:03:16 INFO Executor: Fetching spark://f80e8a4e0fa3:40397/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663396075","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:16.904463Z","level":"error","event":"25/08/31 18:03:16 INFO Utils: Fetching spark://f80e8a4e0fa3:40397/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-c1292817-a675-4766-b586-7ad3b4f447ed/userFiles-ab8a8350-7c22-47c0-a386-4ec38b2e10bf/fetchFileTemp5507329620409988797.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.603283Z","level":"error","event":"25/08/31 18:03:17 INFO Executor: Adding file:/tmp/spark-c1292817-a675-4766-b586-7ad3b4f447ed/userFiles-ab8a8350-7c22-47c0-a386-4ec38b2e10bf/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.615446Z","level":"error","event":"25/08/31 18:03:17 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37027.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.615583Z","level":"error","event":"25/08/31 18:03:17 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:37027","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.618613Z","level":"error","event":"25/08/31 18:03:17 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.631191Z","level":"error","event":"25/08/31 18:03:17 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 37027, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.636175Z","level":"error","event":"25/08/31 18:03:17 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:37027 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 37027, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.639690Z","level":"error","event":"25/08/31 18:03:17 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 37027, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.642545Z","level":"error","event":"25/08/31 18:03:17 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 37027, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.910712Z","level":"error","event":"25/08/31 18:03:17 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.910868Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.910906Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.910937Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.910968Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.910997Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911027Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911055Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911082Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911113Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911140Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911168Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911196Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911225Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911252Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911279Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911317Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911346Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911374Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911401Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911437Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911467Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911495Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911522Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911548Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911575Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911602Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911628Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911655Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911682Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:17.911708Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.244127Z","level":"error","event":"25/08/31 18:03:19 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.246537Z","level":"error","event":"25/08/31 18:03:19 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.250499Z","level":"error","event":"25/08/31 18:03:19 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.260470Z","level":"error","event":"25/08/31 18:03:19 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.269561Z","level":"error","event":"25/08/31 18:03:19 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.272586Z","level":"error","event":"25/08/31 18:03:19 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.272694Z","level":"error","event":"25/08/31 18:03:19 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.276252Z","level":"error","event":"25/08/31 18:03:19 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.279840Z","level":"error","event":"25/08/31 18:03:19 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.314609Z","level":"error","event":"25/08/31 18:03:19 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.317180Z","level":"error","event":"25/08/31 18:03:19 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.317261Z","level":"error","event":"25/08/31 18:03:19 INFO ShutdownHookManager: Deleting directory /tmp/spark-c1292817-a675-4766-b586-7ad3b4f447ed","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.319043Z","level":"error","event":"25/08/31 18:03:19 INFO ShutdownHookManager: Deleting directory /tmp/spark-c1292817-a675-4766-b586-7ad3b4f447ed/pyspark-fd8a0f3d-47da-4281-9994-54a76e160b3d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:19.320575Z","level":"error","event":"25/08/31 18:03:19 INFO ShutdownHookManager: Deleting directory /tmp/spark-99568d55-31bc-4288-8d27-8e0d02dca33f","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:50.274803","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:03:50.686536Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:51.856593Z","level":"error","event":"25/08/31 18:03:51 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.012318Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.019307Z","level":"error","event":"25/08/31 18:03:52 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.019430Z","level":"error","event":"25/08/31 18:03:52 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.151127Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.154721Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.154838Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.176641Z","level":"error","event":"25/08/31 18:03:52 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.180708Z","level":"error","event":"25/08/31 18:03:52 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.180830Z","level":"error","event":"25/08/31 18:03:52 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.180868Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.204523Z","level":"error","event":"25/08/31 18:03:52 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.210137Z","level":"error","event":"25/08/31 18:03:52 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.210284Z","level":"error","event":"25/08/31 18:03:52 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.279616Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.279670Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.279734Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.279780Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.285155Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.488972Z","level":"error","event":"25/08/31 18:03:52 INFO Utils: Successfully started service 'sparkDriver' on port 38847.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.514341Z","level":"error","event":"25/08/31 18:03:52 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.526427Z","level":"error","event":"25/08/31 18:03:52 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.538582Z","level":"error","event":"25/08/31 18:03:52 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.543217Z","level":"error","event":"25/08/31 18:03:52 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.543372Z","level":"error","event":"25/08/31 18:03:52 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.560599Z","level":"error","event":"25/08/31 18:03:52 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-72c6f56a-c8bc-424d-9cec-22dbcfe99fb0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.576530Z","level":"error","event":"25/08/31 18:03:52 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.683873Z","level":"error","event":"25/08/31 18:03:52 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.749153Z","level":"error","event":"25/08/31 18:03:52 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800387Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:38847/jars/hadoop-aws-3.3.6.jar with timestamp 1756663432147","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800468Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:38847/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663432147","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800532Z","level":"error","event":"25/08/31 18:03:52 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:38847/jars/ojdbc11.jar with timestamp 1756663432147","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800588Z","level":"error","event":"25/08/31 18:03:52 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800645Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800702Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800775Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800835Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800895Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.800956Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801017Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801080Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801135Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801184Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801244Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801310Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801371Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801425Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801486Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801547Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801612Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801684Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801745Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801803Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801874Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.801944Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802007Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802073Z","level":"error","event":"25/08/31 18:03:52 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802152Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802368Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802471Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802547Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802603Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802657Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802707Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802756Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802809Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802867Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.802930Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803004Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803066Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803125Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803182Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803234Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803284Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803354Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.803409Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.809893Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.809954Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.809989Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.810038Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.818943Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.822443Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.822553Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.822588Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.822620Z","level":"error","event":"25/08/31 18:03:52 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.908599Z","level":"error","event":"25/08/31 18:03:52 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.908634Z","level":"error","event":"25/08/31 18:03:52 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.908663Z","level":"error","event":"25/08/31 18:03:52 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.919149Z","level":"error","event":"25/08/31 18:03:52 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.919225Z","level":"error","event":"25/08/31 18:03:52 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.926948Z","level":"error","event":"25/08/31 18:03:52 INFO Executor: Fetching spark://f80e8a4e0fa3:38847/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663432147","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.965288Z","level":"error","event":"25/08/31 18:03:52 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:38847 after 18 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:52.971587Z","level":"error","event":"25/08/31 18:03:52 INFO Utils: Fetching spark://f80e8a4e0fa3:38847/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-2430d0ff-6c40-4818-9bfe-a1174ff21855/userFiles-f5224292-a6c5-4a34-9cc9-0832f6d664b5/fetchFileTemp5626223577269084135.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.778276Z","level":"error","event":"25/08/31 18:03:53 INFO Executor: Adding file:/tmp/spark-2430d0ff-6c40-4818-9bfe-a1174ff21855/userFiles-f5224292-a6c5-4a34-9cc9-0832f6d664b5/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.781332Z","level":"error","event":"25/08/31 18:03:53 INFO Executor: Fetching spark://f80e8a4e0fa3:38847/jars/hadoop-aws-3.3.6.jar with timestamp 1756663432147","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.781432Z","level":"error","event":"25/08/31 18:03:53 INFO Utils: Fetching spark://f80e8a4e0fa3:38847/jars/hadoop-aws-3.3.6.jar to /tmp/spark-2430d0ff-6c40-4818-9bfe-a1174ff21855/userFiles-f5224292-a6c5-4a34-9cc9-0832f6d664b5/fetchFileTemp4114744861843017916.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.790656Z","level":"error","event":"25/08/31 18:03:53 INFO Executor: Adding file:/tmp/spark-2430d0ff-6c40-4818-9bfe-a1174ff21855/userFiles-f5224292-a6c5-4a34-9cc9-0832f6d664b5/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.798130Z","level":"error","event":"25/08/31 18:03:53 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 38243.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.803507Z","level":"error","event":"25/08/31 18:03:53 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:38243","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.803691Z","level":"error","event":"25/08/31 18:03:53 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.812927Z","level":"error","event":"25/08/31 18:03:53 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 38243, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.821110Z","level":"error","event":"25/08/31 18:03:53 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:38243 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 38243, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.824173Z","level":"error","event":"25/08/31 18:03:53 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 38243, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:53.824211Z","level":"error","event":"25/08/31 18:03:53 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 38243, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122318Z","level":"error","event":"25/08/31 18:03:54 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122615Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122701Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122765Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122820Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122874Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122936Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.122989Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123044Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123097Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123147Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123192Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123258Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123330Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123379Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123435Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123488Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123541Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123596Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123648Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123698Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123749Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123800Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123853Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123907Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123952Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.123998Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.124043Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.124090Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.124136Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:54.124186Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.511779Z","level":"error","event":"25/08/31 18:03:55 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.516986Z","level":"error","event":"25/08/31 18:03:55 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.521611Z","level":"error","event":"25/08/31 18:03:55 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.532998Z","level":"error","event":"25/08/31 18:03:55 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.545329Z","level":"error","event":"25/08/31 18:03:55 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.545554Z","level":"error","event":"25/08/31 18:03:55 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.545636Z","level":"error","event":"25/08/31 18:03:55 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.551707Z","level":"error","event":"25/08/31 18:03:55 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.558809Z","level":"error","event":"25/08/31 18:03:55 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.602824Z","level":"error","event":"25/08/31 18:03:55 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.605871Z","level":"error","event":"25/08/31 18:03:55 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.605966Z","level":"error","event":"25/08/31 18:03:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-6e8d002b-4761-4ceb-9569-f6ba0ec8ca8c","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.608132Z","level":"error","event":"25/08/31 18:03:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-2430d0ff-6c40-4818-9bfe-a1174ff21855","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:03:55.610096Z","level":"error","event":"25/08/31 18:03:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-2430d0ff-6c40-4818-9bfe-a1174ff21855/pyspark-86635fa8-3b94-4eab-a498-74c8cc810511","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:26.912984","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:04:27.184637Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.348574Z","level":"error","event":"25/08/31 18:04:28 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.496097Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.500311Z","level":"error","event":"25/08/31 18:04:28 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.500440Z","level":"error","event":"25/08/31 18:04:28 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.678848Z","level":"error","event":"25/08/31 18:04:28 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.683320Z","level":"error","event":"25/08/31 18:04:28 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.683501Z","level":"error","event":"25/08/31 18:04:28 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.711851Z","level":"error","event":"25/08/31 18:04:28 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.718020Z","level":"error","event":"25/08/31 18:04:28 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.718192Z","level":"error","event":"25/08/31 18:04:28 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.718259Z","level":"error","event":"25/08/31 18:04:28 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.737980Z","level":"error","event":"25/08/31 18:04:28 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.743600Z","level":"error","event":"25/08/31 18:04:28 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.743788Z","level":"error","event":"25/08/31 18:04:28 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.796273Z","level":"error","event":"25/08/31 18:04:28 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.803566Z","level":"error","event":"25/08/31 18:04:28 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.803834Z","level":"error","event":"25/08/31 18:04:28 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.803906Z","level":"error","event":"25/08/31 18:04:28 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:28.803961Z","level":"error","event":"25/08/31 18:04:28 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.068544Z","level":"error","event":"25/08/31 18:04:29 INFO Utils: Successfully started service 'sparkDriver' on port 33421.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.089942Z","level":"error","event":"25/08/31 18:04:29 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.099402Z","level":"error","event":"25/08/31 18:04:29 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.110027Z","level":"error","event":"25/08/31 18:04:29 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.113550Z","level":"error","event":"25/08/31 18:04:29 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.113664Z","level":"error","event":"25/08/31 18:04:29 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.126556Z","level":"error","event":"25/08/31 18:04:29 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-4a1504cd-0e41-4525-9d77-1f507acee8fd","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.141726Z","level":"error","event":"25/08/31 18:04:29 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.245415Z","level":"error","event":"25/08/31 18:04:29 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.298107Z","level":"error","event":"25/08/31 18:04:29 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.302088Z","level":"error","event":"25/08/31 18:04:29 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.334956Z","level":"error","event":"25/08/31 18:04:29 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:33421/jars/hadoop-aws-3.3.6.jar with timestamp 1756663468673","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341158Z","level":"error","event":"25/08/31 18:04:29 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:33421/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663468673","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341354Z","level":"error","event":"25/08/31 18:04:29 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:33421/jars/ojdbc11.jar with timestamp 1756663468673","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341452Z","level":"error","event":"25/08/31 18:04:29 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341516Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341581Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341636Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341683Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341740Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341792Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341839Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341884Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341928Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.341981Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342028Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342076Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342125Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342193Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342244Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342291Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342353Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342400Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342448Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342499Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342549Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342597Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342646Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342696Z","level":"error","event":"25/08/31 18:04:29 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342742Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342789Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342836Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342885Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342933Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.342981Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343030Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343080Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343130Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343179Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343229Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343291Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343361Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343416Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343473Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343527Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343582Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343637Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343695Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343750Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.343803Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.349826Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.350008Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.358817Z","level":"error","event":"25/08/31 18:04:29 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.364559Z","level":"error","event":"25/08/31 18:04:29 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.364742Z","level":"error","event":"25/08/31 18:04:29 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.364814Z","level":"error","event":"25/08/31 18:04:29 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.364869Z","level":"error","event":"25/08/31 18:04:29 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.464145Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.468386Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.468545Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.477476Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.483181Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@141a8777 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.494905Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Fetching spark://f80e8a4e0fa3:33421/jars/hadoop-aws-3.3.6.jar with timestamp 1756663468673","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.535177Z","level":"error","event":"25/08/31 18:04:29 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:33421 after 17 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.541997Z","level":"error","event":"25/08/31 18:04:29 INFO Utils: Fetching spark://f80e8a4e0fa3:33421/jars/hadoop-aws-3.3.6.jar to /tmp/spark-25b3893e-0e03-4a6b-9eec-7d18c9daa582/userFiles-2c94b830-1b47-4893-9719-8b023f6c4d61/fetchFileTemp11198290208030765412.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.566364Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Adding file:/tmp/spark-25b3893e-0e03-4a6b-9eec-7d18c9daa582/userFiles-2c94b830-1b47-4893-9719-8b023f6c4d61/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.572505Z","level":"error","event":"25/08/31 18:04:29 INFO Executor: Fetching spark://f80e8a4e0fa3:33421/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663468673","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:29.572685Z","level":"error","event":"25/08/31 18:04:29 INFO Utils: Fetching spark://f80e8a4e0fa3:33421/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-25b3893e-0e03-4a6b-9eec-7d18c9daa582/userFiles-2c94b830-1b47-4893-9719-8b023f6c4d61/fetchFileTemp16853921956659296798.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.212725Z","level":"error","event":"25/08/31 18:04:30 INFO Executor: Adding file:/tmp/spark-25b3893e-0e03-4a6b-9eec-7d18c9daa582/userFiles-2c94b830-1b47-4893-9719-8b023f6c4d61/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.226482Z","level":"error","event":"25/08/31 18:04:30 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 42495.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.234920Z","level":"error","event":"25/08/31 18:04:30 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:42495","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.235167Z","level":"error","event":"25/08/31 18:04:30 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.248389Z","level":"error","event":"25/08/31 18:04:30 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 42495, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.253345Z","level":"error","event":"25/08/31 18:04:30 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:42495 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 42495, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.257211Z","level":"error","event":"25/08/31 18:04:30 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 42495, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.260225Z","level":"error","event":"25/08/31 18:04:30 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 42495, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.511657Z","level":"error","event":"25/08/31 18:04:30 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.511862Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.511911Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.511943Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.511990Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512019Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512048Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512076Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512105Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512133Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512161Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512189Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512218Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512258Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512310Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512391Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512422Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512461Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512490Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512517Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512544Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512570Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512603Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512629Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512656Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512682Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512708Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512734Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512761Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512787Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:30.512812Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.003711Z","level":"error","event":"25/08/31 18:04:32 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.003883Z","level":"error","event":"25/08/31 18:04:32 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.009925Z","level":"error","event":"25/08/31 18:04:32 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.017090Z","level":"error","event":"25/08/31 18:04:32 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.027331Z","level":"error","event":"25/08/31 18:04:32 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.031222Z","level":"error","event":"25/08/31 18:04:32 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.031395Z","level":"error","event":"25/08/31 18:04:32 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.034714Z","level":"error","event":"25/08/31 18:04:32 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.034849Z","level":"error","event":"25/08/31 18:04:32 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.071386Z","level":"error","event":"25/08/31 18:04:32 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.074317Z","level":"error","event":"25/08/31 18:04:32 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.074428Z","level":"error","event":"25/08/31 18:04:32 INFO ShutdownHookManager: Deleting directory /tmp/spark-25b3893e-0e03-4a6b-9eec-7d18c9daa582/pyspark-82e10f49-32c9-4f46-ade8-4b5e9afbd3c1","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.076430Z","level":"error","event":"25/08/31 18:04:32 INFO ShutdownHookManager: Deleting directory /tmp/spark-25b3893e-0e03-4a6b-9eec-7d18c9daa582","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:04:32.078393Z","level":"error","event":"25/08/31 18:04:32 INFO ShutdownHookManager: Deleting directory /tmp/spark-b91c721d-d957-4435-8369-96467393f14e","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:03.043372","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:05:03.324571Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.390213Z","level":"error","event":"25/08/31 18:05:04 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.541249Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.546268Z","level":"error","event":"25/08/31 18:05:04 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.546447Z","level":"error","event":"25/08/31 18:05:04 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.722583Z","level":"error","event":"25/08/31 18:05:04 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.726443Z","level":"error","event":"25/08/31 18:05:04 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.726561Z","level":"error","event":"25/08/31 18:05:04 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.744118Z","level":"error","event":"25/08/31 18:05:04 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.748563Z","level":"error","event":"25/08/31 18:05:04 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.748685Z","level":"error","event":"25/08/31 18:05:04 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.748723Z","level":"error","event":"25/08/31 18:05:04 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.764751Z","level":"error","event":"25/08/31 18:05:04 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.769567Z","level":"error","event":"25/08/31 18:05:04 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.769704Z","level":"error","event":"25/08/31 18:05:04 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.805662Z","level":"error","event":"25/08/31 18:05:04 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.812137Z","level":"error","event":"25/08/31 18:05:04 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.812358Z","level":"error","event":"25/08/31 18:05:04 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.812461Z","level":"error","event":"25/08/31 18:05:04 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.812519Z","level":"error","event":"25/08/31 18:05:04 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:04.996865Z","level":"error","event":"25/08/31 18:05:04 INFO Utils: Successfully started service 'sparkDriver' on port 36789.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.019272Z","level":"error","event":"25/08/31 18:05:05 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.030487Z","level":"error","event":"25/08/31 18:05:05 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.043463Z","level":"error","event":"25/08/31 18:05:05 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.047359Z","level":"error","event":"25/08/31 18:05:05 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.047493Z","level":"error","event":"25/08/31 18:05:05 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.062861Z","level":"error","event":"25/08/31 18:05:05 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-4db59405-aa04-4e5c-92de-2a708f130662","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.088598Z","level":"error","event":"25/08/31 18:05:05 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.184000Z","level":"error","event":"25/08/31 18:05:05 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.246591Z","level":"error","event":"25/08/31 18:05:05 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.279871Z","level":"error","event":"25/08/31 18:05:05 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:36789/jars/hadoop-aws-3.3.6.jar with timestamp 1756663504718","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.283706Z","level":"error","event":"25/08/31 18:05:05 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:36789/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663504718","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.283904Z","level":"error","event":"25/08/31 18:05:05 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:36789/jars/ojdbc11.jar with timestamp 1756663504718","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.283968Z","level":"error","event":"25/08/31 18:05:05 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284022Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284074Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284126Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284192Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284240Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284286Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284376Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284435Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284491Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284547Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284610Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284665Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284712Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284771Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284836Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284899Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.284958Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285012Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285061Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285119Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285171Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285225Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285281Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285373Z","level":"error","event":"25/08/31 18:05:05 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285433Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285500Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285554Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285607Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285655Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285709Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285763Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285811Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285862Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285911Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.285961Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286014Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286062Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286110Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286161Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286212Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286260Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286320Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286379Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286426Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.286471Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.290881Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.291047Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.297263Z","level":"error","event":"25/08/31 18:05:05 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.302091Z","level":"error","event":"25/08/31 18:05:05 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.302249Z","level":"error","event":"25/08/31 18:05:05 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.302319Z","level":"error","event":"25/08/31 18:05:05 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.302380Z","level":"error","event":"25/08/31 18:05:05 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.395972Z","level":"error","event":"25/08/31 18:05:05 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.399860Z","level":"error","event":"25/08/31 18:05:05 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.399990Z","level":"error","event":"25/08/31 18:05:05 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.406507Z","level":"error","event":"25/08/31 18:05:05 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.409948Z","level":"error","event":"25/08/31 18:05:05 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.415227Z","level":"error","event":"25/08/31 18:05:05 INFO Executor: Fetching spark://f80e8a4e0fa3:36789/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663504718","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.451574Z","level":"error","event":"25/08/31 18:05:05 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:36789 after 15 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:05.462831Z","level":"error","event":"25/08/31 18:05:05 INFO Utils: Fetching spark://f80e8a4e0fa3:36789/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-cf4dd589-7e32-48dc-b402-2940fe674e7c/userFiles-8d3b4e41-9510-4a3d-a63e-9e9570787325/fetchFileTemp3587004464458842538.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.045909Z","level":"error","event":"25/08/31 18:05:06 INFO Executor: Adding file:/tmp/spark-cf4dd589-7e32-48dc-b402-2940fe674e7c/userFiles-8d3b4e41-9510-4a3d-a63e-9e9570787325/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.052720Z","level":"error","event":"25/08/31 18:05:06 INFO Executor: Fetching spark://f80e8a4e0fa3:36789/jars/hadoop-aws-3.3.6.jar with timestamp 1756663504718","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.052894Z","level":"error","event":"25/08/31 18:05:06 INFO Utils: Fetching spark://f80e8a4e0fa3:36789/jars/hadoop-aws-3.3.6.jar to /tmp/spark-cf4dd589-7e32-48dc-b402-2940fe674e7c/userFiles-8d3b4e41-9510-4a3d-a63e-9e9570787325/fetchFileTemp12341246505707120500.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.057395Z","level":"error","event":"25/08/31 18:05:06 INFO Executor: Adding file:/tmp/spark-cf4dd589-7e32-48dc-b402-2940fe674e7c/userFiles-8d3b4e41-9510-4a3d-a63e-9e9570787325/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.066073Z","level":"error","event":"25/08/31 18:05:06 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 38481.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.072345Z","level":"error","event":"25/08/31 18:05:06 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:38481","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.072615Z","level":"error","event":"25/08/31 18:05:06 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.083285Z","level":"error","event":"25/08/31 18:05:06 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 38481, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.088642Z","level":"error","event":"25/08/31 18:05:06 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:38481 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 38481, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.093855Z","level":"error","event":"25/08/31 18:05:06 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 38481, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.094086Z","level":"error","event":"25/08/31 18:05:06 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 38481, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328308Z","level":"error","event":"25/08/31 18:05:06 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328559Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328630Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328689Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328747Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328803Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328857Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328909Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.328964Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329019Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329074Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329124Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329174Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329237Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329286Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329339Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329394Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329442Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329494Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329544Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329596Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329633Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329661Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329688Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329715Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329741Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329769Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329795Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329820Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329847Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:06.329873Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.627443Z","level":"error","event":"25/08/31 18:05:07 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.627596Z","level":"error","event":"25/08/31 18:05:07 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.633307Z","level":"error","event":"25/08/31 18:05:07 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.639387Z","level":"error","event":"25/08/31 18:05:07 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.651138Z","level":"error","event":"25/08/31 18:05:07 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.655108Z","level":"error","event":"25/08/31 18:05:07 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.655259Z","level":"error","event":"25/08/31 18:05:07 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.658366Z","level":"error","event":"25/08/31 18:05:07 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.662013Z","level":"error","event":"25/08/31 18:05:07 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.699092Z","level":"error","event":"25/08/31 18:05:07 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.703648Z","level":"error","event":"25/08/31 18:05:07 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.703776Z","level":"error","event":"25/08/31 18:05:07 INFO ShutdownHookManager: Deleting directory /tmp/spark-e9ea02fc-3f01-4f4e-9b77-ad926a18012a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.703825Z","level":"error","event":"25/08/31 18:05:07 INFO ShutdownHookManager: Deleting directory /tmp/spark-cf4dd589-7e32-48dc-b402-2940fe674e7c","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:07.706909Z","level":"error","event":"25/08/31 18:05:07 INFO ShutdownHookManager: Deleting directory /tmp/spark-cf4dd589-7e32-48dc-b402-2940fe674e7c/pyspark-1eabb885-a59c-4ede-815b-6b9a8d2028f6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:38.785807","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:05:39.153877Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.197886Z","level":"error","event":"25/08/31 18:05:40 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.347931Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.352676Z","level":"error","event":"25/08/31 18:05:40 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.352830Z","level":"error","event":"25/08/31 18:05:40 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.518165Z","level":"error","event":"25/08/31 18:05:40 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.521726Z","level":"error","event":"25/08/31 18:05:40 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.521830Z","level":"error","event":"25/08/31 18:05:40 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.539329Z","level":"error","event":"25/08/31 18:05:40 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.543752Z","level":"error","event":"25/08/31 18:05:40 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.543935Z","level":"error","event":"25/08/31 18:05:40 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.543979Z","level":"error","event":"25/08/31 18:05:40 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.563756Z","level":"error","event":"25/08/31 18:05:40 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.569341Z","level":"error","event":"25/08/31 18:05:40 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.569514Z","level":"error","event":"25/08/31 18:05:40 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.606154Z","level":"error","event":"25/08/31 18:05:40 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.611413Z","level":"error","event":"25/08/31 18:05:40 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.611592Z","level":"error","event":"25/08/31 18:05:40 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.611661Z","level":"error","event":"25/08/31 18:05:40 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.611718Z","level":"error","event":"25/08/31 18:05:40 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.846947Z","level":"error","event":"25/08/31 18:05:40 INFO Utils: Successfully started service 'sparkDriver' on port 41063.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.876110Z","level":"error","event":"25/08/31 18:05:40 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.889728Z","level":"error","event":"25/08/31 18:05:40 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.910906Z","level":"error","event":"25/08/31 18:05:40 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.916788Z","level":"error","event":"25/08/31 18:05:40 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.916993Z","level":"error","event":"25/08/31 18:05:40 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.943438Z","level":"error","event":"25/08/31 18:05:40 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-1b266214-2f1a-4559-b00a-d6e51966339a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:40.969849Z","level":"error","event":"25/08/31 18:05:40 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.096241Z","level":"error","event":"25/08/31 18:05:41 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.153587Z","level":"error","event":"25/08/31 18:05:41 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.194857Z","level":"error","event":"25/08/31 18:05:41 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:41063/jars/hadoop-aws-3.3.6.jar with timestamp 1756663540514","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199009Z","level":"error","event":"25/08/31 18:05:41 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:41063/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663540514","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199124Z","level":"error","event":"25/08/31 18:05:41 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:41063/jars/ojdbc11.jar with timestamp 1756663540514","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199164Z","level":"error","event":"25/08/31 18:05:41 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199203Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199236Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199274Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199336Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199372Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199411Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199452Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199489Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199527Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199559Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199594Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199629Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199661Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199696Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199747Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199786Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199822Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199856Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199892Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199927Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199962Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.199995Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200028Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200062Z","level":"error","event":"25/08/31 18:05:41 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200113Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200165Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200218Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200253Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200286Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200334Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200365Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200394Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200425Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200456Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200488Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200520Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200549Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200589Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200620Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200652Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200682Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200710Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200740Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200769Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.200796Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.204034Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.204159Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.217865Z","level":"error","event":"25/08/31 18:05:41 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.221785Z","level":"error","event":"25/08/31 18:05:41 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.221911Z","level":"error","event":"25/08/31 18:05:41 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.221946Z","level":"error","event":"25/08/31 18:05:41 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.221978Z","level":"error","event":"25/08/31 18:05:41 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.342087Z","level":"error","event":"25/08/31 18:05:41 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.346258Z","level":"error","event":"25/08/31 18:05:41 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.346415Z","level":"error","event":"25/08/31 18:05:41 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.359235Z","level":"error","event":"25/08/31 18:05:41 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.362917Z","level":"error","event":"25/08/31 18:05:41 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@1aea2cd3 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.374571Z","level":"error","event":"25/08/31 18:05:41 INFO Executor: Fetching spark://f80e8a4e0fa3:41063/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663540514","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.418398Z","level":"error","event":"25/08/31 18:05:41 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:41063 after 19 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:41.424016Z","level":"error","event":"25/08/31 18:05:41 INFO Utils: Fetching spark://f80e8a4e0fa3:41063/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-289cdcbc-cd01-46ce-a86a-652f2827c0ae/userFiles-d0bf9104-47a1-4b02-99f2-af364500c86a/fetchFileTemp11384707682304891447.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.009477Z","level":"error","event":"25/08/31 18:05:42 INFO Executor: Adding file:/tmp/spark-289cdcbc-cd01-46ce-a86a-652f2827c0ae/userFiles-d0bf9104-47a1-4b02-99f2-af364500c86a/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.015563Z","level":"error","event":"25/08/31 18:05:42 INFO Executor: Fetching spark://f80e8a4e0fa3:41063/jars/hadoop-aws-3.3.6.jar with timestamp 1756663540514","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.015804Z","level":"error","event":"25/08/31 18:05:42 INFO Utils: Fetching spark://f80e8a4e0fa3:41063/jars/hadoop-aws-3.3.6.jar to /tmp/spark-289cdcbc-cd01-46ce-a86a-652f2827c0ae/userFiles-d0bf9104-47a1-4b02-99f2-af364500c86a/fetchFileTemp4775380338372457432.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.021516Z","level":"error","event":"25/08/31 18:05:42 INFO Executor: Adding file:/tmp/spark-289cdcbc-cd01-46ce-a86a-652f2827c0ae/userFiles-d0bf9104-47a1-4b02-99f2-af364500c86a/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.040293Z","level":"error","event":"25/08/31 18:05:42 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 45847.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.047835Z","level":"error","event":"25/08/31 18:05:42 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:45847","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.048040Z","level":"error","event":"25/08/31 18:05:42 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.062362Z","level":"error","event":"25/08/31 18:05:42 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 45847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.070392Z","level":"error","event":"25/08/31 18:05:42 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:45847 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 45847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.078612Z","level":"error","event":"25/08/31 18:05:42 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 45847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.078844Z","level":"error","event":"25/08/31 18:05:42 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 45847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.391486Z","level":"error","event":"25/08/31 18:05:42 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.391708Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.391810Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.391875Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.391928Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.391980Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392030Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392084Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392136Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392191Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392244Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392292Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392352Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392399Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392451Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392506Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392561Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392617Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392665Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392714Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392765Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392820Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392875Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392923Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.392983Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.393035Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.393088Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.393139Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.393184Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.393230Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:42.393277Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:44.993024Z","level":"error","event":"25/08/31 18:05:44 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:44.996141Z","level":"error","event":"25/08/31 18:05:44 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.005398Z","level":"error","event":"25/08/31 18:05:45 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.015015Z","level":"error","event":"25/08/31 18:05:45 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.029612Z","level":"error","event":"25/08/31 18:05:45 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.033863Z","level":"error","event":"25/08/31 18:05:45 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.033984Z","level":"error","event":"25/08/31 18:05:45 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.038950Z","level":"error","event":"25/08/31 18:05:45 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.043467Z","level":"error","event":"25/08/31 18:05:45 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.056698Z","level":"error","event":"25/08/31 18:05:45 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.060275Z","level":"error","event":"25/08/31 18:05:45 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.060456Z","level":"error","event":"25/08/31 18:05:45 INFO ShutdownHookManager: Deleting directory /tmp/spark-289cdcbc-cd01-46ce-a86a-652f2827c0ae/pyspark-d7da8d23-b4a7-4bf8-98d7-87e1db8c6307","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.063534Z","level":"error","event":"25/08/31 18:05:45 INFO ShutdownHookManager: Deleting directory /tmp/spark-289cdcbc-cd01-46ce-a86a-652f2827c0ae","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:05:45.066211Z","level":"error","event":"25/08/31 18:05:45 INFO ShutdownHookManager: Deleting directory /tmp/spark-ce20b630-6924-4353-9214-ead1bb9b18d6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:16.245239","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:06:16.530705Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:17.683415Z","level":"error","event":"25/08/31 18:06:17 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:17.817642Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:17.820944Z","level":"error","event":"25/08/31 18:06:17 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:17.824002Z","level":"error","event":"25/08/31 18:06:17 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.022600Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.025050Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.027107Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.047421Z","level":"error","event":"25/08/31 18:06:18 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.051203Z","level":"error","event":"25/08/31 18:06:18 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.051377Z","level":"error","event":"25/08/31 18:06:18 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.051453Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.074657Z","level":"error","event":"25/08/31 18:06:18 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.077787Z","level":"error","event":"25/08/31 18:06:18 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.080080Z","level":"error","event":"25/08/31 18:06:18 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.136126Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.140675Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.140809Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.140849Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.144521Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.352094Z","level":"error","event":"25/08/31 18:06:18 INFO Utils: Successfully started service 'sparkDriver' on port 44001.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.377789Z","level":"error","event":"25/08/31 18:06:18 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.386964Z","level":"error","event":"25/08/31 18:06:18 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.398001Z","level":"error","event":"25/08/31 18:06:18 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.401455Z","level":"error","event":"25/08/31 18:06:18 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.401568Z","level":"error","event":"25/08/31 18:06:18 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.416091Z","level":"error","event":"25/08/31 18:06:18 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-c0dcbeac-5806-42a6-9bc9-3325d4595c26","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.437052Z","level":"error","event":"25/08/31 18:06:18 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.547806Z","level":"error","event":"25/08/31 18:06:18 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.613138Z","level":"error","event":"25/08/31 18:06:18 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.618981Z","level":"error","event":"25/08/31 18:06:18 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.647112Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:44001/jars/hadoop-aws-3.3.6.jar with timestamp 1756663578017","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652311Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:44001/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663578017","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652504Z","level":"error","event":"25/08/31 18:06:18 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:44001/jars/ojdbc11.jar with timestamp 1756663578017","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652608Z","level":"error","event":"25/08/31 18:06:18 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652676Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652753Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652818Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652884Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.652960Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653016Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653070Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653125Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653178Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653228Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653278Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653350Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653427Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653483Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653544Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653597Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653649Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653700Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653758Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653815Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653873Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653931Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.653987Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654037Z","level":"error","event":"25/08/31 18:06:18 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654086Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654148Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654218Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654276Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654364Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654427Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654478Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654524Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654569Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654614Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654665Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654713Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654761Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654810Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654858Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654911Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.654964Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.655014Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.655063Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.655114Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.655184Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.659719Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.659890Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.664348Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.668012Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.668159Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.668226Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.668276Z","level":"error","event":"25/08/31 18:06:18 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.746157Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.749418Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.749535Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.759977Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.765381Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@7b0df6c2 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.773612Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Fetching spark://f80e8a4e0fa3:44001/jars/hadoop-aws-3.3.6.jar with timestamp 1756663578017","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.814339Z","level":"error","event":"25/08/31 18:06:18 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:44001 after 19 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.820819Z","level":"error","event":"25/08/31 18:06:18 INFO Utils: Fetching spark://f80e8a4e0fa3:44001/jars/hadoop-aws-3.3.6.jar to /tmp/spark-817e71ab-c175-4c1f-b98f-ea9c73e54195/userFiles-c9663cd5-12c7-493f-8a58-ced1fa27ee76/fetchFileTemp16111130181490831815.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.848051Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Adding file:/tmp/spark-817e71ab-c175-4c1f-b98f-ea9c73e54195/userFiles-c9663cd5-12c7-493f-8a58-ced1fa27ee76/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.855813Z","level":"error","event":"25/08/31 18:06:18 INFO Executor: Fetching spark://f80e8a4e0fa3:44001/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663578017","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:18.856106Z","level":"error","event":"25/08/31 18:06:18 INFO Utils: Fetching spark://f80e8a4e0fa3:44001/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-817e71ab-c175-4c1f-b98f-ea9c73e54195/userFiles-c9663cd5-12c7-493f-8a58-ced1fa27ee76/fetchFileTemp4415470899618146867.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.458976Z","level":"error","event":"25/08/31 18:06:19 INFO Executor: Adding file:/tmp/spark-817e71ab-c175-4c1f-b98f-ea9c73e54195/userFiles-c9663cd5-12c7-493f-8a58-ced1fa27ee76/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.469547Z","level":"error","event":"25/08/31 18:06:19 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 34021.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.473128Z","level":"error","event":"25/08/31 18:06:19 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:34021","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.473253Z","level":"error","event":"25/08/31 18:06:19 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.485981Z","level":"error","event":"25/08/31 18:06:19 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 34021, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.491726Z","level":"error","event":"25/08/31 18:06:19 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:34021 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 34021, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.496647Z","level":"error","event":"25/08/31 18:06:19 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 34021, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.496813Z","level":"error","event":"25/08/31 18:06:19 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 34021, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710121Z","level":"error","event":"25/08/31 18:06:19 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710280Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710330Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710364Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710399Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710426Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710455Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710483Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710510Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710537Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710565Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710592Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710620Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710660Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710688Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710716Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710744Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710770Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710797Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710824Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710851Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710878Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710904Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710930Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710956Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.710981Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.711008Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.711040Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.711073Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.711100Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:19.711126Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.032594Z","level":"error","event":"25/08/31 18:06:21 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.034349Z","level":"error","event":"25/08/31 18:06:21 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.038126Z","level":"error","event":"25/08/31 18:06:21 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.044061Z","level":"error","event":"25/08/31 18:06:21 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.053675Z","level":"error","event":"25/08/31 18:06:21 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.056738Z","level":"error","event":"25/08/31 18:06:21 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.056834Z","level":"error","event":"25/08/31 18:06:21 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.058921Z","level":"error","event":"25/08/31 18:06:21 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.061403Z","level":"error","event":"25/08/31 18:06:21 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.098066Z","level":"error","event":"25/08/31 18:06:21 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.100906Z","level":"error","event":"25/08/31 18:06:21 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.100990Z","level":"error","event":"25/08/31 18:06:21 INFO ShutdownHookManager: Deleting directory /tmp/spark-817e71ab-c175-4c1f-b98f-ea9c73e54195","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.102948Z","level":"error","event":"25/08/31 18:06:21 INFO ShutdownHookManager: Deleting directory /tmp/spark-817e71ab-c175-4c1f-b98f-ea9c73e54195/pyspark-48a3200f-5c5b-414e-8231-4babd571fb12","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:21.104752Z","level":"error","event":"25/08/31 18:06:21 INFO ShutdownHookManager: Deleting directory /tmp/spark-84f139e6-7172-4c68-bb62-5cebd057f47f","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:52.126667","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:06:52.399950Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:53.682102Z","level":"error","event":"25/08/31 18:06:53 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:53.864484Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:53.867557Z","level":"error","event":"25/08/31 18:06:53 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:53.870333Z","level":"error","event":"25/08/31 18:06:53 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:53.999819Z","level":"error","event":"25/08/31 18:06:53 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.004501Z","level":"error","event":"25/08/31 18:06:54 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.004619Z","level":"error","event":"25/08/31 18:06:54 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.036268Z","level":"error","event":"25/08/31 18:06:54 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.045693Z","level":"error","event":"25/08/31 18:06:54 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.045827Z","level":"error","event":"25/08/31 18:06:54 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.045867Z","level":"error","event":"25/08/31 18:06:54 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.068794Z","level":"error","event":"25/08/31 18:06:54 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.072826Z","level":"error","event":"25/08/31 18:06:54 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.076761Z","level":"error","event":"25/08/31 18:06:54 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.137338Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.137403Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.137450Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.137499Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.137549Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.434932Z","level":"error","event":"25/08/31 18:06:54 INFO Utils: Successfully started service 'sparkDriver' on port 46723.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.457782Z","level":"error","event":"25/08/31 18:06:54 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.463754Z","level":"error","event":"25/08/31 18:06:54 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.475776Z","level":"error","event":"25/08/31 18:06:54 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.475879Z","level":"error","event":"25/08/31 18:06:54 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.477878Z","level":"error","event":"25/08/31 18:06:54 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.494403Z","level":"error","event":"25/08/31 18:06:54 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-97c4de5d-78b0-4e10-b9c1-b4866ed24fd6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.509010Z","level":"error","event":"25/08/31 18:06:54 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.606732Z","level":"error","event":"25/08/31 18:06:54 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.662482Z","level":"error","event":"25/08/31 18:06:54 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.675713Z","level":"error","event":"25/08/31 18:06:54 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.719500Z","level":"error","event":"25/08/31 18:06:54 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:46723/jars/hadoop-aws-3.3.6.jar with timestamp 1756663613995","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726086Z","level":"error","event":"25/08/31 18:06:54 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:46723/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663613995","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726282Z","level":"error","event":"25/08/31 18:06:54 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:46723/jars/ojdbc11.jar with timestamp 1756663613995","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726407Z","level":"error","event":"25/08/31 18:06:54 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726478Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726544Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726605Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726642Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726674Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726706Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726736Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726768Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726799Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726828Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726860Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726890Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726923Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.726954Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727003Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727034Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727067Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727110Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727155Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727185Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727214Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727244Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727274Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727324Z","level":"error","event":"25/08/31 18:06:54 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727356Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727385Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727415Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727463Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727501Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727530Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727560Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727595Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727624Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727661Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727692Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727720Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727754Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727784Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727813Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727842Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727869Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727899Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727928Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727956Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.727985Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.732691Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.732838Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.743879Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.747937Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.748056Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.748092Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.748124Z","level":"error","event":"25/08/31 18:06:54 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.863334Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.868938Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.869119Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.882749Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.882897Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.893189Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Fetching spark://f80e8a4e0fa3:46723/jars/hadoop-aws-3.3.6.jar with timestamp 1756663613995","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.937647Z","level":"error","event":"25/08/31 18:06:54 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:46723 after 20 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.947350Z","level":"error","event":"25/08/31 18:06:54 INFO Utils: Fetching spark://f80e8a4e0fa3:46723/jars/hadoop-aws-3.3.6.jar to /tmp/spark-a0d17889-8e63-4852-b0de-dc264dd73cce/userFiles-f1e45cb3-b2e6-4c0a-b206-8ba3a2cbfcc1/fetchFileTemp15532846729937280711.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.970259Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Adding file:/tmp/spark-a0d17889-8e63-4852-b0de-dc264dd73cce/userFiles-f1e45cb3-b2e6-4c0a-b206-8ba3a2cbfcc1/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.976311Z","level":"error","event":"25/08/31 18:06:54 INFO Executor: Fetching spark://f80e8a4e0fa3:46723/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663613995","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:54.976488Z","level":"error","event":"25/08/31 18:06:54 INFO Utils: Fetching spark://f80e8a4e0fa3:46723/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-a0d17889-8e63-4852-b0de-dc264dd73cce/userFiles-f1e45cb3-b2e6-4c0a-b206-8ba3a2cbfcc1/fetchFileTemp12118979274878013640.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.607983Z","level":"error","event":"25/08/31 18:06:55 INFO Executor: Adding file:/tmp/spark-a0d17889-8e63-4852-b0de-dc264dd73cce/userFiles-f1e45cb3-b2e6-4c0a-b206-8ba3a2cbfcc1/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.615025Z","level":"error","event":"25/08/31 18:06:55 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 43079.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.618167Z","level":"error","event":"25/08/31 18:06:55 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:43079","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.618282Z","level":"error","event":"25/08/31 18:06:55 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.626134Z","level":"error","event":"25/08/31 18:06:55 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 43079, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.630140Z","level":"error","event":"25/08/31 18:06:55 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:43079 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 43079, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.632350Z","level":"error","event":"25/08/31 18:06:55 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 43079, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.634621Z","level":"error","event":"25/08/31 18:06:55 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 43079, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914411Z","level":"error","event":"25/08/31 18:06:55 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914632Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914719Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914775Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914824Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914870Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914918Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.914965Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915013Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915059Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915106Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915150Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915197Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915243Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915287Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915344Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915390Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915436Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915479Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915523Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915568Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915611Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915652Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915710Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915765Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915817Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915869Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915920Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.915974Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.916026Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:55.916078Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.541830Z","level":"error","event":"25/08/31 18:06:57 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.545222Z","level":"error","event":"25/08/31 18:06:57 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.549874Z","level":"error","event":"25/08/31 18:06:57 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.563517Z","level":"error","event":"25/08/31 18:06:57 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.574004Z","level":"error","event":"25/08/31 18:06:57 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.579159Z","level":"error","event":"25/08/31 18:06:57 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.579344Z","level":"error","event":"25/08/31 18:06:57 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.589157Z","level":"error","event":"25/08/31 18:06:57 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.594492Z","level":"error","event":"25/08/31 18:06:57 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.637808Z","level":"error","event":"25/08/31 18:06:57 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.640862Z","level":"error","event":"25/08/31 18:06:57 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.640952Z","level":"error","event":"25/08/31 18:06:57 INFO ShutdownHookManager: Deleting directory /tmp/spark-f1e7e8fb-ed7f-4dd5-ba8a-3921692d3ac6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.642716Z","level":"error","event":"25/08/31 18:06:57 INFO ShutdownHookManager: Deleting directory /tmp/spark-a0d17889-8e63-4852-b0de-dc264dd73cce","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:06:57.644583Z","level":"error","event":"25/08/31 18:06:57 INFO ShutdownHookManager: Deleting directory /tmp/spark-a0d17889-8e63-4852-b0de-dc264dd73cce/pyspark-7d01c881-7dbe-4979-9ff0-3827eb1f2dbc","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:28.760214","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:07:29.039963Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.254868Z","level":"error","event":"25/08/31 18:07:30 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.426064Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.431077Z","level":"error","event":"25/08/31 18:07:30 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.431289Z","level":"error","event":"25/08/31 18:07:30 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.615838Z","level":"error","event":"25/08/31 18:07:30 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.620060Z","level":"error","event":"25/08/31 18:07:30 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.620178Z","level":"error","event":"25/08/31 18:07:30 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.642095Z","level":"error","event":"25/08/31 18:07:30 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.648282Z","level":"error","event":"25/08/31 18:07:30 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.648459Z","level":"error","event":"25/08/31 18:07:30 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.648521Z","level":"error","event":"25/08/31 18:07:30 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.670924Z","level":"error","event":"25/08/31 18:07:30 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.675817Z","level":"error","event":"25/08/31 18:07:30 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.680710Z","level":"error","event":"25/08/31 18:07:30 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.726120Z","level":"error","event":"25/08/31 18:07:30 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.733346Z","level":"error","event":"25/08/31 18:07:30 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.733509Z","level":"error","event":"25/08/31 18:07:30 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.733551Z","level":"error","event":"25/08/31 18:07:30 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.733607Z","level":"error","event":"25/08/31 18:07:30 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.960264Z","level":"error","event":"25/08/31 18:07:30 INFO Utils: Successfully started service 'sparkDriver' on port 32905.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.978699Z","level":"error","event":"25/08/31 18:07:30 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.987150Z","level":"error","event":"25/08/31 18:07:30 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:30.997400Z","level":"error","event":"25/08/31 18:07:30 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.000970Z","level":"error","event":"25/08/31 18:07:30 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.001131Z","level":"error","event":"25/08/31 18:07:30 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.013877Z","level":"error","event":"25/08/31 18:07:31 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-01041e97-3400-4de2-b6a8-2ce527bd9201","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.029491Z","level":"error","event":"25/08/31 18:07:31 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.118947Z","level":"error","event":"25/08/31 18:07:31 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.169804Z","level":"error","event":"25/08/31 18:07:31 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.212659Z","level":"error","event":"25/08/31 18:07:31 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://f80e8a4e0fa3:32905/jars/hadoop-aws-3.3.6.jar with timestamp 1756663650612","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217096Z","level":"error","event":"25/08/31 18:07:31 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://f80e8a4e0fa3:32905/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663650612","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217226Z","level":"error","event":"25/08/31 18:07:31 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://f80e8a4e0fa3:32905/jars/ojdbc11.jar with timestamp 1756663650612","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217268Z","level":"error","event":"25/08/31 18:07:31 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217314Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217355Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217386Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217415Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217454Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217484Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217512Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217552Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217606Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217667Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217723Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217778Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217831Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217885Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.217944Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218001Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218055Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218115Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218173Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218228Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218261Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218294Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218343Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218377Z","level":"error","event":"25/08/31 18:07:31 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218407Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218436Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218477Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218508Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218536Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218564Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218594Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218621Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218648Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218675Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218703Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218731Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218758Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218787Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218816Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218846Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218873Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218900Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218926Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218952Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.218979Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.223201Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.223379Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.237004Z","level":"error","event":"25/08/31 18:07:31 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.240840Z","level":"error","event":"25/08/31 18:07:31 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.240993Z","level":"error","event":"25/08/31 18:07:31 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.241031Z","level":"error","event":"25/08/31 18:07:31 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.241063Z","level":"error","event":"25/08/31 18:07:31 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.376848Z","level":"error","event":"25/08/31 18:07:31 INFO Executor: Starting executor ID driver on host f80e8a4e0fa3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.381855Z","level":"error","event":"25/08/31 18:07:31 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.382043Z","level":"error","event":"25/08/31 18:07:31 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.395596Z","level":"error","event":"25/08/31 18:07:31 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.399098Z","level":"error","event":"25/08/31 18:07:31 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.412672Z","level":"error","event":"25/08/31 18:07:31 INFO Executor: Fetching spark://f80e8a4e0fa3:32905/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756663650612","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.450263Z","level":"error","event":"25/08/31 18:07:31 INFO TransportClientFactory: Successfully created connection to f80e8a4e0fa3/172.18.0.11:32905 after 16 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:31.457225Z","level":"error","event":"25/08/31 18:07:31 INFO Utils: Fetching spark://f80e8a4e0fa3:32905/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-0a13002b-172b-44c7-bbb7-bf73e6f75c06/userFiles-4eb30317-9619-4823-9411-0de7a1dd6d61/fetchFileTemp7913636538416511706.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.183587Z","level":"error","event":"25/08/31 18:07:32 INFO Executor: Adding file:/tmp/spark-0a13002b-172b-44c7-bbb7-bf73e6f75c06/userFiles-4eb30317-9619-4823-9411-0de7a1dd6d61/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.196505Z","level":"error","event":"25/08/31 18:07:32 INFO Executor: Fetching spark://f80e8a4e0fa3:32905/jars/hadoop-aws-3.3.6.jar with timestamp 1756663650612","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.196684Z","level":"error","event":"25/08/31 18:07:32 INFO Utils: Fetching spark://f80e8a4e0fa3:32905/jars/hadoop-aws-3.3.6.jar to /tmp/spark-0a13002b-172b-44c7-bbb7-bf73e6f75c06/userFiles-4eb30317-9619-4823-9411-0de7a1dd6d61/fetchFileTemp1823896056870647095.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.196752Z","level":"error","event":"25/08/31 18:07:32 INFO Executor: Adding file:/tmp/spark-0a13002b-172b-44c7-bbb7-bf73e6f75c06/userFiles-4eb30317-9619-4823-9411-0de7a1dd6d61/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.206329Z","level":"error","event":"25/08/31 18:07:32 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 39847.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.213420Z","level":"error","event":"25/08/31 18:07:32 INFO NettyBlockTransferService: Server created on f80e8a4e0fa3:39847","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.213886Z","level":"error","event":"25/08/31 18:07:32 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.225096Z","level":"error","event":"25/08/31 18:07:32 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, f80e8a4e0fa3, 39847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.231053Z","level":"error","event":"25/08/31 18:07:32 INFO BlockManagerMasterEndpoint: Registering block manager f80e8a4e0fa3:39847 with 434.4 MiB RAM, BlockManagerId(driver, f80e8a4e0fa3, 39847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.234989Z","level":"error","event":"25/08/31 18:07:32 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, f80e8a4e0fa3, 39847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.235144Z","level":"error","event":"25/08/31 18:07:32 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, f80e8a4e0fa3, 39847, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.477798Z","level":"error","event":"25/08/31 18:07:32 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.477962Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478008Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478046Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478078Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478108Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478145Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478180Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478210Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478239Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478268Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478296Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478342Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478376Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478417Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478447Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478475Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478503Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478530Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478558Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478588Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478617Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478644Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478671Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478698Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478725Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478753Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478782Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478809Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478837Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:32.478864Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.016490Z","level":"error","event":"25/08/31 18:07:34 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.016663Z","level":"error","event":"25/08/31 18:07:34 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.025765Z","level":"error","event":"25/08/31 18:07:34 INFO SparkUI: Stopped Spark web UI at http://f80e8a4e0fa3:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.036460Z","level":"error","event":"25/08/31 18:07:34 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.051138Z","level":"error","event":"25/08/31 18:07:34 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.055406Z","level":"error","event":"25/08/31 18:07:34 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.055592Z","level":"error","event":"25/08/31 18:07:34 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.061902Z","level":"error","event":"25/08/31 18:07:34 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.067052Z","level":"error","event":"25/08/31 18:07:34 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.112249Z","level":"error","event":"25/08/31 18:07:34 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.112463Z","level":"error","event":"25/08/31 18:07:34 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.116767Z","level":"error","event":"25/08/31 18:07:34 INFO ShutdownHookManager: Deleting directory /tmp/spark-b2c33d06-8159-492b-a39a-3a7debea57c4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.121273Z","level":"error","event":"25/08/31 18:07:34 INFO ShutdownHookManager: Deleting directory /tmp/spark-0a13002b-172b-44c7-bbb7-bf73e6f75c06","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:07:34.125674Z","level":"error","event":"25/08/31 18:07:34 INFO ShutdownHookManager: Deleting directory /tmp/spark-0a13002b-172b-44c7-bbb7-bf73e6f75c06/pyspark-ec50ca57-93c5-457a-9862-4549f741cfca","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:04.536042","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:08:04.841027Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.895153Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.968935Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.969150Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.975320Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.980433Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.980612Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-cb588c68-47c8-40d3-9363-744244a344e9;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:05.980670Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:09.318479Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:09.556801Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.jar ...","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.403825Z","level":"error","event":"\t[SUCCESSFUL ] org.apache.iceberg#iceberg-aws-bundle;1.9.2!iceberg-aws-bundle.jar (10075ms)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407707Z","level":"error","event":":: resolution report :: resolve 3350ms :: artifacts dl 10078ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407807Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407845Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407878Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407909Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407937Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407965Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.407993Z","level":"error","event":"\t|      default     |   2   |   1   |   1   |   0   ||   1   |   1   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.408022Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428229Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428371Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428423Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428454Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428489Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428517Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.428546Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431053Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431146Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431184Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431216Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431246Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431275Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431312Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431342Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431377Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431418Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431466Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431510Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431552Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431593Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431623Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431653Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431681Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431713Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431744Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431772Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431801Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431830Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431859Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431888Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431915Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431944Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.431972Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432001Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432028Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432057Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432085Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432113Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432140Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432167Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432193Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432222Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432250Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432281Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432316Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432346Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432375Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432402Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432430Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432459Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432489Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432518Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432546Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432574Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432603Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432630Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432658Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432685Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432712Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.432738Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:19.441264","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:08:50.446536","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:08:50.753308Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.602622Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.643822Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.644095Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.648967Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.649070Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.649107Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-74700e5f-8382-4516-ad33-970796ad08b7;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:51.649139Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799204Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799506Z","level":"error","event":":: resolution report :: resolve 3140ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799553Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799588Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799624Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799654Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799684Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799717Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799747Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799781Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799813Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799848Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799876Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799916Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799946Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.799976Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800004Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800036Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800066Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800095Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800125Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800157Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800188Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800221Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800248Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800278Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800311Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800339Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800395Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800424Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800453Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800480Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800512Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800540Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800567Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800597Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800624Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800652Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800679Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800709Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800735Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800761Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800792Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800819Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800849Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800877Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800907Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800935Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800962Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.800989Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801018Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801044Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801076Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801103Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801132Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801159Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801187Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801219Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801245Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801271Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801302Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801337Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801367Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801395Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801422Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801453Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801483Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801510Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801538Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801567Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.801593Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:08:54.833317","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:09:25.787899","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:09:26.069643Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.783196Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.826008Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.826143Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.829583Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.829681Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.829720Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-cd7fb337-358a-491c-a923-b09285a00df8;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:26.829751Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.000917Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.009136Z","level":"error","event":":: resolution report :: resolve 3178ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014223Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014329Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014368Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014400Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014428Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014456Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014483Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014510Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014537Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014567Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014594Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014623Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014651Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014678Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014706Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014733Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014762Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014789Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014815Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014842Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014869Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014896Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014923Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014950Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.014985Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015013Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015039Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015065Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015091Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015116Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015142Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015167Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015194Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015220Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015245Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015270Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015302Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015330Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015359Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015386Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015413Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015440Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015468Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015494Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015520Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015545Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015571Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015596Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015622Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015647Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015673Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015702Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015729Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015754Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015781Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015808Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015832Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015858Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015884Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015911Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015937Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015963Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.015990Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.016017Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.016042Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.016068Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.016094Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.016120Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.016145Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:09:30.081876","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:10:00.199837","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:10:00.489555Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.320153Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.370202Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.370468Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.375335Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.375484Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.375522Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-cd39d5c7-77d5-4c26-8969-2286ef5f56f5;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:01.375555Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.194016Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.202355Z","level":"error","event":":: resolution report :: resolve 2826ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.206943Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207058Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207096Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207128Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207158Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207188Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207218Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207248Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207278Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207315Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207356Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207387Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207416Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207447Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207476Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207505Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207535Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207563Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207592Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207626Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207670Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207713Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207746Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207775Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207804Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207832Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207861Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207890Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207918Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207946Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.207975Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208002Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208039Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208068Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208097Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208127Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208167Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208200Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208228Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208257Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208286Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208321Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208353Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208383Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208413Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208442Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208471Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208499Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208527Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208554Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208584Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208611Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208640Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208667Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208695Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208724Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208751Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208778Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208806Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208835Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208864Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208892Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208919Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208951Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.208978Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.209006Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.209033Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.209059Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.209086Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:10:04.292841","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:10:34.884159","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:10:35.151883Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:32.622331","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:12:35.432703Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.432919Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.432999Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.433062Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.433122Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.433426Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.433517Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-927296b4-8f24-4009-b491-0fd6db269ee0;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:35.433577Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:39.309253Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:12:40.508867Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.jar ...","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:02.623681","level":"error","event":"Process timed out, PID: 36","logger":"airflow.utils.timeout.TimeoutPosix"}
{"timestamp":"2025-08-31T18:13:02.624230","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"AirflowTaskTimeout","exc_value":"DagBag import timeout for /opt/airflow/dags/main.py after 30.0s.\nPlease take a look at these docs to improve your DAG import time:\n* https://airflow.apache.org/docs/apache-airflow/3.0.0/best-practices.html#top-level-python-code\n* https://airflow.apache.org/docs/apache-airflow/3.0.0/best-practices.html#reducing-dag-complexity, PID: 36","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":107,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":108,"name":"launch_gateway"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/utils/timeout.py","lineno":69,"name":"handle_timeout"}]}]}
{"timestamp":"2025-08-31T18:13:06.877766Z","level":"error","event":"\t[SUCCESSFUL ] org.apache.iceberg#iceberg-aws-bundle;1.9.2!iceberg-aws-bundle.jar (27563ms)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.881883Z","level":"error","event":":: resolution report :: resolve 4141ms :: artifacts dl 27565ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.881978Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882015Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882048Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882078Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882108Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882145Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882175Z","level":"error","event":"\t|      default     |   2   |   1   |   1   |   0   ||   1   |   1   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882204Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882232Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882262Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882290Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882323Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882353Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882382Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882412Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882439Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882469Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882495Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882522Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882548Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882574Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882600Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882627Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882653Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882680Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882706Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882733Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882761Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882789Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882815Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882841Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882866Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882896Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882923Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882950Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.882977Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883003Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883029Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883055Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883082Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883108Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883133Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883159Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883184Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883210Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883235Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883262Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883288Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883318Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883347Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883375Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883404Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883431Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883459Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883486Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883512Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883537Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883562Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883588Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883618Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883646Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883674Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883702Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883729Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883755Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883780Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883806Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883832Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:06.883858Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:36.992831","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:13:38.390015Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.183138Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.230642Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.230785Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.234428Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.234521Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.234558Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-eb19fbd0-e31e-4042-88aa-af0f86261164;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:39.234589Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.210361Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.219528Z","level":"error","event":":: resolution report :: resolve 2983ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.224796Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.224910Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.224959Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.224992Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225039Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225072Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225101Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225130Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225160Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225190Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225218Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225247Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225276Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225311Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225339Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225403Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225433Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225462Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225491Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225518Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225547Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225574Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225603Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225630Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225657Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225684Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225711Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225738Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225770Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225799Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225826Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225854Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225883Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225911Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225939Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225966Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.225994Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226023Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226051Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226078Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226106Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226133Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226160Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226186Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226213Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226241Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226269Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226299Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226330Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226363Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226391Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226418Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226446Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226473Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226501Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226535Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226562Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226589Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226617Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226645Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226675Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226703Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226732Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226759Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226787Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226814Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226841Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226869Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.226897Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:13:42.341607","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":107,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:14:13.162454","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:14:13.420482Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.137285Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.181409Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.187178Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.187317Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.187390Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.187448Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-212d6194-ece0-4a1f-bd86-71da1d8f7fa5;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:14.187500Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.228998Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240196Z","level":"error","event":":: resolution report :: resolve 3049ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240479Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240532Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240567Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240604Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240635Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240667Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240697Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240725Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240756Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240786Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240819Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240848Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240877Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240907Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240944Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.240973Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241006Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241038Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241071Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241116Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241148Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241178Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241210Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241238Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241272Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241306Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241337Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241365Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241393Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241422Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241454Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241483Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241510Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241546Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241577Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241605Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241636Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241663Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241691Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241717Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241752Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241781Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241810Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241837Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241866Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241893Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241925Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241954Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.241981Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242008Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242038Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242066Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242094Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242124Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242154Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242183Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242211Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242238Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242268Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242309Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242347Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242380Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242418Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242449Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242477Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242503Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242532Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242561Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.242588Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:14:17.340634","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":107,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:15:46.285404","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:15:48.623088Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.745402Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.905589Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.912966Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.913209Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.913319Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.921378Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-0678850f-f64c-4168-a36d-eb175622068c;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:48.921704Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:52.956697Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:15:53.228293Z","level":"error","event":"downloading https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.jar ...","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.787319Z","level":"error","event":"\t[SUCCESSFUL ] org.apache.iceberg#iceberg-aws-bundle;1.9.2!iceberg-aws-bundle.jar (22824ms)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.796582Z","level":"error","event":":: resolution report :: resolve 4046ms :: artifacts dl 22828ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.796733Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.796805Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.796865Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.796919Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.796972Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797026Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797078Z","level":"error","event":"\t|      default     |   2   |   1   |   1   |   0   ||   1   |   1   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797129Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797182Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797239Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797293Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797359Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797413Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797464Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797518Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797569Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797623Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797673Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797727Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797781Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797834Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797884Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797936Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.797987Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798055Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798108Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798161Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798214Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798265Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798325Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798377Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798428Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798479Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798530Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798583Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798634Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798684Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798734Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798785Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798837Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798887Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.798942Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799003Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799065Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799125Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799186Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799249Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799320Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799384Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799445Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799506Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799574Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799638Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799701Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799766Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799828Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799888Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.799948Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800013Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800079Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800147Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800208Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800271Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800355Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800424Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800488Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800550Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800615Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.800679Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:15.861035","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:16:46.031187","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:16:46.305775Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.033914Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.079030Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.079193Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.083477Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.083583Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.083622Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-d989de8e-3380-4f55-b6d5-ffcbe94d83cc;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:47.083654Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.217931Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.227169Z","level":"error","event":":: resolution report :: resolve 3142ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.227315Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231154Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231254Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231293Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231331Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231375Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231411Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231442Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231472Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231503Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231542Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231573Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231603Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231632Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231662Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231690Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231719Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231747Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231776Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231803Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231831Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231858Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231887Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231915Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231945Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.231972Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232000Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232027Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232054Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232081Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232107Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232134Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232161Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232190Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232218Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232246Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232273Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232308Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232340Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232368Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232396Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232425Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232454Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232483Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232511Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232538Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232565Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232592Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232619Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232646Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232674Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232701Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232729Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232756Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232783Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232810Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232859Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232894Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232930Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232965Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.232996Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233026Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233053Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233090Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233118Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233148Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233175Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233202Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.233233Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:16:50.311892","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:17:21.125238","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:17:21.430683Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.303714Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.353273Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.353557Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.360115Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.360266Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.360329Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-1414b7c9-c88d-4023-a5af-b7730ebf47e2;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:22.360408Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.841788Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.849568Z","level":"error","event":":: resolution report :: resolve 2489ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855038Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855148Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855188Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855220Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855254Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855284Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855321Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855351Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855381Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855412Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855443Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855473Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855506Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855538Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855567Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855595Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855626Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855655Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855686Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855715Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855743Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855772Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855800Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855828Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855867Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855896Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855925Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855952Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.855981Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856008Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856036Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856063Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856091Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856120Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856147Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856175Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856201Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856228Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856255Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856284Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856317Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856365Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856396Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856426Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856456Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856483Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856513Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856540Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856567Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856594Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856625Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856653Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856681Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856709Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856737Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856765Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856792Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856819Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856848Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856879Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856909Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856937Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856964Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.856992Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.857020Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.857047Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.857074Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.857101Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.857129Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:17:24.911474","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:21:34.994964","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:21:37.473712Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.475386Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.568446Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.568709Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.578618Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.578873Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.585396Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-da39c588-898a-484e-a5f9-a28eb61d5d00;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:37.585698Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.944058Z","level":"error","event":":: resolution report :: resolve 5364ms :: artifacts dl 0ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.944194Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.946927Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947015Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947050Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947081Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947110Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   0   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947140Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947171Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947202Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947233Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947264Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947311Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947346Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947376Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947404Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947434Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947463Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947491Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947519Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947546Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947573Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947602Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947630Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947658Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947703Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947730Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947757Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947787Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947816Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947844Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947872Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947900Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947937Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.947976Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948014Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948044Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948071Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948100Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948133Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948162Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948189Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948216Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948250Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948281Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948322Z","level":"error","event":"\tproblem while downloading module descriptor: https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.pom: impossible to move part file to definitive one: /home/airflow/.ivy2.5.2/cache/org.apache.iceberg/iceberg-aws-bundle/ivy-1.9.2.xml.original.part -> /home/airflow/.ivy2.5.2/cache/org.apache.iceberg/iceberg-aws-bundle/ivy-1.9.2.xml.original (306ms)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948355Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948384Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-aws-bundle;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948412Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948441Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948469Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948497Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948524Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948552Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-aws-bundle;1.9.2!iceberg-aws-bundle.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948581Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948607Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948635Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948662Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948690Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948718Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-aws-bundle/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948745Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948772Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-aws-bundle;1.9.2!iceberg-aws-bundle.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948800Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948828Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-aws-bundle/1.9.2/jars/iceberg-aws-bundle.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948860Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948888Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948917Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948944Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.948973Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949000Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949028Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949056Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949082Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949109Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-aws-bundle;1.9.2!iceberg-aws-bundle.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949136Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949162Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-aws-bundle/1.9.2/iceberg-aws-bundle-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949188Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949214Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949240Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949266Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949293Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949327Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949356Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949383Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949411Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949438Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-aws-bundle;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949464Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949491Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949517Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949543Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949569Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.949595Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952160Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found, unresolved dependency: org.apache.iceberg#iceberg-aws-bundle;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952249Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952286Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952321Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952368Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952399Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952428Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952457Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952485Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952514Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:42.952543Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:21:43.042337","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:22:13.967182","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:22:14.273252Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:14.961051Z","level":"error","event":":: loading settings :: url = jar:file:/home/airflow/.local/lib/python3.12/site-packages/pyspark/jars/ivy-2.5.3.jar!/org/apache/ivy/core/settings/ivysettings.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:15.016357Z","level":"error","event":"Ivy Default Cache set to: /home/airflow/.ivy2.5.2/cache","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:15.020182Z","level":"error","event":"The jars for the packages stored in: /home/airflow/.ivy2.5.2/jars","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:15.020285Z","level":"error","event":"org.apache.iceberg#iceberg-spark-runtime-4.0_2.13 added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:15.020334Z","level":"error","event":"org.apache.iceberg#iceberg-aws-bundle added as a dependency","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:15.020367Z","level":"error","event":":: resolving dependencies :: org.apache.spark#spark-submit-parent-bc245246-68a4-4c5d-b38e-9951b547a397;1.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:15.020397Z","level":"error","event":"\tconfs: [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.121017Z","level":"error","event":"\tfound org.apache.iceberg#iceberg-aws-bundle;1.9.2 in central","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132275Z","level":"error","event":":: resolution report :: resolve 3106ms :: artifacts dl 2ms","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132594Z","level":"error","event":"\t:: modules in use:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132642Z","level":"error","event":"\torg.apache.iceberg#iceberg-aws-bundle;1.9.2 from central in [default]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132678Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132711Z","level":"error","event":"\t|                  |            modules            ||   artifacts   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132740Z","level":"error","event":"\t|       conf       | number| search|dwnlded|evicted|| number|dwnlded|","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132768Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132795Z","level":"error","event":"\t|      default     |   2   |   0   |   0   |   0   ||   1   |   0   |","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132825Z","level":"error","event":"\t---------------------------------------------------------------------","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132854Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132883Z","level":"error","event":":: problems summary ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132911Z","level":"error","event":":::: WARNINGS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132940Z","level":"error","event":"\t\tmodule not found: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.132971Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133001Z","level":"error","event":"\t==== local-m2-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133029Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133056Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133091Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133127Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133157Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133185Z","level":"error","event":"\t  file:/home/airflow/.m2/repository/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133213Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133240Z","level":"error","event":"\t==== local-ivy-cache: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133272Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133317Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/ivys/ivy.xml","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133347Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133376Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133402Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133428Z","level":"error","event":"\t  /home/airflow/.ivy2.5.2/local/org.apache.iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/jars/iceberg-spark-runtime-4.0_2.13.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133455Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133481Z","level":"error","event":"\t==== central: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133508Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133534Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133561Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133590Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133617Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133647Z","level":"error","event":"\t  https://repo1.maven.org/maven2/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133673Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133699Z","level":"error","event":"\t==== spark-packages: tried","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133728Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133755Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.pom","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133788Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133819Z","level":"error","event":"\t  -- artifact org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2!iceberg-spark-runtime-4.0_2.13.jar:","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133848Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133880Z","level":"error","event":"\t  https://repos.spark-packages.org/org/apache/iceberg/iceberg-spark-runtime-4.0_2.13/1.9.2/iceberg-spark-runtime-4.0_2.13-1.9.2.jar","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133911Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133938Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133969Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.133996Z","level":"error","event":"\t\t::          UNRESOLVED DEPENDENCIES         ::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134024Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134050Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134080Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134108Z","level":"error","event":"\t\t:: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134134Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134160Z","level":"error","event":"\t\t::::::::::::::::::::::::::::::::::::::::::::::","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134189Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134216Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134241Z","level":"error","event":"","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134267Z","level":"error","event":":: USE VERBOSE OR DEBUG MESSAGE LEVEL FOR MORE DETAILS","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134296Z","level":"error","event":"Exception in thread \"main\" java.lang.RuntimeException: [unresolved dependency: org.apache.iceberg#iceberg-spark-runtime-4.0_2.13;1.9.2: not found]","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134344Z","level":"error","event":"\tat org.apache.spark.util.MavenUtils$.resolveMavenCoordinates(MavenUtils.scala:540)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134375Z","level":"error","event":"\tat org.apache.spark.util.DependencyUtils$.resolveMavenDependencies(DependencyUtils.scala:123)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134403Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.prepareSubmitEnvironment(SparkSubmit.scala:341)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134432Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.org$apache$spark$deploy$SparkSubmit$$runMain(SparkSubmit.scala:961)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134463Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doRunMain$1(SparkSubmit.scala:204)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134490Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.submit(SparkSubmit.scala:227)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134516Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.doSubmit(SparkSubmit.scala:96)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134542Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$$anon$2.doSubmit(SparkSubmit.scala:1132)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134570Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit$.main(SparkSubmit.scala:1141)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.134599Z","level":"error","event":"\tat org.apache.spark.deploy.SparkSubmit.main(SparkSubmit.scala)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:22:18.155966","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"PySparkRuntimeError","exc_value":"[JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":70,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/session.py","lineno":556,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":523,"name":"getOrCreate"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":205,"name":"__init__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/core/context.py","lineno":444,"name":"_ensure_initialized"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/java_gateway.py","lineno":111,"name":"launch_gateway"}]}]}
{"timestamp":"2025-08-31T18:24:30.680377","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:24:33.612702Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:33.938185Z","level":"error","event":"25/08/31 18:24:33 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.235445Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.241525Z","level":"error","event":"25/08/31 18:24:34 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.247205Z","level":"error","event":"25/08/31 18:24:34 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.656739Z","level":"error","event":"25/08/31 18:24:34 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.669765Z","level":"error","event":"25/08/31 18:24:34 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.669952Z","level":"error","event":"25/08/31 18:24:34 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.713533Z","level":"error","event":"25/08/31 18:24:34 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.719325Z","level":"error","event":"25/08/31 18:24:34 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.719499Z","level":"error","event":"25/08/31 18:24:34 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.719559Z","level":"error","event":"25/08/31 18:24:34 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.760100Z","level":"error","event":"25/08/31 18:24:34 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.765490Z","level":"error","event":"25/08/31 18:24:34 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.770417Z","level":"error","event":"25/08/31 18:24:34 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.840516Z","level":"error","event":"25/08/31 18:24:34 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.845501Z","level":"error","event":"25/08/31 18:24:34 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.845718Z","level":"error","event":"25/08/31 18:24:34 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.845778Z","level":"error","event":"25/08/31 18:24:34 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:34.850379Z","level":"error","event":"25/08/31 18:24:34 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.336140Z","level":"error","event":"25/08/31 18:24:35 INFO Utils: Successfully started service 'sparkDriver' on port 37337.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.377257Z","level":"error","event":"25/08/31 18:24:35 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.397473Z","level":"error","event":"25/08/31 18:24:35 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.423159Z","level":"error","event":"25/08/31 18:24:35 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.423384Z","level":"error","event":"25/08/31 18:24:35 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.429507Z","level":"error","event":"25/08/31 18:24:35 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.456578Z","level":"error","event":"25/08/31 18:24:35 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-ec99a89b-c744-4f66-b2db-38a6672a583a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.499731Z","level":"error","event":"25/08/31 18:24:35 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.664139Z","level":"error","event":"25/08/31 18:24:35 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.834936Z","level":"error","event":"25/08/31 18:24:35 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.909528Z","level":"error","event":"25/08/31 18:24:35 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:37337/jars/hadoop-aws-3.3.6.jar with timestamp 1756664674647","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.919773Z","level":"error","event":"25/08/31 18:24:35 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:37337/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664674647","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920033Z","level":"error","event":"25/08/31 18:24:35 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:37337/jars/ojdbc11.jar with timestamp 1756664674647","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920111Z","level":"error","event":"25/08/31 18:24:35 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920168Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920222Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920272Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920340Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920393Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920443Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920492Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920546Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920601Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920651Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920706Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920754Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920805Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920857Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920908Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.920958Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921022Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921097Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921151Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921202Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921254Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921324Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921382Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921439Z","level":"error","event":"25/08/31 18:24:35 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921493Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921545Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921597Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921649Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.921699Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.923426Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.923611Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.923674Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.923731Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.923782Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924061Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924133Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924189Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924245Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924312Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924396Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924451Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924505Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924558Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924610Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.924664Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.930552Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.930745Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.974991Z","level":"error","event":"25/08/31 18:24:35 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.975055Z","level":"error","event":"25/08/31 18:24:35 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.975109Z","level":"error","event":"25/08/31 18:24:35 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.975160Z","level":"error","event":"25/08/31 18:24:35 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:35.975206Z","level":"error","event":"25/08/31 18:24:35 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.158814Z","level":"error","event":"25/08/31 18:24:36 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.158989Z","level":"error","event":"25/08/31 18:24:36 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.159048Z","level":"error","event":"25/08/31 18:24:36 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.170380Z","level":"error","event":"25/08/31 18:24:36 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.179832Z","level":"error","event":"25/08/31 18:24:36 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@d5cf65 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.194666Z","level":"error","event":"25/08/31 18:24:36 INFO Executor: Fetching spark://6548a13336e4:37337/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664674647","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.257362Z","level":"error","event":"25/08/31 18:24:36 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:37337 after 32 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:36.266651Z","level":"error","event":"25/08/31 18:24:36 INFO Utils: Fetching spark://6548a13336e4:37337/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-24a46a22-99ce-43ac-aa2b-1a250f6faeef/userFiles-1b2de950-c5cd-45d8-9be4-938790858995/fetchFileTemp17018855190889883060.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.463585Z","level":"error","event":"25/08/31 18:24:37 INFO Executor: Adding file:/tmp/spark-24a46a22-99ce-43ac-aa2b-1a250f6faeef/userFiles-1b2de950-c5cd-45d8-9be4-938790858995/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.469511Z","level":"error","event":"25/08/31 18:24:37 INFO Executor: Fetching spark://6548a13336e4:37337/jars/hadoop-aws-3.3.6.jar with timestamp 1756664674647","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.469673Z","level":"error","event":"25/08/31 18:24:37 INFO Utils: Fetching spark://6548a13336e4:37337/jars/hadoop-aws-3.3.6.jar to /tmp/spark-24a46a22-99ce-43ac-aa2b-1a250f6faeef/userFiles-1b2de950-c5cd-45d8-9be4-938790858995/fetchFileTemp4576839068614105763.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.480623Z","level":"error","event":"25/08/31 18:24:37 INFO Executor: Adding file:/tmp/spark-24a46a22-99ce-43ac-aa2b-1a250f6faeef/userFiles-1b2de950-c5cd-45d8-9be4-938790858995/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.512898Z","level":"error","event":"25/08/31 18:24:37 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 36089.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.512981Z","level":"error","event":"25/08/31 18:24:37 INFO NettyBlockTransferService: Server created on 6548a13336e4:36089","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.513039Z","level":"error","event":"25/08/31 18:24:37 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.536216Z","level":"error","event":"25/08/31 18:24:37 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 36089, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.543814Z","level":"error","event":"25/08/31 18:24:37 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:36089 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 36089, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.550700Z","level":"error","event":"25/08/31 18:24:37 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 36089, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.556877Z","level":"error","event":"25/08/31 18:24:37 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 36089, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.954522Z","level":"error","event":"25/08/31 18:24:37 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.954751Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.954810Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.954859Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.954905Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.954968Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955015Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955059Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955102Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955146Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955190Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955234Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955278Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955339Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955391Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955435Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955480Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955522Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955564Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955607Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955667Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955713Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955758Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955801Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955846Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955890Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.955937Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.956002Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.956048Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.956091Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:37.956140Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.087323Z","level":"error","event":"25/08/31 18:24:40 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.089697Z","level":"error","event":"25/08/31 18:24:40 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.094686Z","level":"error","event":"25/08/31 18:24:40 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.100899Z","level":"error","event":"25/08/31 18:24:40 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.110121Z","level":"error","event":"25/08/31 18:24:40 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.112922Z","level":"error","event":"25/08/31 18:24:40 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.113024Z","level":"error","event":"25/08/31 18:24:40 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.115067Z","level":"error","event":"25/08/31 18:24:40 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.117970Z","level":"error","event":"25/08/31 18:24:40 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.165480Z","level":"error","event":"25/08/31 18:24:40 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.166024Z","level":"error","event":"25/08/31 18:24:40 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.166157Z","level":"error","event":"25/08/31 18:24:40 INFO ShutdownHookManager: Deleting directory /tmp/spark-24a46a22-99ce-43ac-aa2b-1a250f6faeef","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.166226Z","level":"error","event":"25/08/31 18:24:40 INFO ShutdownHookManager: Deleting directory /tmp/spark-41564e44-0c0f-4246-9002-896537af35a6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:24:40.166280Z","level":"error","event":"25/08/31 18:24:40 INFO ShutdownHookManager: Deleting directory /tmp/spark-24a46a22-99ce-43ac-aa2b-1a250f6faeef/pyspark-a7042a80-f719-43ff-a5a4-b2b2a6cde18a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:10.587322","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:25:10.884777Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:11.914070Z","level":"error","event":"25/08/31 18:25:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.060994Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.064644Z","level":"error","event":"25/08/31 18:25:12 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.068044Z","level":"error","event":"25/08/31 18:25:12 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.268173Z","level":"error","event":"25/08/31 18:25:12 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.273784Z","level":"error","event":"25/08/31 18:25:12 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.273955Z","level":"error","event":"25/08/31 18:25:12 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.297443Z","level":"error","event":"25/08/31 18:25:12 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.302552Z","level":"error","event":"25/08/31 18:25:12 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.302742Z","level":"error","event":"25/08/31 18:25:12 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.302816Z","level":"error","event":"25/08/31 18:25:12 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.327163Z","level":"error","event":"25/08/31 18:25:12 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.332416Z","level":"error","event":"25/08/31 18:25:12 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.332609Z","level":"error","event":"25/08/31 18:25:12 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.397644Z","level":"error","event":"25/08/31 18:25:12 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.405134Z","level":"error","event":"25/08/31 18:25:12 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.405351Z","level":"error","event":"25/08/31 18:25:12 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.405414Z","level":"error","event":"25/08/31 18:25:12 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.405467Z","level":"error","event":"25/08/31 18:25:12 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.631883Z","level":"error","event":"25/08/31 18:25:12 INFO Utils: Successfully started service 'sparkDriver' on port 39275.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.652047Z","level":"error","event":"25/08/31 18:25:12 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.661493Z","level":"error","event":"25/08/31 18:25:12 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.673664Z","level":"error","event":"25/08/31 18:25:12 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.678335Z","level":"error","event":"25/08/31 18:25:12 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.678527Z","level":"error","event":"25/08/31 18:25:12 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.699544Z","level":"error","event":"25/08/31 18:25:12 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-89d2ade8-2fd4-42e6-974d-29d8c98297ff","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.717920Z","level":"error","event":"25/08/31 18:25:12 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.827378Z","level":"error","event":"25/08/31 18:25:12 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.942576Z","level":"error","event":"25/08/31 18:25:12 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:12.962229Z","level":"error","event":"25/08/31 18:25:12 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.004214Z","level":"error","event":"25/08/31 18:25:13 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:39275/jars/hadoop-aws-3.3.6.jar with timestamp 1756664712262","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008150Z","level":"error","event":"25/08/31 18:25:13 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:39275/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664712262","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008280Z","level":"error","event":"25/08/31 18:25:13 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:39275/jars/ojdbc11.jar with timestamp 1756664712262","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008341Z","level":"error","event":"25/08/31 18:25:13 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008376Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008406Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008435Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008463Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008491Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008519Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008562Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008593Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008629Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008657Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008685Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008712Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008740Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008767Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008794Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008821Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008848Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008874Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008903Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008931Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008965Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.008993Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009020Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009049Z","level":"error","event":"25/08/31 18:25:13 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009077Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009105Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009132Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009160Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009191Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009220Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009246Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009273Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009307Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009338Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009366Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009394Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009421Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009449Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009476Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009503Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009530Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009557Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009584Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009611Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.009639Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.012173Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.012275Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.025845Z","level":"error","event":"25/08/31 18:25:13 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.028828Z","level":"error","event":"25/08/31 18:25:13 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.028932Z","level":"error","event":"25/08/31 18:25:13 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.028978Z","level":"error","event":"25/08/31 18:25:13 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.029011Z","level":"error","event":"25/08/31 18:25:13 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.140402Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.143482Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.143599Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.151791Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.154936Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@3e946e1 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.161680Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Fetching spark://6548a13336e4:39275/jars/hadoop-aws-3.3.6.jar with timestamp 1756664712262","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.214629Z","level":"error","event":"25/08/31 18:25:13 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:39275 after 22 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.220442Z","level":"error","event":"25/08/31 18:25:13 INFO Utils: Fetching spark://6548a13336e4:39275/jars/hadoop-aws-3.3.6.jar to /tmp/spark-709061b7-a464-4c78-991e-84ef3e562b2b/userFiles-eeb0f3a1-2552-4d04-b144-7276e24b3d31/fetchFileTemp322042397685135262.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.251467Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Adding file:/tmp/spark-709061b7-a464-4c78-991e-84ef3e562b2b/userFiles-eeb0f3a1-2552-4d04-b144-7276e24b3d31/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.258379Z","level":"error","event":"25/08/31 18:25:13 INFO Executor: Fetching spark://6548a13336e4:39275/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664712262","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:13.258631Z","level":"error","event":"25/08/31 18:25:13 INFO Utils: Fetching spark://6548a13336e4:39275/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-709061b7-a464-4c78-991e-84ef3e562b2b/userFiles-eeb0f3a1-2552-4d04-b144-7276e24b3d31/fetchFileTemp3831409730536495239.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.137052Z","level":"error","event":"25/08/31 18:25:14 INFO Executor: Adding file:/tmp/spark-709061b7-a464-4c78-991e-84ef3e562b2b/userFiles-eeb0f3a1-2552-4d04-b144-7276e24b3d31/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.147341Z","level":"error","event":"25/08/31 18:25:14 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 39987.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.147453Z","level":"error","event":"25/08/31 18:25:14 INFO NettyBlockTransferService: Server created on 6548a13336e4:39987","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.152720Z","level":"error","event":"25/08/31 18:25:14 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.161797Z","level":"error","event":"25/08/31 18:25:14 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 39987, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.166566Z","level":"error","event":"25/08/31 18:25:14 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:39987 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 39987, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.169413Z","level":"error","event":"25/08/31 18:25:14 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 39987, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.172065Z","level":"error","event":"25/08/31 18:25:14 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 39987, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455596Z","level":"error","event":"25/08/31 18:25:14 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455722Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455761Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455792Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455822Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455851Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455883Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455913Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455957Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.455987Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456017Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456046Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456076Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456107Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456135Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456165Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456207Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456237Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456268Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456304Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456343Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456384Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456414Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456443Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456471Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456500Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456527Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456555Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456583Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456610Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:14.456637Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.897466Z","level":"error","event":"25/08/31 18:25:15 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.897556Z","level":"error","event":"25/08/31 18:25:15 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.903147Z","level":"error","event":"25/08/31 18:25:15 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.910090Z","level":"error","event":"25/08/31 18:25:15 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.919345Z","level":"error","event":"25/08/31 18:25:15 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.921835Z","level":"error","event":"25/08/31 18:25:15 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.921934Z","level":"error","event":"25/08/31 18:25:15 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.923947Z","level":"error","event":"25/08/31 18:25:15 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.926443Z","level":"error","event":"25/08/31 18:25:15 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.973109Z","level":"error","event":"25/08/31 18:25:15 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.976144Z","level":"error","event":"25/08/31 18:25:15 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.976242Z","level":"error","event":"25/08/31 18:25:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-709061b7-a464-4c78-991e-84ef3e562b2b/pyspark-bf33f53d-c9aa-44f7-b192-151daff4680b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.977999Z","level":"error","event":"25/08/31 18:25:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-8c81c1e6-742e-4230-8849-528721feedb2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:15.980006Z","level":"error","event":"25/08/31 18:25:15 INFO ShutdownHookManager: Deleting directory /tmp/spark-709061b7-a464-4c78-991e-84ef3e562b2b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:47.097404","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:25:47.578032Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:48.851531Z","level":"error","event":"25/08/31 18:25:48 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.015350Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.019569Z","level":"error","event":"25/08/31 18:25:49 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.023572Z","level":"error","event":"25/08/31 18:25:49 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.202585Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.205971Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.206113Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.239219Z","level":"error","event":"25/08/31 18:25:49 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.239417Z","level":"error","event":"25/08/31 18:25:49 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.239466Z","level":"error","event":"25/08/31 18:25:49 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.244023Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.276747Z","level":"error","event":"25/08/31 18:25:49 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.281545Z","level":"error","event":"25/08/31 18:25:49 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.285842Z","level":"error","event":"25/08/31 18:25:49 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.357897Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.367026Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.367394Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.367496Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.367548Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.608920Z","level":"error","event":"25/08/31 18:25:49 INFO Utils: Successfully started service 'sparkDriver' on port 40513.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.635163Z","level":"error","event":"25/08/31 18:25:49 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.643993Z","level":"error","event":"25/08/31 18:25:49 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.658514Z","level":"error","event":"25/08/31 18:25:49 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.658673Z","level":"error","event":"25/08/31 18:25:49 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.662245Z","level":"error","event":"25/08/31 18:25:49 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.675318Z","level":"error","event":"25/08/31 18:25:49 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-b34b3219-8539-4928-a097-d7c960a40bd3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.692538Z","level":"error","event":"25/08/31 18:25:49 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.803853Z","level":"error","event":"25/08/31 18:25:49 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.870621Z","level":"error","event":"25/08/31 18:25:49 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.881149Z","level":"error","event":"25/08/31 18:25:49 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.925468Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:40513/jars/hadoop-aws-3.3.6.jar with timestamp 1756664749196","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930389Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:40513/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664749196","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930642Z","level":"error","event":"25/08/31 18:25:49 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:40513/jars/ojdbc11.jar with timestamp 1756664749196","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930684Z","level":"error","event":"25/08/31 18:25:49 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930721Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930754Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930786Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930816Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930846Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930875Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930904Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.930992Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931063Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931103Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931132Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931160Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931190Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931217Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931246Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931274Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931316Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931360Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931391Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931420Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931458Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931492Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931521Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931548Z","level":"error","event":"25/08/31 18:25:49 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931592Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931638Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931672Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931701Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931729Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931758Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931786Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931815Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931843Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931870Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931898Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931926Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931954Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.931981Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932009Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932046Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932075Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932103Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932132Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932161Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.932189Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.938187Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.938448Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.955982Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.960001Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.960165Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.960208Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:49.960241Z","level":"error","event":"25/08/31 18:25:49 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.062282Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.062380Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.062439Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.071269Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.077347Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@38d2738 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.085556Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Fetching spark://6548a13336e4:40513/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664749196","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.138001Z","level":"error","event":"25/08/31 18:25:50 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:40513 after 23 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.147482Z","level":"error","event":"25/08/31 18:25:50 INFO Utils: Fetching spark://6548a13336e4:40513/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-d53546f7-1660-4c2f-8869-59bd7a856ea0/userFiles-9247d1b3-28a0-4fea-be0e-605aea260626/fetchFileTemp2395593202564186202.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.895800Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Adding file:/tmp/spark-d53546f7-1660-4c2f-8869-59bd7a856ea0/userFiles-9247d1b3-28a0-4fea-be0e-605aea260626/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.899091Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Fetching spark://6548a13336e4:40513/jars/hadoop-aws-3.3.6.jar with timestamp 1756664749196","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.899196Z","level":"error","event":"25/08/31 18:25:50 INFO Utils: Fetching spark://6548a13336e4:40513/jars/hadoop-aws-3.3.6.jar to /tmp/spark-d53546f7-1660-4c2f-8869-59bd7a856ea0/userFiles-9247d1b3-28a0-4fea-be0e-605aea260626/fetchFileTemp11759337993831685710.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.905484Z","level":"error","event":"25/08/31 18:25:50 INFO Executor: Adding file:/tmp/spark-d53546f7-1660-4c2f-8869-59bd7a856ea0/userFiles-9247d1b3-28a0-4fea-be0e-605aea260626/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.913282Z","level":"error","event":"25/08/31 18:25:50 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 46405.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.917105Z","level":"error","event":"25/08/31 18:25:50 INFO NettyBlockTransferService: Server created on 6548a13336e4:46405","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.917274Z","level":"error","event":"25/08/31 18:25:50 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.925322Z","level":"error","event":"25/08/31 18:25:50 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 46405, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.930043Z","level":"error","event":"25/08/31 18:25:50 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:46405 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 46405, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.934417Z","level":"error","event":"25/08/31 18:25:50 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 46405, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:50.934578Z","level":"error","event":"25/08/31 18:25:50 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 46405, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.240966Z","level":"error","event":"25/08/31 18:25:51 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241257Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241393Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241456Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241509Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241578Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241635Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241680Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241730Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241783Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241840Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241896Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.241952Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242007Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242059Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242113Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242169Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242226Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242280Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242356Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242416Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242472Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242530Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242583Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242635Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242686Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242757Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242810Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242861Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242913Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:51.242961Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.902475Z","level":"error","event":"25/08/31 18:25:52 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.902645Z","level":"error","event":"25/08/31 18:25:52 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.911487Z","level":"error","event":"25/08/31 18:25:52 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.922073Z","level":"error","event":"25/08/31 18:25:52 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.930523Z","level":"error","event":"25/08/31 18:25:52 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.934637Z","level":"error","event":"25/08/31 18:25:52 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.934813Z","level":"error","event":"25/08/31 18:25:52 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.938070Z","level":"error","event":"25/08/31 18:25:52 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.942275Z","level":"error","event":"25/08/31 18:25:52 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.987342Z","level":"error","event":"25/08/31 18:25:52 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.991188Z","level":"error","event":"25/08/31 18:25:52 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.991307Z","level":"error","event":"25/08/31 18:25:52 INFO ShutdownHookManager: Deleting directory /tmp/spark-d53546f7-1660-4c2f-8869-59bd7a856ea0/pyspark-bda0030d-c395-4d02-98c4-95673c559e1e","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.993252Z","level":"error","event":"25/08/31 18:25:52 INFO ShutdownHookManager: Deleting directory /tmp/spark-cec0812b-d2b9-45b3-992c-d9ef68314410","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:25:52.995146Z","level":"error","event":"25/08/31 18:25:52 INFO ShutdownHookManager: Deleting directory /tmp/spark-d53546f7-1660-4c2f-8869-59bd7a856ea0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:24.199625","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:26:24.476508Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.552327Z","level":"error","event":"25/08/31 18:26:25 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.692148Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.696612Z","level":"error","event":"25/08/31 18:26:25 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.696724Z","level":"error","event":"25/08/31 18:26:25 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.870384Z","level":"error","event":"25/08/31 18:26:25 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.873935Z","level":"error","event":"25/08/31 18:26:25 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.874049Z","level":"error","event":"25/08/31 18:26:25 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.893956Z","level":"error","event":"25/08/31 18:26:25 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.898522Z","level":"error","event":"25/08/31 18:26:25 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.898683Z","level":"error","event":"25/08/31 18:26:25 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.898753Z","level":"error","event":"25/08/31 18:26:25 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.920013Z","level":"error","event":"25/08/31 18:26:25 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.924374Z","level":"error","event":"25/08/31 18:26:25 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.924529Z","level":"error","event":"25/08/31 18:26:25 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.963556Z","level":"error","event":"25/08/31 18:26:25 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.968436Z","level":"error","event":"25/08/31 18:26:25 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.968602Z","level":"error","event":"25/08/31 18:26:25 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.968668Z","level":"error","event":"25/08/31 18:26:25 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:25.968718Z","level":"error","event":"25/08/31 18:26:25 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.143984Z","level":"error","event":"25/08/31 18:26:26 INFO Utils: Successfully started service 'sparkDriver' on port 42989.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.175808Z","level":"error","event":"25/08/31 18:26:26 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.190840Z","level":"error","event":"25/08/31 18:26:26 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.209288Z","level":"error","event":"25/08/31 18:26:26 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.209461Z","level":"error","event":"25/08/31 18:26:26 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.213345Z","level":"error","event":"25/08/31 18:26:26 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.231113Z","level":"error","event":"25/08/31 18:26:26 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-19e7af8c-c5a7-4bed-ab18-bc55d4b94775","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.247104Z","level":"error","event":"25/08/31 18:26:26 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.362714Z","level":"error","event":"25/08/31 18:26:26 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.438995Z","level":"error","event":"25/08/31 18:26:26 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.447295Z","level":"error","event":"25/08/31 18:26:26 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.493971Z","level":"error","event":"25/08/31 18:26:26 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:42989/jars/hadoop-aws-3.3.6.jar with timestamp 1756664785866","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.499746Z","level":"error","event":"25/08/31 18:26:26 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:42989/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664785866","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.499970Z","level":"error","event":"25/08/31 18:26:26 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:42989/jars/ojdbc11.jar with timestamp 1756664785866","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500030Z","level":"error","event":"25/08/31 18:26:26 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500064Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500096Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500126Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500156Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500184Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500213Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500252Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500282Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500331Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500360Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500389Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500418Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500448Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500477Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500506Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500535Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500563Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500592Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500621Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500649Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500678Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500708Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500736Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500766Z","level":"error","event":"25/08/31 18:26:26 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500794Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500822Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500851Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500878Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500910Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500939Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500967Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.500995Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501022Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501049Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501076Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501104Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501131Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501159Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501186Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501214Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501242Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501269Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501304Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501339Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.501368Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.506096Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.506273Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.514545Z","level":"error","event":"25/08/31 18:26:26 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.518057Z","level":"error","event":"25/08/31 18:26:26 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.518170Z","level":"error","event":"25/08/31 18:26:26 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.518219Z","level":"error","event":"25/08/31 18:26:26 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.518253Z","level":"error","event":"25/08/31 18:26:26 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.596000Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.598947Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.599064Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.605596Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.608184Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@38d2738 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.614547Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Fetching spark://6548a13336e4:42989/jars/hadoop-aws-3.3.6.jar with timestamp 1756664785866","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.654841Z","level":"error","event":"25/08/31 18:26:26 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:42989 after 17 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.660394Z","level":"error","event":"25/08/31 18:26:26 INFO Utils: Fetching spark://6548a13336e4:42989/jars/hadoop-aws-3.3.6.jar to /tmp/spark-b91ce2f1-d826-4066-8e67-02c1259b2bb9/userFiles-96b53822-4aa0-4547-9ffb-e765e2c333a1/fetchFileTemp4471134424102003956.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.681564Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Adding file:/tmp/spark-b91ce2f1-d826-4066-8e67-02c1259b2bb9/userFiles-96b53822-4aa0-4547-9ffb-e765e2c333a1/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.685848Z","level":"error","event":"25/08/31 18:26:26 INFO Executor: Fetching spark://6548a13336e4:42989/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664785866","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:26.685985Z","level":"error","event":"25/08/31 18:26:26 INFO Utils: Fetching spark://6548a13336e4:42989/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-b91ce2f1-d826-4066-8e67-02c1259b2bb9/userFiles-96b53822-4aa0-4547-9ffb-e765e2c333a1/fetchFileTemp15463325519490241873.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.405401Z","level":"error","event":"25/08/31 18:26:27 INFO Executor: Adding file:/tmp/spark-b91ce2f1-d826-4066-8e67-02c1259b2bb9/userFiles-96b53822-4aa0-4547-9ffb-e765e2c333a1/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.415202Z","level":"error","event":"25/08/31 18:26:27 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 39829.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.415273Z","level":"error","event":"25/08/31 18:26:27 INFO NettyBlockTransferService: Server created on 6548a13336e4:39829","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.415356Z","level":"error","event":"25/08/31 18:26:27 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.424547Z","level":"error","event":"25/08/31 18:26:27 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 39829, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.430129Z","level":"error","event":"25/08/31 18:26:27 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:39829 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 39829, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.435021Z","level":"error","event":"25/08/31 18:26:27 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 39829, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.435147Z","level":"error","event":"25/08/31 18:26:27 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 39829, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679037Z","level":"error","event":"25/08/31 18:26:27 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679256Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679351Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679422Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679476Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679531Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679585Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679638Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679692Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679746Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679801Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679855Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679907Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.679960Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680014Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680066Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680127Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680174Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680217Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680263Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680327Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680396Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680458Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680516Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680567Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680619Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680671Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680722Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680774Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680827Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:27.680876Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.959749Z","level":"error","event":"25/08/31 18:26:28 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.959885Z","level":"error","event":"25/08/31 18:26:28 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.966072Z","level":"error","event":"25/08/31 18:26:28 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.973660Z","level":"error","event":"25/08/31 18:26:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.989442Z","level":"error","event":"25/08/31 18:26:28 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.994934Z","level":"error","event":"25/08/31 18:26:28 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:28.995100Z","level":"error","event":"25/08/31 18:26:28 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.000695Z","level":"error","event":"25/08/31 18:26:29 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.006494Z","level":"error","event":"25/08/31 18:26:29 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.044732Z","level":"error","event":"25/08/31 18:26:29 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.049607Z","level":"error","event":"25/08/31 18:26:29 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.049787Z","level":"error","event":"25/08/31 18:26:29 INFO ShutdownHookManager: Deleting directory /tmp/spark-b91ce2f1-d826-4066-8e67-02c1259b2bb9","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.049854Z","level":"error","event":"25/08/31 18:26:29 INFO ShutdownHookManager: Deleting directory /tmp/spark-7a37c31f-51b3-4a67-890e-691a16a7f26e","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:26:29.054171Z","level":"error","event":"25/08/31 18:26:29 INFO ShutdownHookManager: Deleting directory /tmp/spark-b91ce2f1-d826-4066-8e67-02c1259b2bb9/pyspark-0c49cfe1-fb70-4571-a48f-0cbe1b25304f","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:00.068694","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:27:00.381449Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:01.719125Z","level":"error","event":"25/08/31 18:27:01 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:01.879877Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:01.885566Z","level":"error","event":"25/08/31 18:27:01 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:01.889898Z","level":"error","event":"25/08/31 18:27:01 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.048187Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.051650Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.051767Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.085631Z","level":"error","event":"25/08/31 18:27:02 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.085700Z","level":"error","event":"25/08/31 18:27:02 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.085760Z","level":"error","event":"25/08/31 18:27:02 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.090512Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.123159Z","level":"error","event":"25/08/31 18:27:02 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.134202Z","level":"error","event":"25/08/31 18:27:02 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.134488Z","level":"error","event":"25/08/31 18:27:02 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.228902Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.244724Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.244944Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.245012Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.245065Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.466929Z","level":"error","event":"25/08/31 18:27:02 INFO Utils: Successfully started service 'sparkDriver' on port 35149.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.494720Z","level":"error","event":"25/08/31 18:27:02 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.507191Z","level":"error","event":"25/08/31 18:27:02 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.519746Z","level":"error","event":"25/08/31 18:27:02 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.525074Z","level":"error","event":"25/08/31 18:27:02 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.525254Z","level":"error","event":"25/08/31 18:27:02 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.539461Z","level":"error","event":"25/08/31 18:27:02 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-5b658994-713e-479d-829a-b18719373a9d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.560326Z","level":"error","event":"25/08/31 18:27:02 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.754711Z","level":"error","event":"25/08/31 18:27:02 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.871326Z","level":"error","event":"25/08/31 18:27:02 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.885923Z","level":"error","event":"25/08/31 18:27:02 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.942567Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:35149/jars/hadoop-aws-3.3.6.jar with timestamp 1756664822042","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949398Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:35149/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664822042","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949621Z","level":"error","event":"25/08/31 18:27:02 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:35149/jars/ojdbc11.jar with timestamp 1756664822042","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949703Z","level":"error","event":"25/08/31 18:27:02 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949767Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949832Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949890Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.949947Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950006Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950065Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950137Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950194Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950252Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950339Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950399Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950459Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950511Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950565Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950618Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950681Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950766Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950861Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.950941Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951022Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951096Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951193Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951267Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951822Z","level":"error","event":"25/08/31 18:27:02 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951917Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.951972Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952024Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952088Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952144Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952205Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952263Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952339Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952398Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952453Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952509Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952550Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952582Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952620Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952665Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952696Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952726Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952755Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952786Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952814Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.952843Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.960231Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.960587Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.980414Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.988881Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.989281Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.989388Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:02.989458Z","level":"error","event":"25/08/31 18:27:02 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.269000Z","level":"error","event":"25/08/31 18:27:03 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.269109Z","level":"error","event":"25/08/31 18:27:03 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.278158Z","level":"error","event":"25/08/31 18:27:03 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.295043Z","level":"error","event":"25/08/31 18:27:03 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.303179Z","level":"error","event":"25/08/31 18:27:03 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.318472Z","level":"error","event":"25/08/31 18:27:03 INFO Executor: Fetching spark://6548a13336e4:35149/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664822042","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.415275Z","level":"error","event":"25/08/31 18:27:03 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:35149 after 50 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:03.427071Z","level":"error","event":"25/08/31 18:27:03 INFO Utils: Fetching spark://6548a13336e4:35149/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-ca0b06d6-4eb7-4693-81c9-cf8ac232d5cb/userFiles-0e0c953d-b66f-4107-b638-242dd877d87c/fetchFileTemp12004036183503966336.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.469613Z","level":"error","event":"25/08/31 18:27:04 INFO Executor: Adding file:/tmp/spark-ca0b06d6-4eb7-4693-81c9-cf8ac232d5cb/userFiles-0e0c953d-b66f-4107-b638-242dd877d87c/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.477960Z","level":"error","event":"25/08/31 18:27:04 INFO Executor: Fetching spark://6548a13336e4:35149/jars/hadoop-aws-3.3.6.jar with timestamp 1756664822042","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.478187Z","level":"error","event":"25/08/31 18:27:04 INFO Utils: Fetching spark://6548a13336e4:35149/jars/hadoop-aws-3.3.6.jar to /tmp/spark-ca0b06d6-4eb7-4693-81c9-cf8ac232d5cb/userFiles-0e0c953d-b66f-4107-b638-242dd877d87c/fetchFileTemp488696409913217467.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.485803Z","level":"error","event":"25/08/31 18:27:04 INFO Executor: Adding file:/tmp/spark-ca0b06d6-4eb7-4693-81c9-cf8ac232d5cb/userFiles-0e0c953d-b66f-4107-b638-242dd877d87c/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.498629Z","level":"error","event":"25/08/31 18:27:04 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 33197.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.510213Z","level":"error","event":"25/08/31 18:27:04 INFO NettyBlockTransferService: Server created on 6548a13336e4:33197","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.510580Z","level":"error","event":"25/08/31 18:27:04 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.527377Z","level":"error","event":"25/08/31 18:27:04 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 33197, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.541715Z","level":"error","event":"25/08/31 18:27:04 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:33197 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 33197, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.542113Z","level":"error","event":"25/08/31 18:27:04 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 33197, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.550980Z","level":"error","event":"25/08/31 18:27:04 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 33197, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.950623Z","level":"error","event":"25/08/31 18:27:04 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.950836Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.950911Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.950969Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951038Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951097Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951150Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951200Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951249Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951293Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951346Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951391Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951440Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951497Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951546Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951593Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951642Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951693Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951746Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951799Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951846Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951889Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951935Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.951985Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952038Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952088Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952151Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952203Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952251Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952320Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:04.952372Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.545973Z","level":"error","event":"25/08/31 18:27:06 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.547517Z","level":"error","event":"25/08/31 18:27:06 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.552624Z","level":"error","event":"25/08/31 18:27:06 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.559314Z","level":"error","event":"25/08/31 18:27:06 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.568286Z","level":"error","event":"25/08/31 18:27:06 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.570687Z","level":"error","event":"25/08/31 18:27:06 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.570783Z","level":"error","event":"25/08/31 18:27:06 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.572964Z","level":"error","event":"25/08/31 18:27:06 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.575326Z","level":"error","event":"25/08/31 18:27:06 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.614197Z","level":"error","event":"25/08/31 18:27:06 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.616770Z","level":"error","event":"25/08/31 18:27:06 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.616859Z","level":"error","event":"25/08/31 18:27:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-3bada69d-8735-4dc8-af33-9b02f2b8d6c5","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.618850Z","level":"error","event":"25/08/31 18:27:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-ca0b06d6-4eb7-4693-81c9-cf8ac232d5cb/pyspark-0e52bf08-3306-44b3-8361-1e8ef0d01290","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:06.621824Z","level":"error","event":"25/08/31 18:27:06 INFO ShutdownHookManager: Deleting directory /tmp/spark-ca0b06d6-4eb7-4693-81c9-cf8ac232d5cb","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:37.208625","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:27:37.557690Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:38.588619Z","level":"error","event":"25/08/31 18:27:38 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:38.730322Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:38.734102Z","level":"error","event":"25/08/31 18:27:38 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:38.738147Z","level":"error","event":"25/08/31 18:27:38 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.077798Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.083168Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.083353Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.102568Z","level":"error","event":"25/08/31 18:27:39 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.107912Z","level":"error","event":"25/08/31 18:27:39 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.108070Z","level":"error","event":"25/08/31 18:27:39 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.108138Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.124771Z","level":"error","event":"25/08/31 18:27:39 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.130458Z","level":"error","event":"25/08/31 18:27:39 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.130646Z","level":"error","event":"25/08/31 18:27:39 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.173229Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.179945Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.180161Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.180222Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.180275Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.354856Z","level":"error","event":"25/08/31 18:27:39 INFO Utils: Successfully started service 'sparkDriver' on port 39923.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.374015Z","level":"error","event":"25/08/31 18:27:39 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.390763Z","level":"error","event":"25/08/31 18:27:39 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.401191Z","level":"error","event":"25/08/31 18:27:39 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.405570Z","level":"error","event":"25/08/31 18:27:39 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.405727Z","level":"error","event":"25/08/31 18:27:39 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.426767Z","level":"error","event":"25/08/31 18:27:39 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-c173e13d-62eb-4c3e-bfc3-e476585bcd2d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.450834Z","level":"error","event":"25/08/31 18:27:39 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.553530Z","level":"error","event":"25/08/31 18:27:39 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.622793Z","level":"error","event":"25/08/31 18:27:39 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.630863Z","level":"error","event":"25/08/31 18:27:39 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.683223Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:39923/jars/hadoop-aws-3.3.6.jar with timestamp 1756664859073","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.690551Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:39923/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664859073","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.690789Z","level":"error","event":"25/08/31 18:27:39 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:39923/jars/ojdbc11.jar with timestamp 1756664859073","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.690876Z","level":"error","event":"25/08/31 18:27:39 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.690945Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691009Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691069Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691129Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691183Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691249Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691320Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691362Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691419Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691473Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691531Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691597Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691653Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691716Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691780Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691826Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691884Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.691950Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692011Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692068Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692130Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692188Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692238Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692293Z","level":"error","event":"25/08/31 18:27:39 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692365Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692423Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692476Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692540Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692604Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692662Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692759Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692813Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692859Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692908Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.692954Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693008Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693065Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693118Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693174Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693228Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693272Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693342Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693385Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693442Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.693491Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.704252Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.704542Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.721673Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.729511Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.729679Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.729721Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.729758Z","level":"error","event":"25/08/31 18:27:39 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.830925Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.835152Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.835243Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.839579Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.842291Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@38d2738 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.847632Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Fetching spark://6548a13336e4:39923/jars/hadoop-aws-3.3.6.jar with timestamp 1756664859073","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.877762Z","level":"error","event":"25/08/31 18:27:39 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:39923 after 13 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.884957Z","level":"error","event":"25/08/31 18:27:39 INFO Utils: Fetching spark://6548a13336e4:39923/jars/hadoop-aws-3.3.6.jar to /tmp/spark-67fed58d-ced4-45ca-bd28-bc7eb5c951dc/userFiles-1a065b21-1410-4921-95a3-a8894f7f96b1/fetchFileTemp5607785844128257431.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.904812Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Adding file:/tmp/spark-67fed58d-ced4-45ca-bd28-bc7eb5c951dc/userFiles-1a065b21-1410-4921-95a3-a8894f7f96b1/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.908002Z","level":"error","event":"25/08/31 18:27:39 INFO Executor: Fetching spark://6548a13336e4:39923/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664859073","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:39.908115Z","level":"error","event":"25/08/31 18:27:39 INFO Utils: Fetching spark://6548a13336e4:39923/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-67fed58d-ced4-45ca-bd28-bc7eb5c951dc/userFiles-1a065b21-1410-4921-95a3-a8894f7f96b1/fetchFileTemp15866509957726106730.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.449150Z","level":"error","event":"25/08/31 18:27:40 INFO Executor: Adding file:/tmp/spark-67fed58d-ced4-45ca-bd28-bc7eb5c951dc/userFiles-1a065b21-1410-4921-95a3-a8894f7f96b1/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.457086Z","level":"error","event":"25/08/31 18:27:40 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37473.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.461052Z","level":"error","event":"25/08/31 18:27:40 INFO NettyBlockTransferService: Server created on 6548a13336e4:37473","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.461191Z","level":"error","event":"25/08/31 18:27:40 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.469384Z","level":"error","event":"25/08/31 18:27:40 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 37473, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.474126Z","level":"error","event":"25/08/31 18:27:40 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:37473 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 37473, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.477023Z","level":"error","event":"25/08/31 18:27:40 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 37473, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.480211Z","level":"error","event":"25/08/31 18:27:40 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 37473, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743292Z","level":"error","event":"25/08/31 18:27:40 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743538Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743635Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743693Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743744Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743798Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743852Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743903Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743954Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.743999Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744042Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744085Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744128Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744177Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744229Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744292Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744370Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744418Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744464Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744578Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744648Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744697Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744741Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744784Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744826Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744874Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744927Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.744973Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.745018Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.745070Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:40.745115Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.263190Z","level":"error","event":"25/08/31 18:27:42 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.266513Z","level":"error","event":"25/08/31 18:27:42 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.274339Z","level":"error","event":"25/08/31 18:27:42 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.284266Z","level":"error","event":"25/08/31 18:27:42 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.303653Z","level":"error","event":"25/08/31 18:27:42 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.304021Z","level":"error","event":"25/08/31 18:27:42 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.304067Z","level":"error","event":"25/08/31 18:27:42 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.312356Z","level":"error","event":"25/08/31 18:27:42 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.312507Z","level":"error","event":"25/08/31 18:27:42 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.356543Z","level":"error","event":"25/08/31 18:27:42 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.362909Z","level":"error","event":"25/08/31 18:27:42 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.363087Z","level":"error","event":"25/08/31 18:27:42 INFO ShutdownHookManager: Deleting directory /tmp/spark-67fed58d-ced4-45ca-bd28-bc7eb5c951dc","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.363154Z","level":"error","event":"25/08/31 18:27:42 INFO ShutdownHookManager: Deleting directory /tmp/spark-67fed58d-ced4-45ca-bd28-bc7eb5c951dc/pyspark-43e63574-6f87-4a74-9113-57a2c11892a4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:27:42.368203Z","level":"error","event":"25/08/31 18:27:42 INFO ShutdownHookManager: Deleting directory /tmp/spark-6ac1056f-5f84-4c5f-bf1f-f5622eddb40e","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:13.558780","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:28:15.394556Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.375419Z","level":"error","event":"25/08/31 18:28:17 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.638367Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.645413Z","level":"error","event":"25/08/31 18:28:17 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.645653Z","level":"error","event":"25/08/31 18:28:17 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.846907Z","level":"error","event":"25/08/31 18:28:17 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.854749Z","level":"error","event":"25/08/31 18:28:17 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.855028Z","level":"error","event":"25/08/31 18:28:17 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.886771Z","level":"error","event":"25/08/31 18:28:17 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.893555Z","level":"error","event":"25/08/31 18:28:17 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.893789Z","level":"error","event":"25/08/31 18:28:17 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.893881Z","level":"error","event":"25/08/31 18:28:17 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.928883Z","level":"error","event":"25/08/31 18:28:17 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.935948Z","level":"error","event":"25/08/31 18:28:17 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:17.936192Z","level":"error","event":"25/08/31 18:28:17 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.021113Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.027026Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.027191Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.027256Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.031282Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.406919Z","level":"error","event":"25/08/31 18:28:18 INFO Utils: Successfully started service 'sparkDriver' on port 40473.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.438390Z","level":"error","event":"25/08/31 18:28:18 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.457804Z","level":"error","event":"25/08/31 18:28:18 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.483072Z","level":"error","event":"25/08/31 18:28:18 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.489814Z","level":"error","event":"25/08/31 18:28:18 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.489988Z","level":"error","event":"25/08/31 18:28:18 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.515483Z","level":"error","event":"25/08/31 18:28:18 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-9aec8cc1-be35-4e44-8b26-4a1f85a3fa01","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.545994Z","level":"error","event":"25/08/31 18:28:18 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.708850Z","level":"error","event":"25/08/31 18:28:18 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.825550Z","level":"error","event":"25/08/31 18:28:18 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.883412Z","level":"error","event":"25/08/31 18:28:18 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:40473/jars/hadoop-aws-3.3.6.jar with timestamp 1756664897841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.891440Z","level":"error","event":"25/08/31 18:28:18 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:40473/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664897841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.891765Z","level":"error","event":"25/08/31 18:28:18 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:40473/jars/ojdbc11.jar with timestamp 1756664897841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.891922Z","level":"error","event":"25/08/31 18:28:18 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892034Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892143Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892252Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892374Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892471Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892569Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892663Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892752Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892836Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892911Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.892985Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893063Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893171Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893277Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893385Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893480Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893580Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893708Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893819Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893915Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.893993Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894079Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894161Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894246Z","level":"error","event":"25/08/31 18:28:18 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894352Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894456Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894545Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894621Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894703Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894785Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894864Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.894937Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895004Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895088Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895187Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895283Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895395Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895481Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895562Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895684Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895797Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895890Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.895976Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.896061Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.896150Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.903945Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.904223Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.918342Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.924797Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.925030Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.925143Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:18.925247Z","level":"error","event":"25/08/31 18:28:18 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.074532Z","level":"error","event":"25/08/31 18:28:19 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.081695Z","level":"error","event":"25/08/31 18:28:19 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.081929Z","level":"error","event":"25/08/31 18:28:19 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.090495Z","level":"error","event":"25/08/31 18:28:19 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.097470Z","level":"error","event":"25/08/31 18:28:19 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@3cf8a601 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.107528Z","level":"error","event":"25/08/31 18:28:19 INFO Executor: Fetching spark://6548a13336e4:40473/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664897841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.171498Z","level":"error","event":"25/08/31 18:28:19 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:40473 after 31 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:19.181280Z","level":"error","event":"25/08/31 18:28:19 INFO Utils: Fetching spark://6548a13336e4:40473/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-b0da8257-88b7-4168-8cdd-bf49314e7984/userFiles-f2718d9f-1b1b-4752-ae5a-2fd055e17ccb/fetchFileTemp963553574561582306.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.121988Z","level":"error","event":"25/08/31 18:28:20 INFO Executor: Adding file:/tmp/spark-b0da8257-88b7-4168-8cdd-bf49314e7984/userFiles-f2718d9f-1b1b-4752-ae5a-2fd055e17ccb/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.138005Z","level":"error","event":"25/08/31 18:28:20 INFO Executor: Fetching spark://6548a13336e4:40473/jars/hadoop-aws-3.3.6.jar with timestamp 1756664897841","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.138283Z","level":"error","event":"25/08/31 18:28:20 INFO Utils: Fetching spark://6548a13336e4:40473/jars/hadoop-aws-3.3.6.jar to /tmp/spark-b0da8257-88b7-4168-8cdd-bf49314e7984/userFiles-f2718d9f-1b1b-4752-ae5a-2fd055e17ccb/fetchFileTemp6775554001555003455.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.138456Z","level":"error","event":"25/08/31 18:28:20 INFO Executor: Adding file:/tmp/spark-b0da8257-88b7-4168-8cdd-bf49314e7984/userFiles-f2718d9f-1b1b-4752-ae5a-2fd055e17ccb/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.152520Z","level":"error","event":"25/08/31 18:28:20 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35959.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.160616Z","level":"error","event":"25/08/31 18:28:20 INFO NettyBlockTransferService: Server created on 6548a13336e4:35959","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.160865Z","level":"error","event":"25/08/31 18:28:20 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.175933Z","level":"error","event":"25/08/31 18:28:20 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 35959, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.186166Z","level":"error","event":"25/08/31 18:28:20 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:35959 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 35959, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.194443Z","level":"error","event":"25/08/31 18:28:20 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 35959, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.200968Z","level":"error","event":"25/08/31 18:28:20 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 35959, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.626657Z","level":"error","event":"25/08/31 18:28:20 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.626945Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627072Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627178Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627272Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627413Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627508Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627601Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627695Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627792Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627891Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.627986Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628082Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628174Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628260Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628381Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628480Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628577Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628668Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628769Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628872Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.628972Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629069Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629159Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629245Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629337Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629441Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629526Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629617Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629712Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:20.629811Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.905160Z","level":"error","event":"25/08/31 18:28:22 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.909356Z","level":"error","event":"25/08/31 18:28:22 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.921619Z","level":"error","event":"25/08/31 18:28:22 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.934955Z","level":"error","event":"25/08/31 18:28:22 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.951113Z","level":"error","event":"25/08/31 18:28:22 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.954914Z","level":"error","event":"25/08/31 18:28:22 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.955058Z","level":"error","event":"25/08/31 18:28:22 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.960865Z","level":"error","event":"25/08/31 18:28:22 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:22.966933Z","level":"error","event":"25/08/31 18:28:22 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:23.028678Z","level":"error","event":"25/08/31 18:28:23 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:23.028878Z","level":"error","event":"25/08/31 18:28:23 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:23.028976Z","level":"error","event":"25/08/31 18:28:23 INFO ShutdownHookManager: Deleting directory /tmp/spark-02372cba-aa73-46fb-98c0-8d9f023e151b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:23.034242Z","level":"error","event":"25/08/31 18:28:23 INFO ShutdownHookManager: Deleting directory /tmp/spark-b0da8257-88b7-4168-8cdd-bf49314e7984/pyspark-ef218cea-d0c2-4388-aafe-286922fa384b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:23.039262Z","level":"error","event":"25/08/31 18:28:23 INFO ShutdownHookManager: Deleting directory /tmp/spark-b0da8257-88b7-4168-8cdd-bf49314e7984","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:54.044868","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:28:54.656788Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.417270Z","level":"error","event":"25/08/31 18:28:56 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.647630Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.653375Z","level":"error","event":"25/08/31 18:28:56 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.657586Z","level":"error","event":"25/08/31 18:28:56 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.880921Z","level":"error","event":"25/08/31 18:28:56 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.886436Z","level":"error","event":"25/08/31 18:28:56 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.886593Z","level":"error","event":"25/08/31 18:28:56 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.908798Z","level":"error","event":"25/08/31 18:28:56 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.913638Z","level":"error","event":"25/08/31 18:28:56 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.913798Z","level":"error","event":"25/08/31 18:28:56 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.913865Z","level":"error","event":"25/08/31 18:28:56 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.937812Z","level":"error","event":"25/08/31 18:28:56 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.942878Z","level":"error","event":"25/08/31 18:28:56 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.943045Z","level":"error","event":"25/08/31 18:28:56 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.997527Z","level":"error","event":"25/08/31 18:28:56 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.997589Z","level":"error","event":"25/08/31 18:28:56 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.997642Z","level":"error","event":"25/08/31 18:28:56 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:56.997695Z","level":"error","event":"25/08/31 18:28:56 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.002075Z","level":"error","event":"25/08/31 18:28:56 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.247502Z","level":"error","event":"25/08/31 18:28:57 INFO Utils: Successfully started service 'sparkDriver' on port 34779.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.277198Z","level":"error","event":"25/08/31 18:28:57 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.293746Z","level":"error","event":"25/08/31 18:28:57 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.312363Z","level":"error","event":"25/08/31 18:28:57 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.320654Z","level":"error","event":"25/08/31 18:28:57 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.320857Z","level":"error","event":"25/08/31 18:28:57 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.342813Z","level":"error","event":"25/08/31 18:28:57 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-8f0b2fb1-9f1d-4d16-8fac-311dbc1f7ac7","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.369745Z","level":"error","event":"25/08/31 18:28:57 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.528695Z","level":"error","event":"25/08/31 18:28:57 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.605748Z","level":"error","event":"25/08/31 18:28:57 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.662146Z","level":"error","event":"25/08/31 18:28:57 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:34779/jars/hadoop-aws-3.3.6.jar with timestamp 1756664936874","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.671033Z","level":"error","event":"25/08/31 18:28:57 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:34779/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664936874","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.671379Z","level":"error","event":"25/08/31 18:28:57 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:34779/jars/ojdbc11.jar with timestamp 1756664936874","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.671556Z","level":"error","event":"25/08/31 18:28:57 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.671841Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.671971Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672074Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672174Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672277Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672397Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672498Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672621Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672725Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672820Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.672919Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673016Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673112Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673208Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673319Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673428Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673525Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673625Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673724Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673829Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.673925Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674029Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674131Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674227Z","level":"error","event":"25/08/31 18:28:57 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674340Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674434Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674530Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674626Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674719Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674834Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.674932Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675023Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675108Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675189Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675273Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675374Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675457Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675540Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675626Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675709Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675786Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675862Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.675937Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.676010Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.676083Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.683662Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.683918Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.695800Z","level":"error","event":"25/08/31 18:28:57 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.701726Z","level":"error","event":"25/08/31 18:28:57 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.701967Z","level":"error","event":"25/08/31 18:28:57 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.702067Z","level":"error","event":"25/08/31 18:28:57 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.702142Z","level":"error","event":"25/08/31 18:28:57 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.853833Z","level":"error","event":"25/08/31 18:28:57 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.859512Z","level":"error","event":"25/08/31 18:28:57 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.859742Z","level":"error","event":"25/08/31 18:28:57 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.876140Z","level":"error","event":"25/08/31 18:28:57 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.882716Z","level":"error","event":"25/08/31 18:28:57 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@3cf8a601 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.891685Z","level":"error","event":"25/08/31 18:28:57 INFO Executor: Fetching spark://6548a13336e4:34779/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664936874","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.947193Z","level":"error","event":"25/08/31 18:28:57 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:34779 after 27 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:57.955890Z","level":"error","event":"25/08/31 18:28:57 INFO Utils: Fetching spark://6548a13336e4:34779/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-4897cf8d-dd4f-405e-a2b6-83f1a608cbc3/userFiles-8bb36f19-a2fb-4104-a7a1-eea0304262f0/fetchFileTemp7600716181516093277.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.700237Z","level":"error","event":"25/08/31 18:28:58 INFO Executor: Adding file:/tmp/spark-4897cf8d-dd4f-405e-a2b6-83f1a608cbc3/userFiles-8bb36f19-a2fb-4104-a7a1-eea0304262f0/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.706209Z","level":"error","event":"25/08/31 18:28:58 INFO Executor: Fetching spark://6548a13336e4:34779/jars/hadoop-aws-3.3.6.jar with timestamp 1756664936874","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.706399Z","level":"error","event":"25/08/31 18:28:58 INFO Utils: Fetching spark://6548a13336e4:34779/jars/hadoop-aws-3.3.6.jar to /tmp/spark-4897cf8d-dd4f-405e-a2b6-83f1a608cbc3/userFiles-8bb36f19-a2fb-4104-a7a1-eea0304262f0/fetchFileTemp14014344522287979886.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.713000Z","level":"error","event":"25/08/31 18:28:58 INFO Executor: Adding file:/tmp/spark-4897cf8d-dd4f-405e-a2b6-83f1a608cbc3/userFiles-8bb36f19-a2fb-4104-a7a1-eea0304262f0/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.726759Z","level":"error","event":"25/08/31 18:28:58 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 39521.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.731705Z","level":"error","event":"25/08/31 18:28:58 INFO NettyBlockTransferService: Server created on 6548a13336e4:39521","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.731860Z","level":"error","event":"25/08/31 18:28:58 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.743794Z","level":"error","event":"25/08/31 18:28:58 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 39521, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.750028Z","level":"error","event":"25/08/31 18:28:58 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:39521 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 39521, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.755732Z","level":"error","event":"25/08/31 18:28:58 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 39521, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:58.755956Z","level":"error","event":"25/08/31 18:28:58 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 39521, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.108732Z","level":"error","event":"25/08/31 18:28:59 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.108967Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109091Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109207Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109318Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109415Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109497Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109576Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109669Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109775Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109857Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.109938Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110023Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110111Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110200Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110291Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110395Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110504Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110600Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110718Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110827Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.110923Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111023Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111124Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111220Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111338Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111433Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111516Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111611Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111707Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:28:59.111803Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.170805Z","level":"error","event":"25/08/31 18:29:01 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.174429Z","level":"error","event":"25/08/31 18:29:01 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.183681Z","level":"error","event":"25/08/31 18:29:01 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.195429Z","level":"error","event":"25/08/31 18:29:01 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.209799Z","level":"error","event":"25/08/31 18:29:01 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.214254Z","level":"error","event":"25/08/31 18:29:01 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.214488Z","level":"error","event":"25/08/31 18:29:01 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.219821Z","level":"error","event":"25/08/31 18:29:01 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.225394Z","level":"error","event":"25/08/31 18:29:01 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.282175Z","level":"error","event":"25/08/31 18:29:01 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.286863Z","level":"error","event":"25/08/31 18:29:01 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.287019Z","level":"error","event":"25/08/31 18:29:01 INFO ShutdownHookManager: Deleting directory /tmp/spark-21ece57c-f3fc-4173-8d0b-902c1ee60ec9","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.291212Z","level":"error","event":"25/08/31 18:29:01 INFO ShutdownHookManager: Deleting directory /tmp/spark-4897cf8d-dd4f-405e-a2b6-83f1a608cbc3/pyspark-6558a915-1370-4cb1-8340-7e77ee577d2f","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:01.295182Z","level":"error","event":"25/08/31 18:29:01 INFO ShutdownHookManager: Deleting directory /tmp/spark-4897cf8d-dd4f-405e-a2b6-83f1a608cbc3","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:32.040087","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:29:32.778030Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.523107Z","level":"error","event":"25/08/31 18:29:34 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.757317Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.764607Z","level":"error","event":"25/08/31 18:29:34 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.764868Z","level":"error","event":"25/08/31 18:29:34 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.992313Z","level":"error","event":"25/08/31 18:29:34 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.998608Z","level":"error","event":"25/08/31 18:29:34 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:34.998861Z","level":"error","event":"25/08/31 18:29:34 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.028128Z","level":"error","event":"25/08/31 18:29:35 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.034733Z","level":"error","event":"25/08/31 18:29:35 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.034972Z","level":"error","event":"25/08/31 18:29:35 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.035095Z","level":"error","event":"25/08/31 18:29:35 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.059479Z","level":"error","event":"25/08/31 18:29:35 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.065323Z","level":"error","event":"25/08/31 18:29:35 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.065492Z","level":"error","event":"25/08/31 18:29:35 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.115670Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.121564Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.121732Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.121793Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.121844Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.367990Z","level":"error","event":"25/08/31 18:29:35 INFO Utils: Successfully started service 'sparkDriver' on port 33147.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.394201Z","level":"error","event":"25/08/31 18:29:35 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.409979Z","level":"error","event":"25/08/31 18:29:35 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.431919Z","level":"error","event":"25/08/31 18:29:35 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.440035Z","level":"error","event":"25/08/31 18:29:35 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.440338Z","level":"error","event":"25/08/31 18:29:35 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.472553Z","level":"error","event":"25/08/31 18:29:35 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-edd7a90e-d645-4b48-a8c4-2a1a796d240b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.515958Z","level":"error","event":"25/08/31 18:29:35 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.716812Z","level":"error","event":"25/08/31 18:29:35 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.800140Z","level":"error","event":"25/08/31 18:29:35 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.872175Z","level":"error","event":"25/08/31 18:29:35 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:33147/jars/hadoop-aws-3.3.6.jar with timestamp 1756664974987","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.872445Z","level":"error","event":"25/08/31 18:29:35 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:33147/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664974987","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.872578Z","level":"error","event":"25/08/31 18:29:35 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:33147/jars/ojdbc11.jar with timestamp 1756664974987","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881084Z","level":"error","event":"25/08/31 18:29:35 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881382Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881487Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881575Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881660Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881747Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881836Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.881921Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882002Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882074Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882141Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882234Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882363Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882463Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882567Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882674Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882780Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.882895Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883000Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883095Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883215Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883316Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883411Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883496Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883590Z","level":"error","event":"25/08/31 18:29:35 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883683Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883775Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883870Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.883964Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884055Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884146Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884239Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884337Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884436Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884533Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884638Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884747Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884843Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.884952Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885052Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885145Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885264Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885384Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885481Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885576Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885671Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885766Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.885862Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.912515Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.920264Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.920529Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.920654Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:35.920749Z","level":"error","event":"25/08/31 18:29:35 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.046804Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.051929Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.052099Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.069712Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.076653Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5f8d356e for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.094687Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Fetching spark://6548a13336e4:33147/jars/hadoop-aws-3.3.6.jar with timestamp 1756664974987","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.172803Z","level":"error","event":"25/08/31 18:29:36 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:33147 after 32 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.189744Z","level":"error","event":"25/08/31 18:29:36 INFO Utils: Fetching spark://6548a13336e4:33147/jars/hadoop-aws-3.3.6.jar to /tmp/spark-b9585a2b-8403-4a3c-ae59-b5fe592d56a6/userFiles-bc828927-d131-4657-8768-ff9b77ff6fd1/fetchFileTemp3068492327350409287.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.229611Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Adding file:/tmp/spark-b9585a2b-8403-4a3c-ae59-b5fe592d56a6/userFiles-bc828927-d131-4657-8768-ff9b77ff6fd1/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.236728Z","level":"error","event":"25/08/31 18:29:36 INFO Executor: Fetching spark://6548a13336e4:33147/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756664974987","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:36.236978Z","level":"error","event":"25/08/31 18:29:36 INFO Utils: Fetching spark://6548a13336e4:33147/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-b9585a2b-8403-4a3c-ae59-b5fe592d56a6/userFiles-bc828927-d131-4657-8768-ff9b77ff6fd1/fetchFileTemp17066278514898868019.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.076148Z","level":"error","event":"25/08/31 18:29:37 INFO Executor: Adding file:/tmp/spark-b9585a2b-8403-4a3c-ae59-b5fe592d56a6/userFiles-bc828927-d131-4657-8768-ff9b77ff6fd1/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.092538Z","level":"error","event":"25/08/31 18:29:37 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 46425.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.092791Z","level":"error","event":"25/08/31 18:29:37 INFO NettyBlockTransferService: Server created on 6548a13336e4:46425","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.098261Z","level":"error","event":"25/08/31 18:29:37 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.120437Z","level":"error","event":"25/08/31 18:29:37 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 46425, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.129248Z","level":"error","event":"25/08/31 18:29:37 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:46425 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 46425, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.136680Z","level":"error","event":"25/08/31 18:29:37 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 46425, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.136922Z","level":"error","event":"25/08/31 18:29:37 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 46425, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.593993Z","level":"error","event":"25/08/31 18:29:37 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.594279Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.594540Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.594667Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.594772Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.594879Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.594965Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595042Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595102Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595158Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595212Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595267Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595341Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595399Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595458Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595511Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595566Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595620Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595675Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595728Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595784Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595838Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595895Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.595950Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596006Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596062Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596119Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596171Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596230Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596284Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:37.596348Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.928752Z","level":"error","event":"25/08/31 18:29:39 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.928951Z","level":"error","event":"25/08/31 18:29:39 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.939970Z","level":"error","event":"25/08/31 18:29:39 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.952871Z","level":"error","event":"25/08/31 18:29:39 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.967694Z","level":"error","event":"25/08/31 18:29:39 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.973498Z","level":"error","event":"25/08/31 18:29:39 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.973721Z","level":"error","event":"25/08/31 18:29:39 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.979435Z","level":"error","event":"25/08/31 18:29:39 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:39.984762Z","level":"error","event":"25/08/31 18:29:39 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:40.051660Z","level":"error","event":"25/08/31 18:29:40 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:40.058680Z","level":"error","event":"25/08/31 18:29:40 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:40.058903Z","level":"error","event":"25/08/31 18:29:40 INFO ShutdownHookManager: Deleting directory /tmp/spark-4bc647f9-1848-402a-b2ca-b36c3164d5be","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:40.059025Z","level":"error","event":"25/08/31 18:29:40 INFO ShutdownHookManager: Deleting directory /tmp/spark-b9585a2b-8403-4a3c-ae59-b5fe592d56a6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:29:40.064759Z","level":"error","event":"25/08/31 18:29:40 INFO ShutdownHookManager: Deleting directory /tmp/spark-b9585a2b-8403-4a3c-ae59-b5fe592d56a6/pyspark-7d804a65-feb9-4865-a1ef-e04a194893d6","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:10.555026","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:30:11.210824Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.195211Z","level":"error","event":"25/08/31 18:30:13 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.466651Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.473350Z","level":"error","event":"25/08/31 18:30:13 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.480169Z","level":"error","event":"25/08/31 18:30:13 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.715458Z","level":"error","event":"25/08/31 18:30:13 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.720795Z","level":"error","event":"25/08/31 18:30:13 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.720972Z","level":"error","event":"25/08/31 18:30:13 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.754547Z","level":"error","event":"25/08/31 18:30:13 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.760250Z","level":"error","event":"25/08/31 18:30:13 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.760437Z","level":"error","event":"25/08/31 18:30:13 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.760507Z","level":"error","event":"25/08/31 18:30:13 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.787654Z","level":"error","event":"25/08/31 18:30:13 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.795271Z","level":"error","event":"25/08/31 18:30:13 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.795453Z","level":"error","event":"25/08/31 18:30:13 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.871563Z","level":"error","event":"25/08/31 18:30:13 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.879067Z","level":"error","event":"25/08/31 18:30:13 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.879332Z","level":"error","event":"25/08/31 18:30:13 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.879464Z","level":"error","event":"25/08/31 18:30:13 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:13.879582Z","level":"error","event":"25/08/31 18:30:13 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.351184Z","level":"error","event":"25/08/31 18:30:14 INFO Utils: Successfully started service 'sparkDriver' on port 40577.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.398756Z","level":"error","event":"25/08/31 18:30:14 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.416992Z","level":"error","event":"25/08/31 18:30:14 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.441419Z","level":"error","event":"25/08/31 18:30:14 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.449536Z","level":"error","event":"25/08/31 18:30:14 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.449829Z","level":"error","event":"25/08/31 18:30:14 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.479177Z","level":"error","event":"25/08/31 18:30:14 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-12b47303-73b4-4cf1-8efd-4b5691796182","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.515267Z","level":"error","event":"25/08/31 18:30:14 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.708356Z","level":"error","event":"25/08/31 18:30:14 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.815745Z","level":"error","event":"25/08/31 18:30:14 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.878763Z","level":"error","event":"25/08/31 18:30:14 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:40577/jars/hadoop-aws-3.3.6.jar with timestamp 1756665013710","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885197Z","level":"error","event":"25/08/31 18:30:14 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:40577/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665013710","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885407Z","level":"error","event":"25/08/31 18:30:14 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:40577/jars/ojdbc11.jar with timestamp 1756665013710","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885517Z","level":"error","event":"25/08/31 18:30:14 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885613Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885676Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885767Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885829Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885913Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.885988Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886056Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886128Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886218Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886304Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886385Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886469Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886548Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886622Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886697Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886763Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886843Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886924Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.886999Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887079Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887172Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887240Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887336Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887421Z","level":"error","event":"25/08/31 18:30:14 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887507Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887575Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887649Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887742Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887804Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887893Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.887952Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888050Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888132Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888226Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888289Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888413Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888511Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888626Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888706Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888788Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888893Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.888982Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.889087Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.889150Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.889205Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.895959Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.896130Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.912765Z","level":"error","event":"25/08/31 18:30:14 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.917487Z","level":"error","event":"25/08/31 18:30:14 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.917644Z","level":"error","event":"25/08/31 18:30:14 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.917708Z","level":"error","event":"25/08/31 18:30:14 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:14.917766Z","level":"error","event":"25/08/31 18:30:14 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.101245Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.101368Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.101469Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.113565Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.120467Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@714f8ccc for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.128268Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Fetching spark://6548a13336e4:40577/jars/hadoop-aws-3.3.6.jar with timestamp 1756665013710","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.192406Z","level":"error","event":"25/08/31 18:30:15 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:40577 after 28 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.199842Z","level":"error","event":"25/08/31 18:30:15 INFO Utils: Fetching spark://6548a13336e4:40577/jars/hadoop-aws-3.3.6.jar to /tmp/spark-aac6a258-999e-4287-ae82-04dc873b2743/userFiles-8bb350c5-9f2f-4697-a2c2-cb27a806ace1/fetchFileTemp15605558712598369833.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.235050Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Adding file:/tmp/spark-aac6a258-999e-4287-ae82-04dc873b2743/userFiles-8bb350c5-9f2f-4697-a2c2-cb27a806ace1/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.240014Z","level":"error","event":"25/08/31 18:30:15 INFO Executor: Fetching spark://6548a13336e4:40577/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665013710","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:15.240162Z","level":"error","event":"25/08/31 18:30:15 INFO Utils: Fetching spark://6548a13336e4:40577/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-aac6a258-999e-4287-ae82-04dc873b2743/userFiles-8bb350c5-9f2f-4697-a2c2-cb27a806ace1/fetchFileTemp11340581575149672243.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.182790Z","level":"error","event":"25/08/31 18:30:16 INFO Executor: Adding file:/tmp/spark-aac6a258-999e-4287-ae82-04dc873b2743/userFiles-8bb350c5-9f2f-4697-a2c2-cb27a806ace1/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.192944Z","level":"error","event":"25/08/31 18:30:16 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 36403.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.200377Z","level":"error","event":"25/08/31 18:30:16 INFO NettyBlockTransferService: Server created on 6548a13336e4:36403","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.200604Z","level":"error","event":"25/08/31 18:30:16 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.219650Z","level":"error","event":"25/08/31 18:30:16 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 36403, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.224976Z","level":"error","event":"25/08/31 18:30:16 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:36403 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 36403, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.230771Z","level":"error","event":"25/08/31 18:30:16 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 36403, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.231006Z","level":"error","event":"25/08/31 18:30:16 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 36403, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.625159Z","level":"error","event":"25/08/31 18:30:16 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.625466Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.625594Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.625705Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.625809Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.625906Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626006Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626106Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626205Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626367Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626474Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626570Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626673Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626776Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626873Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.626975Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627077Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627187Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627293Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627404Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627499Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627593Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627688Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627780Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627871Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.627962Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.628059Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.628151Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.628254Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.628367Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:16.628466Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.463455Z","level":"error","event":"25/08/31 18:30:19 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.467789Z","level":"error","event":"25/08/31 18:30:19 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.477901Z","level":"error","event":"25/08/31 18:30:19 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.490972Z","level":"error","event":"25/08/31 18:30:19 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.507602Z","level":"error","event":"25/08/31 18:30:19 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.514774Z","level":"error","event":"25/08/31 18:30:19 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.515033Z","level":"error","event":"25/08/31 18:30:19 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.522059Z","level":"error","event":"25/08/31 18:30:19 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.522243Z","level":"error","event":"25/08/31 18:30:19 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.586369Z","level":"error","event":"25/08/31 18:30:19 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.591048Z","level":"error","event":"25/08/31 18:30:19 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.591186Z","level":"error","event":"25/08/31 18:30:19 INFO ShutdownHookManager: Deleting directory /tmp/spark-098e80f1-7d81-4a41-880c-11e7e07c7668","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.593910Z","level":"error","event":"25/08/31 18:30:19 INFO ShutdownHookManager: Deleting directory /tmp/spark-aac6a258-999e-4287-ae82-04dc873b2743/pyspark-f26220cd-a0a4-4741-aa17-3013b332b9d2","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:19.597689Z","level":"error","event":"25/08/31 18:30:19 INFO ShutdownHookManager: Deleting directory /tmp/spark-aac6a258-999e-4287-ae82-04dc873b2743","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:50.649729","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:30:51.175706Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.275791Z","level":"error","event":"25/08/31 18:30:53 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.517683Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.522436Z","level":"error","event":"25/08/31 18:30:53 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.525877Z","level":"error","event":"25/08/31 18:30:53 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.719509Z","level":"error","event":"25/08/31 18:30:53 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.727514Z","level":"error","event":"25/08/31 18:30:53 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.727772Z","level":"error","event":"25/08/31 18:30:53 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.782785Z","level":"error","event":"25/08/31 18:30:53 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.791934Z","level":"error","event":"25/08/31 18:30:53 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.792191Z","level":"error","event":"25/08/31 18:30:53 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.792334Z","level":"error","event":"25/08/31 18:30:53 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.834830Z","level":"error","event":"25/08/31 18:30:53 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.846168Z","level":"error","event":"25/08/31 18:30:53 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.846515Z","level":"error","event":"25/08/31 18:30:53 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.922493Z","level":"error","event":"25/08/31 18:30:53 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.928707Z","level":"error","event":"25/08/31 18:30:53 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.928877Z","level":"error","event":"25/08/31 18:30:53 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.928943Z","level":"error","event":"25/08/31 18:30:53 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:53.935599Z","level":"error","event":"25/08/31 18:30:53 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.305650Z","level":"error","event":"25/08/31 18:30:54 INFO Utils: Successfully started service 'sparkDriver' on port 38423.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.349591Z","level":"error","event":"25/08/31 18:30:54 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.370367Z","level":"error","event":"25/08/31 18:30:54 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.401019Z","level":"error","event":"25/08/31 18:30:54 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.408295Z","level":"error","event":"25/08/31 18:30:54 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.414725Z","level":"error","event":"25/08/31 18:30:54 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.442474Z","level":"error","event":"25/08/31 18:30:54 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-0ca202f6-4bbb-439b-ae1f-1b8091aecf59","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.473956Z","level":"error","event":"25/08/31 18:30:54 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.639839Z","level":"error","event":"25/08/31 18:30:54 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.725367Z","level":"error","event":"25/08/31 18:30:54 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.738403Z","level":"error","event":"25/08/31 18:30:54 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.807863Z","level":"error","event":"25/08/31 18:30:54 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:38423/jars/hadoop-aws-3.3.6.jar with timestamp 1756665053714","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.807926Z","level":"error","event":"25/08/31 18:30:54 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:38423/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665053714","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.807996Z","level":"error","event":"25/08/31 18:30:54 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:38423/jars/ojdbc11.jar with timestamp 1756665053714","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.814403Z","level":"error","event":"25/08/31 18:30:54 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.814696Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.814820Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.814914Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815001Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815081Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815171Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815257Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815354Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815437Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815517Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815595Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815678Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815757Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815839Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.815922Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816013Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816102Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816192Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816282Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816408Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816509Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816594Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816683Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816772Z","level":"error","event":"25/08/31 18:30:54 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816866Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.816958Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817050Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817134Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817220Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817354Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817452Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817535Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817626Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817724Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817823Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.817923Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818010Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818095Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818180Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818268Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818374Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818485Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818582Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818674Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818764Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818853Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.818936Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.843125Z","level":"error","event":"25/08/31 18:30:54 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.849523Z","level":"error","event":"25/08/31 18:30:54 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.849764Z","level":"error","event":"25/08/31 18:30:54 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.849873Z","level":"error","event":"25/08/31 18:30:54 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:54.849947Z","level":"error","event":"25/08/31 18:30:54 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.006433Z","level":"error","event":"25/08/31 18:30:55 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.006570Z","level":"error","event":"25/08/31 18:30:55 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.006631Z","level":"error","event":"25/08/31 18:30:55 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.028791Z","level":"error","event":"25/08/31 18:30:55 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.028933Z","level":"error","event":"25/08/31 18:30:55 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@38d2738 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.038060Z","level":"error","event":"25/08/31 18:30:55 INFO Executor: Fetching spark://6548a13336e4:38423/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665053714","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.126556Z","level":"error","event":"25/08/31 18:30:55 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:38423 after 52 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:55.147003Z","level":"error","event":"25/08/31 18:30:55 INFO Utils: Fetching spark://6548a13336e4:38423/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-efa5b4d2-1062-4fe8-892c-3f3f036ee72d/userFiles-fdb186c3-c369-4a23-8c55-da2ca93260b4/fetchFileTemp11031841127951992002.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.321084Z","level":"error","event":"25/08/31 18:30:56 INFO Executor: Adding file:/tmp/spark-efa5b4d2-1062-4fe8-892c-3f3f036ee72d/userFiles-fdb186c3-c369-4a23-8c55-da2ca93260b4/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.321528Z","level":"error","event":"25/08/31 18:30:56 INFO Executor: Fetching spark://6548a13336e4:38423/jars/hadoop-aws-3.3.6.jar with timestamp 1756665053714","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.321699Z","level":"error","event":"25/08/31 18:30:56 INFO Utils: Fetching spark://6548a13336e4:38423/jars/hadoop-aws-3.3.6.jar to /tmp/spark-efa5b4d2-1062-4fe8-892c-3f3f036ee72d/userFiles-fdb186c3-c369-4a23-8c55-da2ca93260b4/fetchFileTemp17092614856378628193.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.329047Z","level":"error","event":"25/08/31 18:30:56 INFO Executor: Adding file:/tmp/spark-efa5b4d2-1062-4fe8-892c-3f3f036ee72d/userFiles-fdb186c3-c369-4a23-8c55-da2ca93260b4/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.354114Z","level":"error","event":"25/08/31 18:30:56 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 34639.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.354218Z","level":"error","event":"25/08/31 18:30:56 INFO NettyBlockTransferService: Server created on 6548a13336e4:34639","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.354315Z","level":"error","event":"25/08/31 18:30:56 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.371162Z","level":"error","event":"25/08/31 18:30:56 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 34639, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.380976Z","level":"error","event":"25/08/31 18:30:56 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:34639 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 34639, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.390134Z","level":"error","event":"25/08/31 18:30:56 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 34639, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.390486Z","level":"error","event":"25/08/31 18:30:56 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 34639, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.814308Z","level":"error","event":"25/08/31 18:30:56 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.814607Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.814743Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.814848Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.814944Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815045Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815151Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815288Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815416Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815512Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815605Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815697Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815793Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815890Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.815983Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816077Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816167Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816260Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816376Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816475Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816568Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816660Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816752Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816847Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.816941Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.817034Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.817126Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.817217Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.817330Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.817448Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:56.817554Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.437004Z","level":"error","event":"25/08/31 18:30:59 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.442761Z","level":"error","event":"25/08/31 18:30:59 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.449796Z","level":"error","event":"25/08/31 18:30:59 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.468103Z","level":"error","event":"25/08/31 18:30:59 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.477639Z","level":"error","event":"25/08/31 18:30:59 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.485191Z","level":"error","event":"25/08/31 18:30:59 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.485457Z","level":"error","event":"25/08/31 18:30:59 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.493132Z","level":"error","event":"25/08/31 18:30:59 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.493408Z","level":"error","event":"25/08/31 18:30:59 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.564572Z","level":"error","event":"25/08/31 18:30:59 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.569313Z","level":"error","event":"25/08/31 18:30:59 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.569505Z","level":"error","event":"25/08/31 18:30:59 INFO ShutdownHookManager: Deleting directory /tmp/spark-c1a1dd9d-9ab8-4e05-bc0a-0abad730d243","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.573376Z","level":"error","event":"25/08/31 18:30:59 INFO ShutdownHookManager: Deleting directory /tmp/spark-efa5b4d2-1062-4fe8-892c-3f3f036ee72d/pyspark-25bca157-3a47-4b06-844d-d2021f174238","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:30:59.576928Z","level":"error","event":"25/08/31 18:30:59 INFO ShutdownHookManager: Deleting directory /tmp/spark-efa5b4d2-1062-4fe8-892c-3f3f036ee72d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:30.386619","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:31:30.812177Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:32.647129Z","level":"error","event":"25/08/31 18:31:32 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:32.913674Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:32.918447Z","level":"error","event":"25/08/31 18:31:32 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:32.923214Z","level":"error","event":"25/08/31 18:31:32 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.121360Z","level":"error","event":"25/08/31 18:31:33 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.121600Z","level":"error","event":"25/08/31 18:31:33 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.121732Z","level":"error","event":"25/08/31 18:31:33 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.155962Z","level":"error","event":"25/08/31 18:31:33 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.156205Z","level":"error","event":"25/08/31 18:31:33 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.169648Z","level":"error","event":"25/08/31 18:31:33 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.170024Z","level":"error","event":"25/08/31 18:31:33 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.196980Z","level":"error","event":"25/08/31 18:31:33 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.203873Z","level":"error","event":"25/08/31 18:31:33 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.204115Z","level":"error","event":"25/08/31 18:31:33 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.265929Z","level":"error","event":"25/08/31 18:31:33 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.273517Z","level":"error","event":"25/08/31 18:31:33 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.273767Z","level":"error","event":"25/08/31 18:31:33 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.273881Z","level":"error","event":"25/08/31 18:31:33 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.273981Z","level":"error","event":"25/08/31 18:31:33 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.582236Z","level":"error","event":"25/08/31 18:31:33 INFO Utils: Successfully started service 'sparkDriver' on port 43039.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.624584Z","level":"error","event":"25/08/31 18:31:33 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.646530Z","level":"error","event":"25/08/31 18:31:33 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.674282Z","level":"error","event":"25/08/31 18:31:33 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.680060Z","level":"error","event":"25/08/31 18:31:33 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.680248Z","level":"error","event":"25/08/31 18:31:33 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.706836Z","level":"error","event":"25/08/31 18:31:33 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-7cc208de-0b57-44a9-9d0f-58cc60fd2f79","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.735238Z","level":"error","event":"25/08/31 18:31:33 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.899319Z","level":"error","event":"25/08/31 18:31:33 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.979580Z","level":"error","event":"25/08/31 18:31:33 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:33.992085Z","level":"error","event":"25/08/31 18:31:33 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.058663Z","level":"error","event":"25/08/31 18:31:34 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:43039/jars/hadoop-aws-3.3.6.jar with timestamp 1756665093111","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.065263Z","level":"error","event":"25/08/31 18:31:34 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:43039/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665093111","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.065537Z","level":"error","event":"25/08/31 18:31:34 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:43039/jars/ojdbc11.jar with timestamp 1756665093111","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.065670Z","level":"error","event":"25/08/31 18:31:34 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.065788Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.065891Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.065989Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066085Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066177Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066276Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066394Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066495Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066610Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066714Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066815Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.066915Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067015Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067106Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067196Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067286Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067392Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067490Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067583Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067680Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067776Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067872Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.067979Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068080Z","level":"error","event":"25/08/31 18:31:34 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068176Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068277Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068402Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068511Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068637Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068749Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068876Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.068986Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069092Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069196Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069311Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069426Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069532Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069648Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069757Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069864Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.069964Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.070062Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.070160Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.070258Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.070377Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.077117Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.077371Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.096940Z","level":"error","event":"25/08/31 18:31:34 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.101978Z","level":"error","event":"25/08/31 18:31:34 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.102142Z","level":"error","event":"25/08/31 18:31:34 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.102207Z","level":"error","event":"25/08/31 18:31:34 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.102262Z","level":"error","event":"25/08/31 18:31:34 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.274914Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.281329Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.281618Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.299738Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.308470Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@38d2738 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.322440Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Fetching spark://6548a13336e4:43039/jars/hadoop-aws-3.3.6.jar with timestamp 1756665093111","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.400390Z","level":"error","event":"25/08/31 18:31:34 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:43039 after 37 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.410967Z","level":"error","event":"25/08/31 18:31:34 INFO Utils: Fetching spark://6548a13336e4:43039/jars/hadoop-aws-3.3.6.jar to /tmp/spark-1c51ffab-d0d6-4f6e-be7f-6a150b967160/userFiles-3962bb14-1ebe-4a5c-a55b-aacdee878a60/fetchFileTemp2314109468366710359.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.448590Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Adding file:/tmp/spark-1c51ffab-d0d6-4f6e-be7f-6a150b967160/userFiles-3962bb14-1ebe-4a5c-a55b-aacdee878a60/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.456309Z","level":"error","event":"25/08/31 18:31:34 INFO Executor: Fetching spark://6548a13336e4:43039/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665093111","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:34.456499Z","level":"error","event":"25/08/31 18:31:34 INFO Utils: Fetching spark://6548a13336e4:43039/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-1c51ffab-d0d6-4f6e-be7f-6a150b967160/userFiles-3962bb14-1ebe-4a5c-a55b-aacdee878a60/fetchFileTemp8608226054737707904.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.307141Z","level":"error","event":"25/08/31 18:31:35 INFO Executor: Adding file:/tmp/spark-1c51ffab-d0d6-4f6e-be7f-6a150b967160/userFiles-3962bb14-1ebe-4a5c-a55b-aacdee878a60/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.325737Z","level":"error","event":"25/08/31 18:31:35 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 39095.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.334552Z","level":"error","event":"25/08/31 18:31:35 INFO NettyBlockTransferService: Server created on 6548a13336e4:39095","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.334880Z","level":"error","event":"25/08/31 18:31:35 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.354275Z","level":"error","event":"25/08/31 18:31:35 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 39095, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.364243Z","level":"error","event":"25/08/31 18:31:35 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:39095 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 39095, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.372102Z","level":"error","event":"25/08/31 18:31:35 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 39095, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.372279Z","level":"error","event":"25/08/31 18:31:35 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 39095, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.811738Z","level":"error","event":"25/08/31 18:31:35 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812064Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812192Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812318Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812443Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812545Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812652Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812758Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812848Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.812936Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813024Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813107Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813201Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813294Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813397Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813481Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813591Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813694Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813811Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813907Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.813998Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814091Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814179Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814274Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814460Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814713Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814858Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.814951Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.815038Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.815131Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:35.815213Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.270837Z","level":"error","event":"25/08/31 18:31:38 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.274169Z","level":"error","event":"25/08/31 18:31:38 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.281520Z","level":"error","event":"25/08/31 18:31:38 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.291945Z","level":"error","event":"25/08/31 18:31:38 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.306028Z","level":"error","event":"25/08/31 18:31:38 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.309970Z","level":"error","event":"25/08/31 18:31:38 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.310107Z","level":"error","event":"25/08/31 18:31:38 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.314381Z","level":"error","event":"25/08/31 18:31:38 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.318936Z","level":"error","event":"25/08/31 18:31:38 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.379955Z","level":"error","event":"25/08/31 18:31:38 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.384378Z","level":"error","event":"25/08/31 18:31:38 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.384510Z","level":"error","event":"25/08/31 18:31:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-1c51ffab-d0d6-4f6e-be7f-6a150b967160/pyspark-7655e25f-4f93-4fc3-b384-1d9615e09029","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.387805Z","level":"error","event":"25/08/31 18:31:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-4db9e9d5-bcf2-4fb0-a0af-22ca284a52f0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:31:38.391016Z","level":"error","event":"25/08/31 18:31:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-1c51ffab-d0d6-4f6e-be7f-6a150b967160","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:09.084419","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:32:09.544427Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.400988Z","level":"error","event":"25/08/31 18:32:11 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.651078Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.658916Z","level":"error","event":"25/08/31 18:32:11 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.659157Z","level":"error","event":"25/08/31 18:32:11 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.861324Z","level":"error","event":"25/08/31 18:32:11 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.866446Z","level":"error","event":"25/08/31 18:32:11 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.866605Z","level":"error","event":"25/08/31 18:32:11 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.894015Z","level":"error","event":"25/08/31 18:32:11 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.900200Z","level":"error","event":"25/08/31 18:32:11 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.900473Z","level":"error","event":"25/08/31 18:32:11 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.900573Z","level":"error","event":"25/08/31 18:32:11 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.935322Z","level":"error","event":"25/08/31 18:32:11 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.941922Z","level":"error","event":"25/08/31 18:32:11 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:11.942154Z","level":"error","event":"25/08/31 18:32:11 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.023218Z","level":"error","event":"25/08/31 18:32:12 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.030592Z","level":"error","event":"25/08/31 18:32:12 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.030805Z","level":"error","event":"25/08/31 18:32:12 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.030875Z","level":"error","event":"25/08/31 18:32:12 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.036776Z","level":"error","event":"25/08/31 18:32:12 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.442240Z","level":"error","event":"25/08/31 18:32:12 INFO Utils: Successfully started service 'sparkDriver' on port 38169.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.511563Z","level":"error","event":"25/08/31 18:32:12 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.542245Z","level":"error","event":"25/08/31 18:32:12 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.579855Z","level":"error","event":"25/08/31 18:32:12 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.587644Z","level":"error","event":"25/08/31 18:32:12 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.595005Z","level":"error","event":"25/08/31 18:32:12 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.633453Z","level":"error","event":"25/08/31 18:32:12 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-cf6ae413-34d0-4e05-8afb-8223c2193613","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.677923Z","level":"error","event":"25/08/31 18:32:12 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.873729Z","level":"error","event":"25/08/31 18:32:12 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:12.995775Z","level":"error","event":"25/08/31 18:32:12 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.071665Z","level":"error","event":"25/08/31 18:32:13 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:38169/jars/hadoop-aws-3.3.6.jar with timestamp 1756665131856","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.081813Z","level":"error","event":"25/08/31 18:32:13 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:38169/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665131856","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082141Z","level":"error","event":"25/08/31 18:32:13 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:38169/jars/ojdbc11.jar with timestamp 1756665131856","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082322Z","level":"error","event":"25/08/31 18:32:13 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082434Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082535Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082624Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082709Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082798Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082884Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.082972Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083062Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083151Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083251Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083363Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083467Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083564Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083664Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083762Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083855Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.083945Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084033Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084125Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084215Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084355Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084471Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084576Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084677Z","level":"error","event":"25/08/31 18:32:13 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084785Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084887Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.084993Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085092Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085190Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085288Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085415Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085533Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085634Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085722Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085810Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085898Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.085997Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086090Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086178Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086240Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086293Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086366Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086437Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086491Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.086569Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.096350Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.096709Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.121032Z","level":"error","event":"25/08/31 18:32:13 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.128378Z","level":"error","event":"25/08/31 18:32:13 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.128586Z","level":"error","event":"25/08/31 18:32:13 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.128660Z","level":"error","event":"25/08/31 18:32:13 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.128725Z","level":"error","event":"25/08/31 18:32:13 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.340272Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.352003Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.352363Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.373053Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.382628Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@1f21d715 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.403651Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Fetching spark://6548a13336e4:38169/jars/hadoop-aws-3.3.6.jar with timestamp 1756665131856","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.521077Z","level":"error","event":"25/08/31 18:32:13 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:38169 after 52 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.527993Z","level":"error","event":"25/08/31 18:32:13 INFO Utils: Fetching spark://6548a13336e4:38169/jars/hadoop-aws-3.3.6.jar to /tmp/spark-22c3bf6f-c3c0-48ca-9645-cf034f053411/userFiles-617c7591-26b6-48b9-94d5-ebcaa09ed7a7/fetchFileTemp17715412508280313563.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.573655Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Adding file:/tmp/spark-22c3bf6f-c3c0-48ca-9645-cf034f053411/userFiles-617c7591-26b6-48b9-94d5-ebcaa09ed7a7/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.579730Z","level":"error","event":"25/08/31 18:32:13 INFO Executor: Fetching spark://6548a13336e4:38169/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665131856","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:13.579899Z","level":"error","event":"25/08/31 18:32:13 INFO Utils: Fetching spark://6548a13336e4:38169/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-22c3bf6f-c3c0-48ca-9645-cf034f053411/userFiles-617c7591-26b6-48b9-94d5-ebcaa09ed7a7/fetchFileTemp18154910157541567988.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.393000Z","level":"error","event":"25/08/31 18:32:14 INFO Executor: Adding file:/tmp/spark-22c3bf6f-c3c0-48ca-9645-cf034f053411/userFiles-617c7591-26b6-48b9-94d5-ebcaa09ed7a7/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.406598Z","level":"error","event":"25/08/31 18:32:14 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 38325.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.412991Z","level":"error","event":"25/08/31 18:32:14 INFO NettyBlockTransferService: Server created on 6548a13336e4:38325","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.413177Z","level":"error","event":"25/08/31 18:32:14 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.432027Z","level":"error","event":"25/08/31 18:32:14 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 38325, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.439601Z","level":"error","event":"25/08/31 18:32:14 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:38325 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 38325, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.444994Z","level":"error","event":"25/08/31 18:32:14 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 38325, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.445147Z","level":"error","event":"25/08/31 18:32:14 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 38325, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.882751Z","level":"error","event":"25/08/31 18:32:14 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883141Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883310Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883423Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883526Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883634Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883735Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883833Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.883958Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884061Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884158Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884257Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884372Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884464Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884550Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884643Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884739Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884830Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.884937Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885029Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885117Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885211Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885307Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885422Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885518Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885604Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885691Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885778Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885863Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.885965Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:14.886052Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.208649Z","level":"error","event":"25/08/31 18:32:17 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.212305Z","level":"error","event":"25/08/31 18:32:17 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.222185Z","level":"error","event":"25/08/31 18:32:17 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.233252Z","level":"error","event":"25/08/31 18:32:17 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.247412Z","level":"error","event":"25/08/31 18:32:17 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.252100Z","level":"error","event":"25/08/31 18:32:17 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.252256Z","level":"error","event":"25/08/31 18:32:17 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.256152Z","level":"error","event":"25/08/31 18:32:17 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.260874Z","level":"error","event":"25/08/31 18:32:17 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.318121Z","level":"error","event":"25/08/31 18:32:17 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.325813Z","level":"error","event":"25/08/31 18:32:17 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.326053Z","level":"error","event":"25/08/31 18:32:17 INFO ShutdownHookManager: Deleting directory /tmp/spark-cbb23cc3-97b2-4633-96f3-6d3ed1d6ba6d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.326172Z","level":"error","event":"25/08/31 18:32:17 INFO ShutdownHookManager: Deleting directory /tmp/spark-22c3bf6f-c3c0-48ca-9645-cf034f053411/pyspark-bf3a1740-5b6b-477e-ad81-322bb4c0bfd4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:17.333053Z","level":"error","event":"25/08/31 18:32:17 INFO ShutdownHookManager: Deleting directory /tmp/spark-22c3bf6f-c3c0-48ca-9645-cf034f053411","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:48.122617","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:32:48.536574Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.353261Z","level":"error","event":"25/08/31 18:32:50 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.617179Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.622445Z","level":"error","event":"25/08/31 18:32:50 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.627204Z","level":"error","event":"25/08/31 18:32:50 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.878564Z","level":"error","event":"25/08/31 18:32:50 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.885762Z","level":"error","event":"25/08/31 18:32:50 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.886013Z","level":"error","event":"25/08/31 18:32:50 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.922410Z","level":"error","event":"25/08/31 18:32:50 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.927509Z","level":"error","event":"25/08/31 18:32:50 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.927679Z","level":"error","event":"25/08/31 18:32:50 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.927745Z","level":"error","event":"25/08/31 18:32:50 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.961512Z","level":"error","event":"25/08/31 18:32:50 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.968744Z","level":"error","event":"25/08/31 18:32:50 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:50.968986Z","level":"error","event":"25/08/31 18:32:50 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.019792Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.026933Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.027114Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.027177Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.027230Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.301871Z","level":"error","event":"25/08/31 18:32:51 INFO Utils: Successfully started service 'sparkDriver' on port 41469.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.331026Z","level":"error","event":"25/08/31 18:32:51 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.346885Z","level":"error","event":"25/08/31 18:32:51 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.370210Z","level":"error","event":"25/08/31 18:32:51 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.376277Z","level":"error","event":"25/08/31 18:32:51 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.376531Z","level":"error","event":"25/08/31 18:32:51 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.401782Z","level":"error","event":"25/08/31 18:32:51 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-ea8b2697-ad17-42eb-9816-9a557132e70b","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.432421Z","level":"error","event":"25/08/31 18:32:51 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.599655Z","level":"error","event":"25/08/31 18:32:51 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.667774Z","level":"error","event":"25/08/31 18:32:51 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.678649Z","level":"error","event":"25/08/31 18:32:51 INFO Utils: Successfully started service 'SparkUI' on port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.725115Z","level":"error","event":"25/08/31 18:32:51 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:41469/jars/hadoop-aws-3.3.6.jar with timestamp 1756665170872","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733105Z","level":"error","event":"25/08/31 18:32:51 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:41469/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665170872","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733406Z","level":"error","event":"25/08/31 18:32:51 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:41469/jars/ojdbc11.jar with timestamp 1756665170872","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733539Z","level":"error","event":"25/08/31 18:32:51 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733647Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733745Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733844Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.733937Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734025Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734113Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734205Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734304Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734409Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734545Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734629Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734712Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734800Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734885Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.734969Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735054Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735147Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735235Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735333Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735422Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735506Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735593Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735685Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735776Z","level":"error","event":"25/08/31 18:32:51 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735864Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.735955Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736049Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736148Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736241Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736342Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736425Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736528Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736632Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736724Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736825Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.736924Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737024Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737119Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737217Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737342Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737436Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737536Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737616Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737690Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.737754Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.745295Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.745549Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.754630Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.760571Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.760745Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.760821Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.760882Z","level":"error","event":"25/08/31 18:32:51 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.900758Z","level":"error","event":"25/08/31 18:32:51 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.905779Z","level":"error","event":"25/08/31 18:32:51 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.905940Z","level":"error","event":"25/08/31 18:32:51 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.922554Z","level":"error","event":"25/08/31 18:32:51 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.929624Z","level":"error","event":"25/08/31 18:32:51 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@390acac5 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:51.939495Z","level":"error","event":"25/08/31 18:32:51 INFO Executor: Fetching spark://6548a13336e4:41469/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665170872","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.013311Z","level":"error","event":"25/08/31 18:32:52 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:41469 after 38 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.020629Z","level":"error","event":"25/08/31 18:32:52 INFO Utils: Fetching spark://6548a13336e4:41469/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-f859fdb0-1a03-4689-a331-68f6b9d236c4/userFiles-5a2cfb35-fd0f-4620-ad5c-d5819415f650/fetchFileTemp10082569089368233907.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.811842Z","level":"error","event":"25/08/31 18:32:52 INFO Executor: Adding file:/tmp/spark-f859fdb0-1a03-4689-a331-68f6b9d236c4/userFiles-5a2cfb35-fd0f-4620-ad5c-d5819415f650/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.818002Z","level":"error","event":"25/08/31 18:32:52 INFO Executor: Fetching spark://6548a13336e4:41469/jars/hadoop-aws-3.3.6.jar with timestamp 1756665170872","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.818160Z","level":"error","event":"25/08/31 18:32:52 INFO Utils: Fetching spark://6548a13336e4:41469/jars/hadoop-aws-3.3.6.jar to /tmp/spark-f859fdb0-1a03-4689-a331-68f6b9d236c4/userFiles-5a2cfb35-fd0f-4620-ad5c-d5819415f650/fetchFileTemp9494172241745241240.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.822345Z","level":"error","event":"25/08/31 18:32:52 INFO Executor: Adding file:/tmp/spark-f859fdb0-1a03-4689-a331-68f6b9d236c4/userFiles-5a2cfb35-fd0f-4620-ad5c-d5819415f650/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.834136Z","level":"error","event":"25/08/31 18:32:52 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 46229.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.839131Z","level":"error","event":"25/08/31 18:32:52 INFO NettyBlockTransferService: Server created on 6548a13336e4:46229","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.839293Z","level":"error","event":"25/08/31 18:32:52 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.858697Z","level":"error","event":"25/08/31 18:32:52 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 46229, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.865919Z","level":"error","event":"25/08/31 18:32:52 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:46229 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 46229, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.873518Z","level":"error","event":"25/08/31 18:32:52 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 46229, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:52.873813Z","level":"error","event":"25/08/31 18:32:52 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 46229, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.225753Z","level":"error","event":"25/08/31 18:32:53 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.225992Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226081Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226152Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226217Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226282Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226375Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226439Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226491Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226544Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226595Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226646Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226699Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226751Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226802Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226853Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226904Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.226955Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227022Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227076Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227128Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227179Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227231Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227281Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227352Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227404Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227453Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227501Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227550Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227600Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:53.227648Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.460837Z","level":"error","event":"25/08/31 18:32:55 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.461054Z","level":"error","event":"25/08/31 18:32:55 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.469526Z","level":"error","event":"25/08/31 18:32:55 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4041","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.483617Z","level":"error","event":"25/08/31 18:32:55 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.501843Z","level":"error","event":"25/08/31 18:32:55 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.502037Z","level":"error","event":"25/08/31 18:32:55 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.502129Z","level":"error","event":"25/08/31 18:32:55 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.508862Z","level":"error","event":"25/08/31 18:32:55 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.515217Z","level":"error","event":"25/08/31 18:32:55 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.566636Z","level":"error","event":"25/08/31 18:32:55 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.571174Z","level":"error","event":"25/08/31 18:32:55 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.571330Z","level":"error","event":"25/08/31 18:32:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-f859fdb0-1a03-4689-a331-68f6b9d236c4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.574329Z","level":"error","event":"25/08/31 18:32:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-f859fdb0-1a03-4689-a331-68f6b9d236c4/pyspark-538b69f7-ecb2-4d78-bd17-3967d858159e","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:32:55.577433Z","level":"error","event":"25/08/31 18:32:55 INFO ShutdownHookManager: Deleting directory /tmp/spark-3264ccef-50ef-4c2a-a926-f8a428838aca","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:26.038190","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:33:26.489778Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.295174Z","level":"error","event":"25/08/31 18:33:28 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.572166Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.581601Z","level":"error","event":"25/08/31 18:33:28 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.589558Z","level":"error","event":"25/08/31 18:33:28 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.813003Z","level":"error","event":"25/08/31 18:33:28 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.819890Z","level":"error","event":"25/08/31 18:33:28 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.820088Z","level":"error","event":"25/08/31 18:33:28 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.860251Z","level":"error","event":"25/08/31 18:33:28 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.867158Z","level":"error","event":"25/08/31 18:33:28 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.867396Z","level":"error","event":"25/08/31 18:33:28 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.867514Z","level":"error","event":"25/08/31 18:33:28 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.898582Z","level":"error","event":"25/08/31 18:33:28 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.905293Z","level":"error","event":"25/08/31 18:33:28 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.905494Z","level":"error","event":"25/08/31 18:33:28 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.965242Z","level":"error","event":"25/08/31 18:33:28 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.980860Z","level":"error","event":"25/08/31 18:33:28 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.981112Z","level":"error","event":"25/08/31 18:33:28 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.981238Z","level":"error","event":"25/08/31 18:33:28 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:28.981371Z","level":"error","event":"25/08/31 18:33:28 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.229285Z","level":"error","event":"25/08/31 18:33:29 INFO Utils: Successfully started service 'sparkDriver' on port 36495.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.266314Z","level":"error","event":"25/08/31 18:33:29 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.277496Z","level":"error","event":"25/08/31 18:33:29 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.295357Z","level":"error","event":"25/08/31 18:33:29 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.300460Z","level":"error","event":"25/08/31 18:33:29 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.304550Z","level":"error","event":"25/08/31 18:33:29 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.333685Z","level":"error","event":"25/08/31 18:33:29 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-3510fc59-831d-4f28-9840-f54943fda9fa","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.368805Z","level":"error","event":"25/08/31 18:33:29 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.527579Z","level":"error","event":"25/08/31 18:33:29 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.608053Z","level":"error","event":"25/08/31 18:33:29 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.666133Z","level":"error","event":"25/08/31 18:33:29 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://6548a13336e4:36495/jars/hadoop-aws-3.3.6.jar with timestamp 1756665208806","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.672783Z","level":"error","event":"25/08/31 18:33:29 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://6548a13336e4:36495/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665208806","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.672967Z","level":"error","event":"25/08/31 18:33:29 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://6548a13336e4:36495/jars/ojdbc11.jar with timestamp 1756665208806","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673054Z","level":"error","event":"25/08/31 18:33:29 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673151Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673215Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673279Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673343Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673401Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673450Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673500Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673547Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673593Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673642Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673689Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673737Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673798Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673848Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673894Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673941Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.673986Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674054Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674102Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674148Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674203Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674252Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674309Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674362Z","level":"error","event":"25/08/31 18:33:29 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674411Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674459Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674512Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674578Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674630Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674681Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674731Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674781Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674846Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674902Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.674953Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675001Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675049Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675098Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675146Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675197Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675245Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675292Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675357Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675407Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.675463Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.682319Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.682836Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.698498Z","level":"error","event":"25/08/31 18:33:29 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.705283Z","level":"error","event":"25/08/31 18:33:29 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.705558Z","level":"error","event":"25/08/31 18:33:29 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.705689Z","level":"error","event":"25/08/31 18:33:29 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.705810Z","level":"error","event":"25/08/31 18:33:29 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.863472Z","level":"error","event":"25/08/31 18:33:29 INFO Executor: Starting executor ID driver on host 6548a13336e4","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.869708Z","level":"error","event":"25/08/31 18:33:29 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.869910Z","level":"error","event":"25/08/31 18:33:29 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.884850Z","level":"error","event":"25/08/31 18:33:29 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.892085Z","level":"error","event":"25/08/31 18:33:29 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@3cf8a601 for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.907023Z","level":"error","event":"25/08/31 18:33:29 INFO Executor: Fetching spark://6548a13336e4:36495/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665208806","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.985064Z","level":"error","event":"25/08/31 18:33:29 INFO TransportClientFactory: Successfully created connection to 6548a13336e4/172.18.0.11:36495 after 35 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:29.993592Z","level":"error","event":"25/08/31 18:33:29 INFO Utils: Fetching spark://6548a13336e4:36495/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-9acab12e-9906-467f-bc13-d5864619b8c0/userFiles-b433bade-1933-4851-aba6-ccff226a8509/fetchFileTemp18344285325526711816.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:30.968581Z","level":"error","event":"25/08/31 18:33:30 INFO Executor: Adding file:/tmp/spark-9acab12e-9906-467f-bc13-d5864619b8c0/userFiles-b433bade-1933-4851-aba6-ccff226a8509/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:30.979531Z","level":"error","event":"25/08/31 18:33:30 INFO Executor: Fetching spark://6548a13336e4:36495/jars/hadoop-aws-3.3.6.jar with timestamp 1756665208806","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:30.979696Z","level":"error","event":"25/08/31 18:33:30 INFO Utils: Fetching spark://6548a13336e4:36495/jars/hadoop-aws-3.3.6.jar to /tmp/spark-9acab12e-9906-467f-bc13-d5864619b8c0/userFiles-b433bade-1933-4851-aba6-ccff226a8509/fetchFileTemp10718478327007747916.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:30.979762Z","level":"error","event":"25/08/31 18:33:30 INFO Executor: Adding file:/tmp/spark-9acab12e-9906-467f-bc13-d5864619b8c0/userFiles-b433bade-1933-4851-aba6-ccff226a8509/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:30.995643Z","level":"error","event":"25/08/31 18:33:30 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 40433.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.003492Z","level":"error","event":"25/08/31 18:33:30 INFO NettyBlockTransferService: Server created on 6548a13336e4:40433","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.003743Z","level":"error","event":"25/08/31 18:33:30 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.018120Z","level":"error","event":"25/08/31 18:33:31 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 6548a13336e4, 40433, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.034093Z","level":"error","event":"25/08/31 18:33:31 INFO BlockManagerMasterEndpoint: Registering block manager 6548a13336e4:40433 with 434.4 MiB RAM, BlockManagerId(driver, 6548a13336e4, 40433, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.034177Z","level":"error","event":"25/08/31 18:33:31 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 6548a13336e4, 40433, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.039961Z","level":"error","event":"25/08/31 18:33:31 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 6548a13336e4, 40433, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.608836Z","level":"error","event":"25/08/31 18:33:31 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609215Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609373Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609482Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609587Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609686Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609787Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.609895Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610013Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610124Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610217Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610324Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610433Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610543Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610637Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610729Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610826Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.610924Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611016Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611112Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611209Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611307Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611409Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611507Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611606Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611708Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611806Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.611905Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.612002Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.612099Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:31.612217Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630459Z","level":"error","event":"25/08/31 18:33:33 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630712Z","level":"error","event":"25/08/31 18:33:33 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630774Z","level":"error","event":"25/08/31 18:33:33 INFO SparkUI: Stopped Spark web UI at http://6548a13336e4:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630823Z","level":"error","event":"25/08/31 18:33:33 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630867Z","level":"error","event":"25/08/31 18:33:33 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630908Z","level":"error","event":"25/08/31 18:33:33 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630950Z","level":"error","event":"25/08/31 18:33:33 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.630989Z","level":"error","event":"25/08/31 18:33:33 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.631030Z","level":"error","event":"25/08/31 18:33:33 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.631071Z","level":"error","event":"25/08/31 18:33:33 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.631110Z","level":"error","event":"25/08/31 18:33:33 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.631148Z","level":"error","event":"25/08/31 18:33:33 INFO ShutdownHookManager: Deleting directory /tmp/spark-942e9b85-b855-46f5-8c83-f0002ff90596","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.631188Z","level":"error","event":"25/08/31 18:33:33 INFO ShutdownHookManager: Deleting directory /tmp/spark-9acab12e-9906-467f-bc13-d5864619b8c0/pyspark-9a7c368e-b1e5-45dc-a89c-7229d29d4e9e","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:33:33.631231Z","level":"error","event":"25/08/31 18:33:33 INFO ShutdownHookManager: Deleting directory /tmp/spark-9acab12e-9906-467f-bc13-d5864619b8c0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:41.453347","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:35:45.920224Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:46.760435Z","level":"error","event":"25/08/31 18:35:46 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.160250Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.168870Z","level":"error","event":"25/08/31 18:35:47 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.169134Z","level":"error","event":"25/08/31 18:35:47 WARN DependencyUtils: Local jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar does not exist, skipping.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.695745Z","level":"error","event":"25/08/31 18:35:47 INFO SparkContext: Running Spark version 4.0.0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.703422Z","level":"error","event":"25/08/31 18:35:47 INFO SparkContext: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.703683Z","level":"error","event":"25/08/31 18:35:47 INFO SparkContext: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.766657Z","level":"error","event":"25/08/31 18:35:47 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.773407Z","level":"error","event":"25/08/31 18:35:47 INFO ResourceUtils: No custom resources configured for spark.driver.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.773638Z","level":"error","event":"25/08/31 18:35:47 INFO ResourceUtils: ==============================================================","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.773756Z","level":"error","event":"25/08/31 18:35:47 INFO SparkContext: Submitted application: BAITEST","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.815107Z","level":"error","event":"25/08/31 18:35:47 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.823237Z","level":"error","event":"25/08/31 18:35:47 INFO ResourceProfile: Limiting resource is cpu","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.831539Z","level":"error","event":"25/08/31 18:35:47 INFO ResourceProfileManager: Added ResourceProfile id: 0","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.909208Z","level":"error","event":"25/08/31 18:35:47 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.909329Z","level":"error","event":"25/08/31 18:35:47 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.909430Z","level":"error","event":"25/08/31 18:35:47 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.909527Z","level":"error","event":"25/08/31 18:35:47 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:47.919146Z","level":"error","event":"25/08/31 18:35:47 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.446001Z","level":"error","event":"25/08/31 18:35:48 INFO Utils: Successfully started service 'sparkDriver' on port 43703.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.497692Z","level":"error","event":"25/08/31 18:35:48 INFO SparkEnv: Registering MapOutputTracker","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.529561Z","level":"error","event":"25/08/31 18:35:48 INFO SparkEnv: Registering BlockManagerMaster","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.555283Z","level":"error","event":"25/08/31 18:35:48 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.563256Z","level":"error","event":"25/08/31 18:35:48 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.563556Z","level":"error","event":"25/08/31 18:35:48 INFO SparkEnv: Registering BlockManagerMasterHeartbeat","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.594549Z","level":"error","event":"25/08/31 18:35:48 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-f0a5d8ac-d436-4f53-8e7f-d851dbee4f69","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.630596Z","level":"error","event":"25/08/31 18:35:48 INFO SparkEnv: Registering OutputCommitCoordinator","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.830660Z","level":"error","event":"25/08/31 18:35:48 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:48.967886Z","level":"error","event":"25/08/31 18:35:48 INFO Utils: Successfully started service 'SparkUI' on port 4040.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.045266Z","level":"error","event":"25/08/31 18:35:49 INFO SparkContext: Added JAR /opt/spark/jars/hadoop-aws-3.3.6.jar at spark://102c1303304a:43703/jars/hadoop-aws-3.3.6.jar with timestamp 1756665347686","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.054266Z","level":"error","event":"25/08/31 18:35:49 INFO SparkContext: Added JAR /opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar at spark://102c1303304a:43703/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665347686","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.054540Z","level":"error","event":"25/08/31 18:35:49 INFO SparkContext: Added JAR /opt/spark/jars/ojdbc11.jar at spark://102c1303304a:43703/jars/ojdbc11.jar with timestamp 1756665347686","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.054658Z","level":"error","event":"25/08/31 18:35:49 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.054768Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-spark-runtime-4.0_2.13-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.054867Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.054964Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055062Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055159Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055256Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055363Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055455Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055546Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055643Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055767Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055864Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.055959Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056058Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056154Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056256Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056365Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056460Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056551Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056638Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056716Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056791Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056870Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.056958Z","level":"error","event":"25/08/31 18:35:49 ERROR SparkContext: Failed to add /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar to Spark environment","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057048Z","level":"error","event":"java.io.FileNotFoundException: Jar /opt/spark/jars/iceberg-aws-bundle-1.9.2.jar not found","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057139Z","level":"error","event":"\tat org.apache.spark.SparkContext.addLocalJarFile$1(SparkContext.scala:2174)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057231Z","level":"error","event":"\tat org.apache.spark.SparkContext.addJar(SparkContext.scala:2230)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057338Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057429Z","level":"error","event":"\tat org.apache.spark.SparkContext.$anonfun$new$15$adapted(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057516Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057601Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057696Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057808Z","level":"error","event":"\tat org.apache.spark.SparkContext.<init>(SparkContext.scala:538)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057905Z","level":"error","event":"\tat org.apache.spark.api.java.JavaSparkContext.<init>(JavaSparkContext.scala:59)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.057997Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058091Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058191Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058288Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058397Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058492Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058588Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058681Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058777Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058868Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.058953Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.066035Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.066333Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.097464Z","level":"error","event":"25/08/31 18:35:49 INFO SecurityManager: Changing view acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.120340Z","level":"error","event":"25/08/31 18:35:49 INFO SecurityManager: Changing modify acls to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.120698Z","level":"error","event":"25/08/31 18:35:49 INFO SecurityManager: Changing view acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.120824Z","level":"error","event":"25/08/31 18:35:49 INFO SecurityManager: Changing modify acls groups to: airflow","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.120924Z","level":"error","event":"25/08/31 18:35:49 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: airflow groups with view permissions: EMPTY; users with modify permissions: airflow; groups with modify permissions: EMPTY; RPC SSL disabled","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.325782Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Starting executor ID driver on host 102c1303304a","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.326111Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: OS info Linux, 6.8.0-79-generic, amd64","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.333373Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Java version 17.0.16","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.350101Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): 'file:/opt/spark/jars/ojdbc11.jar,file:/opt/airflow/ojdbc11.jar'","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.362415Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@714f8ccc for default.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.387909Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Fetching spark://102c1303304a:43703/jars/hadoop-aws-3.3.6.jar with timestamp 1756665347686","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.466927Z","level":"error","event":"25/08/31 18:35:49 INFO TransportClientFactory: Successfully created connection to 102c1303304a/172.18.0.9:43703 after 40 ms (0 ms spent in bootstraps)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.478490Z","level":"error","event":"25/08/31 18:35:49 INFO Utils: Fetching spark://102c1303304a:43703/jars/hadoop-aws-3.3.6.jar to /tmp/spark-9b687d6b-3caf-4e0a-92dc-52cf37649f0d/userFiles-d8e77d44-bc6d-41bb-b3c3-505e6b5a9c88/fetchFileTemp9745990678655352106.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.519482Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Adding file:/tmp/spark-9b687d6b-3caf-4e0a-92dc-52cf37649f0d/userFiles-d8e77d44-bc6d-41bb-b3c3-505e6b5a9c88/hadoop-aws-3.3.6.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.519616Z","level":"error","event":"25/08/31 18:35:49 INFO Executor: Fetching spark://102c1303304a:43703/jars/aws-java-sdk-bundle-1.12.787.jar with timestamp 1756665347686","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:49.519728Z","level":"error","event":"25/08/31 18:35:49 INFO Utils: Fetching spark://102c1303304a:43703/jars/aws-java-sdk-bundle-1.12.787.jar to /tmp/spark-9b687d6b-3caf-4e0a-92dc-52cf37649f0d/userFiles-d8e77d44-bc6d-41bb-b3c3-505e6b5a9c88/fetchFileTemp17433168916254316813.tmp","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.866598Z","level":"error","event":"25/08/31 18:35:50 INFO Executor: Adding file:/tmp/spark-9b687d6b-3caf-4e0a-92dc-52cf37649f0d/userFiles-d8e77d44-bc6d-41bb-b3c3-505e6b5a9c88/aws-java-sdk-bundle-1.12.787.jar to class loader default","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.889970Z","level":"error","event":"25/08/31 18:35:50 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 34563.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.890220Z","level":"error","event":"25/08/31 18:35:50 INFO NettyBlockTransferService: Server created on 102c1303304a:34563","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.890705Z","level":"error","event":"25/08/31 18:35:50 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.919933Z","level":"error","event":"25/08/31 18:35:50 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 102c1303304a, 34563, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.929332Z","level":"error","event":"25/08/31 18:35:50 INFO BlockManagerMasterEndpoint: Registering block manager 102c1303304a:34563 with 434.4 MiB RAM, BlockManagerId(driver, 102c1303304a, 34563, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.936957Z","level":"error","event":"25/08/31 18:35:50 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 102c1303304a, 34563, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:50.943252Z","level":"error","event":"25/08/31 18:35:50 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 102c1303304a, 34563, None)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.534754Z","level":"error","event":"25/08/31 18:35:51 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535042Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535170Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535279Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535409Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535513Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535622Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535730Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535835Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.535939Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536047Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536154Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536255Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536373Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536480Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536586Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536694Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536801Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.536907Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537013Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537144Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537259Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537372Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537675Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537795Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537894Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.537997Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.538100Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.538202Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.538317Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:51.538425Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.826476Z","level":"error","event":"25/08/31 18:35:54 INFO SparkContext: Invoking stop() from shutdown hook","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.826705Z","level":"error","event":"25/08/31 18:35:54 INFO SparkContext: SparkContext is stopping with exitCode 0 from run at Executors.java:539.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.832207Z","level":"error","event":"25/08/31 18:35:54 INFO SparkUI: Stopped Spark web UI at http://102c1303304a:4040","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.840676Z","level":"error","event":"25/08/31 18:35:54 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.854788Z","level":"error","event":"25/08/31 18:35:54 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.859100Z","level":"error","event":"25/08/31 18:35:54 INFO MemoryStore: MemoryStore cleared","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.859238Z","level":"error","event":"25/08/31 18:35:54 INFO BlockManager: BlockManager stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.864716Z","level":"error","event":"25/08/31 18:35:54 INFO BlockManagerMaster: BlockManagerMaster stopped","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:54.869834Z","level":"error","event":"25/08/31 18:35:54 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:55.047939Z","level":"error","event":"25/08/31 18:35:54 INFO SparkContext: Successfully stopped SparkContext","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:55.048278Z","level":"error","event":"25/08/31 18:35:54 INFO ShutdownHookManager: Shutdown hook called","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:55.048370Z","level":"error","event":"25/08/31 18:35:54 INFO ShutdownHookManager: Deleting directory /tmp/spark-9b687d6b-3caf-4e0a-92dc-52cf37649f0d/pyspark-3f800b87-81a4-4067-8cda-6c44990670c9","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:55.048422Z","level":"error","event":"25/08/31 18:35:54 INFO ShutdownHookManager: Deleting directory /tmp/spark-9b687d6b-3caf-4e0a-92dc-52cf37649f0d","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:35:55.048467Z","level":"error","event":"25/08/31 18:35:54 INFO ShutdownHookManager: Deleting directory /tmp/spark-ae7451a7-5f5d-4ebe-8ae2-cae58e9673ef","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:00.044267","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:50:03.780761Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:04.735594Z","level":"error","event":"25/08/31 18:50:04 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:05.185511Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:05.200007Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:05.200256Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:06.897987Z","level":"error","event":"25/08/31 18:50:06 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.898475Z","level":"error","event":"25/08/31 18:50:09 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.899024Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.899310Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.899489Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.899642Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.899786Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.899920Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900054Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900188Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900352Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900509Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900674Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900810Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.900943Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.901607Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.901775Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.901914Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.902046Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.902175Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.903179Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.903544Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.903689Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.903803Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.903909Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904013Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904118Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904222Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904351Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904467Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904588Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:09.904707Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:43.786309","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:50:44.516784Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:46.920243Z","level":"error","event":"25/08/31 18:50:46 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:47.402185Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:47.414918Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:47.415321Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:49.459514Z","level":"error","event":"25/08/31 18:50:49 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.336815Z","level":"error","event":"25/08/31 18:50:53 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337201Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337362Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337530Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337706Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337808Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337870Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337926Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.337981Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338059Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338153Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338250Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338389Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338485Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338580Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338669Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338780Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338871Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.338961Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339053Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339186Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339475Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339582Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339688Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339794Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.339899Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.340006Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.340111Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.340216Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.340339Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:50:53.340441Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:29.385738","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:51:30.165276Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:32.905436Z","level":"error","event":"25/08/31 18:51:32 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:33.226708Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:33.233541Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:33.233728Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.989068Z","level":"error","event":"25/08/31 18:51:38 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.989628Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.989784Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.989896Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.989997Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990096Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990204Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990320Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990433Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990541Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990646Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990752Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990850Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.990949Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.991085Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.991409Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.991629Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.991734Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.991845Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.991945Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992054Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992155Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992287Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992447Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992549Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992659Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992798Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.992908Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.993010Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.993109Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:51:38.993212Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:12.741159","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:52:13.195080Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:15.286964Z","level":"error","event":"25/08/31 18:52:15 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:15.670580Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:15.691045Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:15.691252Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:16.967331Z","level":"error","event":"25/08/31 18:52:16 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.584758Z","level":"error","event":"25/08/31 18:52:19 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585014Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585116Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585187Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585262Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585459Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585616Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585695Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585843Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585909Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.585962Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586018Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586071Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586129Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586182Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586254Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586335Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586392Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586476Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586562Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586618Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586670Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586721Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586772Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586824Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586875Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586927Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.586992Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.587065Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.587121Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:19.587189Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:53.293256","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T18:52:53.993027Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:55.946624Z","level":"error","event":"25/08/31 18:52:55 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:56.206514Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:56.212913Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:56.213108Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:57.426801Z","level":"error","event":"25/08/31 18:52:57 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.540256Z","level":"error","event":"25/08/31 18:52:59 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.540664Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.540877Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541038Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541147Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541260Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541348Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541409Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541467Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541525Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541581Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541655Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541714Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541768Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541857Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.541967Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542082Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542193Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542293Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542418Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542518Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542618Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542727Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542834Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.542939Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.543052Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.543168Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.543280Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.543408Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.543484Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T18:52:59.543535Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:21.233596","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:00:25.863200Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:26.497584Z","level":"error","event":"25/08/31 19:00:26 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:26.895916Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:26.902842Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:26.903014Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.089619Z","level":"error","event":"25/08/31 19:00:31 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.089953Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090090Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090195Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090291Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090396Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090495Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090581Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090666Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090749Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090830Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.090915Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091002Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091086Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091174Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091259Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091366Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091474Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091560Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091646Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091730Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091812Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091894Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.091975Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092058Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092141Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092223Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092307Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092389Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092466Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:00:31.092556Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:05.129730","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:01:05.763883Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:09.132063Z","level":"error","event":"25/08/31 19:01:09 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:09.572594Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:09.580249Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:09.580540Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.065716Z","level":"error","event":"25/08/31 19:01:15 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.069482Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.069803Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070064Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070193Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070329Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070460Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070589Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070707Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070818Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.070919Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071021Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071129Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071241Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071381Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071515Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071631Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071748Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071850Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.071957Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072077Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072200Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072349Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072507Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072640Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072770Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.072897Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.073019Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.073143Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.073265Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:15.075318Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:50.856361","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:01:51.535163Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:54.263154Z","level":"error","event":"25/08/31 19:01:54 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:54.652194Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:54.659756Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:54.660261Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:56.470542Z","level":"error","event":"25/08/31 19:01:56 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.212652Z","level":"error","event":"25/08/31 19:01:59 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.212872Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.212942Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213000Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213054Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213105Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213157Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213208Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213326Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213431Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213521Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213584Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213636Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213686Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213736Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213814Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213874Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.213943Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214033Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214086Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214168Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214228Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214378Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214497Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214584Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214672Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.214801Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.215005Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.215167Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.215265Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:01:59.215361Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:35.015050","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:02:35.754051Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:38.187163Z","level":"error","event":"25/08/31 19:02:38 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:38.615649Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:38.622925Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:38.623171Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.863398Z","level":"error","event":"25/08/31 19:02:41 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.863758Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.863879Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.863974Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864068Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864156Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864241Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864338Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864425Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864509Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864590Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864674Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864757Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864840Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.864951Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865044Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865117Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865191Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865262Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865344Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865425Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865510Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865594Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865679Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865769Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865859Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.865947Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.866039Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.866126Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.866210Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:02:41.866291Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:14.783479","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:03:15.326889Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:17.378582Z","level":"error","event":"25/08/31 19:03:17 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:17.669169Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:17.676945Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:17.677139Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.986855Z","level":"error","event":"25/08/31 19:03:20 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.987558Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.987735Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.987808Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.987884Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.987942Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988013Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988107Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988204Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988295Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988400Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988495Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988599Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988702Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988796Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988891Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.988993Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989083Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989168Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989473Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989630Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989693Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989762Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989832Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989886Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989937Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.989988Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.990038Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.990088Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.990144Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:20.990196Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:55.488046","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:03:56.302145Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:58.416049Z","level":"error","event":"25/08/31 19:03:58 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:58.735004Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:58.735167Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:03:58.735234Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.418687Z","level":"error","event":"25/08/31 19:04:02 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419118Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419248Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419369Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419469Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419585Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419691Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419799Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.419908Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420012Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420117Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420217Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420339Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420442Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420695Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420828Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.420935Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421031Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421130Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421235Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421360Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421478Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421593Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421697Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421799Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.421904Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.422022Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.422123Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.422215Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.422327Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:02.422423Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:36.477888","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:04:37.354030Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:39.809914Z","level":"error","event":"25/08/31 19:04:39 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:40.153630Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:40.153988Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:40.154123Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:41.497764Z","level":"error","event":"25/08/31 19:04:41 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550290Z","level":"error","event":"25/08/31 19:04:43 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550589Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550672Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550727Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550777Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550845Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550912Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.550991Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551075Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551155Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551229Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551294Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551374Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551429Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551501Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551553Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551601Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551646Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551692Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551737Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551783Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551828Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551874Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551918Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.551967Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.552029Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.552081Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.552129Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.552176Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.552370Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:04:43.552532Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:16.811223","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:05:17.554458Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:19.601537Z","level":"error","event":"25/08/31 19:05:19 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:19.905557Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:19.912155Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:19.912326Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.200192Z","level":"error","event":"25/08/31 19:05:23 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.200654Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.200830Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.200955Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201071Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201176Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201285Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201406Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201508Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201601Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201700Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201801Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.201903Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202020Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202343Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202471Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202621Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202732Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202843Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.202954Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.203380Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.203620Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.203730Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.203835Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.203941Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.204041Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.204140Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.204232Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.204338Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.204452Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:23.204548Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:56.919129","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:05:57.679543Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:05:59.808711Z","level":"error","event":"25/08/31 19:05:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:00.079822Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:00.086668Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:00.086902Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:01.301758Z","level":"error","event":"25/08/31 19:06:01 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.243568Z","level":"error","event":"25/08/31 19:06:03 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.244620Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.244795Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.244974Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245065Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245122Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245182Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245268Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245375Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245464Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245554Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245637Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245717Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245778Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245828Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245876Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245926Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.245975Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246024Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246071Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246127Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246188Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246235Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246282Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246340Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246397Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246442Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246488Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246532Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246578Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:03.246628Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:36.425972","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:06:36.921638Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:39.118037Z","level":"error","event":"25/08/31 19:06:39 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:39.464450Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:39.492457Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:39.492663Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.848664Z","level":"error","event":"25/08/31 19:06:42 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.848952Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849104Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849217Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849336Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849443Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849563Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849664Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849762Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.849856Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.850013Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.850386Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.850570Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.850696Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.850806Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.850921Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851028Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851136Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851235Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851350Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851451Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851537Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851617Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851704Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851807Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.851908Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.852009Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.852089Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.852168Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.852266Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:06:42.852434Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:16.372313","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:07:16.979278Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:19.540259Z","level":"error","event":"25/08/31 19:07:19 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:19.898198Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:19.906147Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:19.906402Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.128692Z","level":"error","event":"25/08/31 19:07:25 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.128973Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129084Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129181Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129270Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129371Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129465Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129542Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129615Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129691Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129780Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129876Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.129973Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130098Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130198Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130281Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130374Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130456Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130541Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130628Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130715Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130795Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130873Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.130953Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131030Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131111Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131201Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131502Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131629Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131726Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:25.131805Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:07:59.412104","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:07:59.911828Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:02.019203Z","level":"error","event":"25/08/31 19:08:02 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:02.313579Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:02.320106Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:02.320308Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.951739Z","level":"error","event":"25/08/31 19:08:05 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.951987Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952096Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952166Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952232Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952312Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952382Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952446Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952509Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952575Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952650Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952733Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952827Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.952931Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953009Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953075Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953139Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953202Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953265Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953363Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953433Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953499Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953558Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953614Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953674Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953733Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953794Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953859Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953915Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.953969Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:05.954025Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:40.452068","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:08:40.952056Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:43.364522Z","level":"error","event":"25/08/31 19:08:43 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:43.704619Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:43.710044Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:43.710316Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:45.057480Z","level":"error","event":"25/08/31 19:08:45 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.280006Z","level":"error","event":"25/08/31 19:08:47 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.280572Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.280884Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281005Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281104Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281193Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281272Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281397Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281499Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281600Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281685Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281774Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281860Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.281947Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282027Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282116Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282212Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282308Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282402Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282506Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282609Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282702Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282797Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.282904Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283010Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283106Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283200Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283290Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283422Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283523Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:08:47.283620Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:16.663030","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:23:21.493704Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:21.494181Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:22.078453Z","level":"error","event":"25/08/31 19:23:22 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:22.452262Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:22.459494Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:22.459722Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:24.237284Z","level":"error","event":"25/08/31 19:23:24 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.772372Z","level":"error","event":"25/08/31 19:23:26 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.772647Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.772775Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.772876Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.772970Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773068Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773166Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773276Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773400Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773500Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773600Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773695Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773795Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773893Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.773990Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774081Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774176Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774287Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774403Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774503Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774603Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774697Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774791Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774883Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.774972Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.775057Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.775145Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.775228Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.775340Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.775424Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:26.775503Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.432957Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433186Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433287Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433400Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433485Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433566Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433645Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433702Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433753Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433808Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433860Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433912Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433964Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434016Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434069Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434122Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434183Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434235Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434285Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.434357Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:23:29.433895","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:24:00.178450","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:24:00.610140Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:01.593903Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:02.834954Z","level":"error","event":"25/08/31 19:24:02 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:03.090580Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:03.099765Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:03.100039Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.236109Z","level":"error","event":"25/08/31 19:24:07 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.236434Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.236764Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.236921Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237052Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237191Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237363Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237476Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237576Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237661Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.237938Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238063Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238158Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238211Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238261Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238326Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238530Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238590Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238639Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238702Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238799Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238889Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.238978Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239062Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239151Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239245Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239371Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239471Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239584Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239688Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:07.239794Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.044934Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045144Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045211Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045271Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045351Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045440Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045524Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045615Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045709Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045803Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045896Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045981Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046067Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046160Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046274Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046384Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046479Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046575Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046666Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.046768Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:10.045226","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:24:40.792864","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:24:41.456270Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:42.411224Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:43.474232Z","level":"error","event":"25/08/31 19:24:43 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:43.811448Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:43.811671Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:43.811766Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.940628Z","level":"error","event":"25/08/31 19:24:46 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.940894Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941020Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941126Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941224Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941321Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941422Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941597Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.941887Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942043Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942146Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942247Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942354Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942453Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942533Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942620Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942713Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942826Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.942946Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943039Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943145Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943246Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943381Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943489Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943590Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943674Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943763Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943847Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.943924Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.944020Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:46.944104Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.962841Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963065Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963143Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963208Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963270Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963358Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963458Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963554Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963661Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963725Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963777Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963829Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963879Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963933Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963981Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.964028Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.964085Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.964130Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.964175Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.964220Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:24:48.963144","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:25:19.804435","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:25:20.273757Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:21.182310Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:22.173041Z","level":"error","event":"25/08/31 19:25:22 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:22.437123Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:22.446232Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:22.446539Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:23.488165Z","level":"error","event":"25/08/31 19:25:23 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.226682Z","level":"error","event":"25/08/31 19:25:25 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.227637Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.227813Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.227921Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228021Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228119Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228223Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228345Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228438Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228520Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228606Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228707Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228793Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228875Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.228977Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229071Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229165Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229253Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229349Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229425Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229473Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229519Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229564Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229611Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229655Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229699Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229745Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229789Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229834Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229879Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:25.229923Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299067Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299265Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299377Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299432Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299483Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299531Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299578Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299623Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299667Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299708Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299750Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299793Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299835Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299876Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299919Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299960Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.300000Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.300042Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.300083Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.300125Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:25:27.299309","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:25:58.445123","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:25:58.866125Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:25:59.599012Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:00.449068Z","level":"error","event":"25/08/31 19:26:00 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:00.690545Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:00.700090Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:00.700415Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:01.938442Z","level":"error","event":"25/08/31 19:26:01 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933029Z","level":"error","event":"25/08/31 19:26:03 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933281Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933410Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933520Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933621Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933708Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933790Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933875Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.933962Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934014Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934060Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934108Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934158Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934206Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934252Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934308Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934367Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934414Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934460Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934553Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934696Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934836Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934920Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.934975Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935031Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935087Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935145Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935216Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935269Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935330Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:03.935395Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.977610Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.977844Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.977932Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.977992Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978058Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978114Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978166Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978226Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978278Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978344Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978398Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978453Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978520Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978573Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978626Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978682Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978727Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978784Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978832Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.978878Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:05.977688","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:26:37.325411","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:26:37.892966Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:38.825742Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:39.855648Z","level":"error","event":"25/08/31 19:26:39 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:40.107384Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:40.114796Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:40.115045Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:41.710356Z","level":"error","event":"25/08/31 19:26:41 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.924009Z","level":"error","event":"25/08/31 19:26:43 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.924847Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.924941Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925006Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925066Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925129Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925186Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925242Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925308Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925397Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925460Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925517Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925573Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925628Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925684Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925737Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925793Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925846Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925899Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.925965Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926020Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926073Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926125Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926176Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926227Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926279Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926350Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926404Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926456Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926509Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:43.926576Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680000Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680243Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680379Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680486Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680587Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680687Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680784Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680878Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.680976Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681073Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681183Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681279Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681394Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681490Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681584Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681678Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681772Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681868Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.681960Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.682042Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:26:46.679727","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:27:17.530169","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:27:18.200728Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:18.933058Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:20.413905Z","level":"error","event":"25/08/31 19:27:20 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:20.692860Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:20.702763Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:20.703008Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:21.887897Z","level":"error","event":"25/08/31 19:27:21 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795121Z","level":"error","event":"25/08/31 19:27:23 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795379Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795490Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795588Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795681Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795771Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795869Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.795968Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796070Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796192Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796309Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796418Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796526Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796647Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796754Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796856Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.796969Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797075Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797177Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797286Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797405Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797514Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797616Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797722Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797825Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.797929Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.798038Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.798140Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.798245Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.798357Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:23.798464Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003081Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003342Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003476Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003606Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003724Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003841Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003947Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004046Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004169Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004279Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004402Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004507Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004613Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004715Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004812Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.004917Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.005017Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.005111Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.005207Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.005317Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:26.003383","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:27:56.659629","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:27:57.286829Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:58.000378Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:27:59.017708Z","level":"error","event":"25/08/31 19:27:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:59.299801Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:59.311434Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:27:59.311731Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.313746Z","level":"error","event":"25/08/31 19:28:02 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314023Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314145Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314248Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314376Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314477Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314570Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314660Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314770Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314862Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.314960Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315047Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315134Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315216Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315306Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315416Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315516Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315607Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315695Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315776Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315859Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.315952Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316036Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316118Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316202Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316283Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316402Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316497Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316583Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316696Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:02.316790Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474101Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474411Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474498Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474553Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474620Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474673Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474724Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474773Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474820Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474868Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474914Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474962Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475011Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475064Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475112Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475160Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475209Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475256Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475325Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.475388Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:04.474364","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:28:35.239344","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:28:35.789014Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:36.745252Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:38.247585Z","level":"error","event":"25/08/31 19:28:38 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:38.621449Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:38.621738Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:38.621865Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.437484Z","level":"error","event":"25/08/31 19:28:42 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.437796Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.437966Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438081Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438151Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438212Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438494Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438718Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438793Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438851Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438902Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.438951Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439008Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439059Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439109Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439195Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439318Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439388Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439449Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439504Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439558Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439609Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439661Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439723Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439779Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439833Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439883Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439933Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.439994Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.440080Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:42.440136Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944134Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944434Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944564Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944660Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944760Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944853Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944950Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945042Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945133Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945215Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945306Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945424Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945509Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945596Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945679Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945779Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945867Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.945948Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.946027Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.946111Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:28:44.944424","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:29:16.220912","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:29:16.790674Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:17.663901Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:18.751537Z","level":"error","event":"25/08/31 19:29:18 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:18.948386Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:18.955578Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:18.955830Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.965848Z","level":"error","event":"25/08/31 19:29:21 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.966710Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.966796Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.966856Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.966913Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.966963Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967016Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967067Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967121Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967171Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967222Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967271Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967334Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967384Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967431Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967478Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967527Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967577Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967640Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967688Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967736Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967781Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967826Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967870Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967916Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.967961Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.968004Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.968049Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.968093Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.968137Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:21.968180Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.559433Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.559683Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.559809Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.559909Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560002Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560092Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560155Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560205Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560252Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560328Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560384Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560431Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560476Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560521Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560569Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560613Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560659Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560704Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560749Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.560795Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:24.559628","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:29:55.334140","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:29:55.782634Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:56.594189Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:29:57.488074Z","level":"error","event":"25/08/31 19:29:57 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:57.695631Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:57.702939Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:29:57.703171Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.862326Z","level":"error","event":"25/08/31 19:30:00 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.862626Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.862778Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.862898Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863010Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863107Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863202Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863287Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863414Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863510Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863606Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863702Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863805Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.863912Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864006Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864094Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864189Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864274Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864377Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864453Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864541Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864632Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864741Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864862Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.864976Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.865086Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.865194Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.865313Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.865430Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.865528Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:00.865623Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.308453Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.308687Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.308789Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.308875Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.308969Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309050Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309130Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309207Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309272Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309327Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309389Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309437Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309482Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309528Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309582Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309628Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309673Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309716Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309761Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.309808Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:03.308683","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:30:34.277074","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:30:34.771699Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:35.618417Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:36.567079Z","level":"error","event":"25/08/31 19:30:36 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:36.762048Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:36.766738Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:36.766900Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:37.872019Z","level":"error","event":"25/08/31 19:30:37 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839266Z","level":"error","event":"25/08/31 19:30:39 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839475Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839544Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839603Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839659Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839708Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839772Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839821Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839868Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839915Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.839962Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840007Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840054Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840101Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840149Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840196Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840243Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840290Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840346Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840397Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840495Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840616Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840661Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840706Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840755Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840797Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840840Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840881Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840925Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.840966Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:39.841006Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.019419Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.019754Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.019899Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020013Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020116Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020220Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020359Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020464Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020569Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020678Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020788Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020888Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.020994Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021104Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021213Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021345Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021462Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021569Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021685Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.021803Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:30:42.019665","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:31:13.348705","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:31:13.853937Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:14.903038Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:15.956183Z","level":"error","event":"25/08/31 19:31:15 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:16.211834Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:16.211965Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:16.212094Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.490416Z","level":"error","event":"25/08/31 19:31:19 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.490711Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.490824Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.490935Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491012Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491067Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491121Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491180Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491233Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491286Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491362Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491428Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491493Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491545Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491595Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491646Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491701Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491778Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491835Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491906Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.491960Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492011Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492072Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492124Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492176Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492228Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492309Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492378Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492444Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492498Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:19.492550Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.911916Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912174Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912292Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912414Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912496Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912562Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912616Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912672Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912727Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912802Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912893Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912986Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913081Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913175Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913283Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913402Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913497Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913594Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913684Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.913775Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:21.912221","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:31:52.721496","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:31:53.137359Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:54.025974Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:31:54.906423Z","level":"error","event":"25/08/31 19:31:54 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:55.125731Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:55.134022Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:55.134270Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:56.356227Z","level":"error","event":"25/08/31 19:31:56 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237062Z","level":"error","event":"25/08/31 19:31:58 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237323Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237414Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237488Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237559Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237627Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237790Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237941Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.237990Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238037Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238085Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238131Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238177Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238226Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238273Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238329Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238423Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238476Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238525Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238571Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238617Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238662Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238706Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238752Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238796Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238849Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238894Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238940Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.238984Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.239030Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:31:58.239074Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.276335Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.276522Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.276587Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.276642Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.276746Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277031Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277165Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277306Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277370Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277425Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277530Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277583Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277633Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277684Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277735Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277784Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277831Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277879Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277929Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.277980Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:00.276317","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:32:30.993857","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:32:31.508555Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:32.271824Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:33.240097Z","level":"error","event":"25/08/31 19:32:33 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:33.398739Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:33.404423Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:33.404578Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:34.492482Z","level":"error","event":"25/08/31 19:32:34 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272021Z","level":"error","event":"25/08/31 19:32:36 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272561Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272664Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272721Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272774Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272826Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272879Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272931Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.272985Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273036Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273096Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273150Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273199Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273250Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273316Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273370Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273421Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273470Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273519Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273568Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273617Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273666Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273714Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273761Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273808Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273856Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273906Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.273955Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.274002Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.274050Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:36.274096Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731251Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731431Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731495Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731558Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731608Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731655Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731701Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731746Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731791Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731836Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731881Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731926Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731970Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732015Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732061Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732107Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732152Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732196Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732240Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.732286Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:32:38.731457","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:33:09.826707","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:33:10.410446Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:11.239284Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:12.685075Z","level":"error","event":"25/08/31 19:33:12 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:12.967577Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:12.975448Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:12.975684Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:14.250665Z","level":"error","event":"25/08/31 19:33:14 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.277500Z","level":"error","event":"25/08/31 19:33:16 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.277760Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.277882Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.277993Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278075Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278153Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278243Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278344Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278432Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278489Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278540Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278593Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278645Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278696Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278746Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278795Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278843Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278891Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278940Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.278989Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279059Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279110Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279160Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279206Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279264Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279325Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279376Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279424Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279472Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279520Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:16.279568Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.536998Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537296Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537460Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537589Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537716Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537835Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537949Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538063Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538180Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538304Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538426Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538541Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538659Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538774Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.538893Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.539015Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.539155Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.539278Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.539420Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.539543Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:18.537182","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:33:49.711460","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:33:50.204170Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:51.237431Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:52.363473Z","level":"error","event":"25/08/31 19:33:52 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:52.599645Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:52.605465Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:52.605691Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.838550Z","level":"error","event":"25/08/31 19:33:55 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839021Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839129Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839198Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839255Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839331Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839392Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839449Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839503Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839554Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839608Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839669Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839728Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839783Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839835Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839886Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839941Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.839994Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840050Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840114Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840168Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840223Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840273Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840335Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840387Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840437Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840517Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840588Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840641Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840692Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:55.840747Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997115Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997356Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997459Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997556Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997654Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997746Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997835Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.997922Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998008Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998095Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998199Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998288Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998385Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998471Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998557Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998641Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998726Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998822Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.998916Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.999005Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:33:57.994964","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:34:29.542823","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:34:30.116153Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:31.164811Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:32.290062Z","level":"error","event":"25/08/31 19:34:32 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:32.518816Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:32.527650Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:32.527900Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899011Z","level":"error","event":"25/08/31 19:34:35 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899244Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899331Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899394Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899454Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899514Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899573Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899628Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899685Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899740Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899796Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899853Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899917Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.899967Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900027Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900076Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900125Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900178Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900228Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900275Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900332Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900391Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900462Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900601Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900660Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900719Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900777Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900833Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900887Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.900941Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:35.901002Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.510722Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511137Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511206Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511269Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511362Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511422Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511487Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511578Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511658Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511716Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511772Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511836Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511888Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511943Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511998Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.512052Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.512106Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.512159Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.512212Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.512269Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:34:38.511134","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:35:09.999508","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:35:10.517580Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:11.387810Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:12.385215Z","level":"error","event":"25/08/31 19:35:12 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:12.607428Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:12.615533Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:12.615791Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890092Z","level":"error","event":"25/08/31 19:35:15 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890334Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890409Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890467Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890520Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890679Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890756Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890837Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.890925Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891023Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891105Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891188Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891275Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891378Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891454Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891519Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891579Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891638Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891696Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891749Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891803Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891855Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891913Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.891966Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892021Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892077Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892147Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892213Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892272Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892336Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:15.892413Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193085Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193322Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193423Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193511Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193594Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193651Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193711Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193795Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193882Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193968Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194056Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194140Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194225Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194324Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194407Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194490Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194572Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194656Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194740Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.194827Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:18.193394","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:35:48.750621","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:35:49.251103Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:49.881094Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:50.841226Z","level":"error","event":"25/08/31 19:35:50 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:51.032188Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:51.036778Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:51.036932Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.813978Z","level":"error","event":"25/08/31 19:35:53 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814233Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814363Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814472Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814565Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814652Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814719Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814784Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814853Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.814934Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815022Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815090Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815160Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815227Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815311Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815409Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815482Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815549Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815625Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815698Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815778Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815860Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.815947Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816026Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816125Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816219Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816310Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816410Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816497Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816576Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:53.816646Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.669760Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.669943Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670006Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670058Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670106Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670159Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670208Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670256Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670314Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670365Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670413Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670460Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670506Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670551Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670596Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670639Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670704Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670751Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670797Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.670843Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:35:55.669946","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:36:26.793262","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:36:27.287058Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:28.102342Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:29.131535Z","level":"error","event":"25/08/31 19:36:29 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:29.299092Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:29.306334Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:29.306593Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.585172Z","level":"error","event":"25/08/31 19:36:32 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.585504Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.585668Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.585812Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.585926Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586031Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586135Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586233Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586356Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586452Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586537Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586633Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586724Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586811Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.586919Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587026Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587152Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587263Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587384Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587507Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587617Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587725Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587809Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587903Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.587997Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.588095Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.588190Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.588279Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.588444Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.588637Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:32.588719Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.809593Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.809870Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.809984Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810078Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810174Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810263Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810365Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810458Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810554Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810652Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810759Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810838Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.810918Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811007Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811100Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811189Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811288Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811392Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811491Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.811569Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:36:34.809780","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-31T19:37:05.994382","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-31T19:37:06.575596Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:07.506654Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:08.543233Z","level":"error","event":"25/08/31 19:37:08 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:08.759772Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:08.765059Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:08.765212Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:09.786903Z","level":"error","event":"25/08/31 19:37:09 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.707845Z","level":"error","event":"25/08/31 19:37:11 WARN SparkSession: Cannot use org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions to configure session extensions.","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708050Z","level":"error","event":"java.lang.ClassNotFoundException: org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708120Z","level":"error","event":"\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708178Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708232Z","level":"error","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708284Z","level":"error","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708453Z","level":"error","event":"\tat java.base/java.lang.Class.forName(Class.java:467)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708512Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName(SparkClassUtils.scala:41)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708566Z","level":"error","event":"\tat org.apache.spark.util.SparkClassUtils.classForName$(SparkClassUtils.scala:36)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708620Z","level":"error","event":"\tat org.apache.spark.util.Utils$.classForName(Utils.scala:99)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708672Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2(SparkSession.scala:1056)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708724Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.$anonfun$applyExtensions$2$adapted(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708778Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708843Z","level":"error","event":"\tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708897Z","level":"error","event":"\tat scala.collection.AbstractIterable.foreach(Iterable.scala:935)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708948Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.org$apache$spark$sql$classic$SparkSession$$applyExtensions(SparkSession.scala:1054)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.708999Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession$.applyAndLoadExtensions(SparkSession.scala:1038)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709052Z","level":"error","event":"\tat org.apache.spark.sql.classic.SparkSession.<init>(SparkSession.scala:116)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709106Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709157Z","level":"error","event":"\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709205Z","level":"error","event":"\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709254Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709317Z","level":"error","event":"\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709371Z","level":"error","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:247)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709421Z","level":"error","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709471Z","level":"error","event":"\tat py4j.Gateway.invoke(Gateway.java:238)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709523Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.invokeConstructor(ConstructorCommand.java:80)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709573Z","level":"error","event":"\tat py4j.commands.ConstructorCommand.execute(ConstructorCommand.java:69)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709620Z","level":"error","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709667Z","level":"error","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:11.709716Z","level":"error","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.598479Z","level":"info","event":"Không tìm thấy Iceberg SparkCatalog: An error occurred while calling z:java.lang.Class.forName.","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.598707Z","level":"info","event":": java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.598806Z","level":"info","event":"\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.598916Z","level":"info","event":"\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.598993Z","level":"info","event":"\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599063Z","level":"info","event":"\tat java.base/java.lang.Class.forName0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599128Z","level":"info","event":"\tat java.base/java.lang.Class.forName(Class.java:375)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599194Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599265Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599359Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599433Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599501Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599572Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599624Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599673Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599721Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599769Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599817Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599864Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.599933Z","level":"info","event":"","chan":"stdout","logger":"processor"}
{"timestamp":"2025-08-31T19:37:14.598814","level":"error","event":"Failed to import: /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling z:java.lang.Class.forName.\n: java.lang.ClassNotFoundException: org.apache.iceberg.spark.SparkCatalog\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)\n\tat java.base/java.lang.Class.forName0(Native Method)\n\tat java.base/java.lang.Class.forName(Class.java:375)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/dagbag.py","lineno":384,"name":"parse"},{"filename":"<frozen importlib._bootstrap_external>","lineno":999,"name":"exec_module"},{"filename":"<frozen importlib._bootstrap>","lineno":488,"name":"_call_with_frames_removed"},{"filename":"/opt/airflow/dags/main.py","lineno":6,"name":"<module>"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":15,"name":"<module>"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":72,"name":"get_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
