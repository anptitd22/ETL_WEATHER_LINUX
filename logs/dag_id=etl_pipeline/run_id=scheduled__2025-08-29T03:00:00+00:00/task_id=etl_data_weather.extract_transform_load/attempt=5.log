{"timestamp":"2025-08-29T03:14:46.853555","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-29T03:14:46.853866","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-29T03:14:47.121681Z","level":"error","event":"WARNING: Using incubator modules: jdk.incubator.vector","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:47.942786Z","level":"error","event":"25/08/29 03:14:47 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:48.064826Z","level":"error","event":"Using Spark's default log4j profile: org/apache/spark/log4j2-defaults.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:48.065069Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:48.065124Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143290Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143411Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143450Z","level":"info","event":"Current task name:etl_data_weather.extract_transform_load","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143483Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143514Z","level":"info","event":"extract data from file","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143544Z","level":"info","event":"spark.hadoop.fs.s3a.connection.part.upload.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143572Z","level":"info","event":"spark.hadoop.fs.s3a.socket.recv.buffer = 65536","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143600Z","level":"info","event":"spark.hadoop.fs.s3a.impl.disable.cache = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143628Z","level":"info","event":"spark.hadoop.fs.s3a.connection.request.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143656Z","level":"info","event":"spark.hadoop.fs.s3a.path.style.access = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143684Z","level":"info","event":"spark.driver.host = 69db7b3cc20d","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143712Z","level":"info","event":"spark.rdd.compress = True","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143739Z","level":"info","event":"spark.hadoop.fs.s3a.connection.idle.time = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143766Z","level":"info","event":"spark.app.id = local-1756437288778","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143794Z","level":"info","event":"spark.executor.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143823Z","level":"info","event":"spark.hadoop.fs.s3a.connection.establish.timeout = 5000","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143852Z","level":"info","event":"spark.hadoop.fs.s3a.access.key = admin","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143880Z","level":"info","event":"spark.hadoop.fs.s3a.endpoint = http://minio:9000/","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143923Z","level":"info","event":"spark.hadoop.fs.s3a.retry.interval = 500","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143953Z","level":"info","event":"spark.jars = /opt/spark/jars/hadoop-aws-3.3.6.jar,/opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar,/opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.143993Z","level":"info","event":"spark.hadoop.fs.s3a.connection.maximum = 15","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144022Z","level":"info","event":"spark.hadoop.fs.s3a.retry.limit = 5","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144049Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.max.merged.size = 2097152","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144077Z","level":"info","event":"spark.hadoop.fs.s3a.impl = org.apache.hadoop.fs.s3a.S3AFileSystem","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144103Z","level":"info","event":"spark.hadoop.fs.s3a.vectored.read.min.seek.size = 131072","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144131Z","level":"info","event":"spark.hadoop.fs.s3a.secret.key = admin12345","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144159Z","level":"info","event":"spark.sql.adaptive.coalescePartitions.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144186Z","level":"info","event":"spark.app.startTime = 1756437288298","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144226Z","level":"info","event":"spark.hadoop.fs.s3a.socket.send.buffer = 65536","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144276Z","level":"info","event":"spark.hadoop.fs.s3a.fast.upload = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144331Z","level":"info","event":"spark.executor.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144390Z","level":"info","event":"spark.sql.artifact.isolation.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144448Z","level":"info","event":"spark.hadoop.fs.s3a.multipart.size = 104857600","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144504Z","level":"info","event":"spark.master = local[*]","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144563Z","level":"info","event":"spark.driver.port = 38361","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144620Z","level":"info","event":"spark.app.initial.jar.urls = spark://69db7b3cc20d:38361/jars/aws-java-sdk-bundle-1.12.787.jar,spark://69db7b3cc20d:38361/jars/ojdbc11.jar,spark://69db7b3cc20d:38361/jars/hadoop-aws-3.3.6.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144683Z","level":"info","event":"spark.executor.id = driver","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144741Z","level":"info","event":"spark.driver.extraClassPath = /opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144800Z","level":"info","event":"spark.app.name = BAITEST","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144860Z","level":"info","event":"spark.submit.deployMode = client","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.144938Z","level":"info","event":"spark.hadoop.fs.s3a.connection.ssl.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145009Z","level":"info","event":"spark.serializer.objectStreamReset = 100","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145067Z","level":"info","event":"spark.ui.showConsoleProgress = true","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145118Z","level":"info","event":"spark.hadoop.fs.s3a.multipart.purge.age = 86400","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145166Z","level":"info","event":"spark.app.submitTime = 1756437288010","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145218Z","level":"info","event":"spark.hadoop.fs.s3a.threads.max = 10","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145270Z","level":"info","event":"spark.hadoop.fs.s3a.aws.credentials.provider = org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.145323Z","level":"info","event":"spark.submit.pyFiles =","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.152842Z","level":"info","event":"spark.driver.extraJavaOptions = -Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-modules=jdk.incubator.vector --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dio.netty.tryReflectionSetAccessible=true","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.152965Z","level":"info","event":"spark.hadoop.fs.s3a.attempts.maximum = 3","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153003Z","level":"info","event":"spark.hadoop.fs.s3a.threads.keepalivetime = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153036Z","level":"info","event":"spark.repl.local.jars = file:///opt/spark/jars/hadoop-aws-3.3.6.jar,file:///opt/spark/jars/aws-java-sdk-bundle-1.12.787.jar,file:///opt/spark/jars/ojdbc11.jar","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153067Z","level":"info","event":"spark.sql.adaptive.enabled = false","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153096Z","level":"info","event":"spark.hadoop.fs.s3a.connection.timeout = 60000","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153133Z","level":"error","event":"25/08/29 03:14:51 WARN MetricsConfig: Cannot locate configuration: tried hadoop-metrics2-s3a-file-system.properties,hadoop-metrics2.properties","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153165Z","level":"error","event":"25/08/29 03:14:51 WARN VersionInfoUtils: The AWS SDK for Java 1.x entered maintenance mode starting July 31, 2024 and will reach end of support on December 31, 2025. For more information, see https://aws.amazon.com/blogs/developer/the-aws-sdk-for-java-1-x-is-in-maintenance-mode-effective-july-31-2024/","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153198Z","level":"error","event":"You can print where on the file system the AWS SDK for Java 1.x core runtime is located by setting the AWS_JAVA_V1_PRINT_LOCATION environment variable or aws.java.v1.printLocation system property to 'true'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153227Z","level":"error","event":"This message can be disabled by setting the AWS_JAVA_V1_DISABLE_DEPRECATION_ANNOUNCEMENT environment variable or aws.java.v1.disableDeprecationAnnouncement system property to 'true'.","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153264Z","level":"error","event":"The AWS SDK for Java 1.x is being used here:","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153294Z","level":"error","event":"at java.base/java.lang.Thread.getStackTrace(Thread.java:1619)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153321Z","level":"error","event":"at com.amazonaws.util.VersionInfoUtils.printDeprecationAnnouncement(VersionInfoUtils.java:81)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153349Z","level":"error","event":"at com.amazonaws.util.VersionInfoUtils.<clinit>(VersionInfoUtils.java:59)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153376Z","level":"error","event":"at com.amazonaws.ClientConfiguration.<clinit>(ClientConfiguration.java:95)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153402Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AUtils.createAwsConf(S3AUtils.java:1251)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153430Z","level":"error","event":"at org.apache.hadoop.fs.s3a.DefaultS3ClientFactory.createS3Client(DefaultS3ClientFactory.java:118)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153457Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AFileSystem.bindAWSClient(S3AFileSystem.java:982)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153486Z","level":"error","event":"at org.apache.hadoop.fs.s3a.S3AFileSystem.initialize(S3AFileSystem.java:586)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153514Z","level":"error","event":"at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:3615)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153541Z","level":"error","event":"at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:554)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153568Z","level":"error","event":"at org.apache.hadoop.fs.Path.getFileSystem(Path.java:366)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153595Z","level":"error","event":"at org.apache.spark.sql.execution.streaming.FileStreamSink$.hasMetadata(FileStreamSink.scala:55)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153623Z","level":"error","event":"at org.apache.spark.sql.execution.datasources.DataSource.resolveRelation(DataSource.scala:381)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153653Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.org$apache$spark$sql$catalyst$analysis$ResolveDataSource$$loadV1BatchSource(ResolveDataSource.scala:143)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153682Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.$anonfun$applyOrElse$2(ResolveDataSource.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153711Z","level":"error","event":"at scala.Option.getOrElse(Option.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153740Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.applyOrElse(ResolveDataSource.scala:61)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153770Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource$$anonfun$apply$1.applyOrElse(ResolveDataSource.scala:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153799Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.$anonfun$resolveOperatorsUpWithPruning$3(AnalysisHelper.scala:139)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153828Z","level":"error","event":"at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153860Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.$anonfun$resolveOperatorsUpWithPruning$1(AnalysisHelper.scala:139)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153901Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:416)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153930Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning(AnalysisHelper.scala:135)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153958Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUpWithPruning$(AnalysisHelper.scala:131)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.153987Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUpWithPruning(LogicalPlan.scala:37)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154015Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp(AnalysisHelper.scala:112)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154046Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.resolveOperatorsUp$(AnalysisHelper.scala:111)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154075Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:37)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154105Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.apply(ResolveDataSource.scala:45)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154136Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.ResolveDataSource.apply(ResolveDataSource.scala:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154170Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$2(RuleExecutor.scala:242)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154200Z","level":"error","event":"at scala.collection.LinearSeqOps.foldLeft(LinearSeq.scala:183)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154228Z","level":"error","event":"at scala.collection.LinearSeqOps.foldLeft$(LinearSeq.scala:179)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154255Z","level":"error","event":"at scala.collection.immutable.List.foldLeft(List.scala:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154326Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1(RuleExecutor.scala:239)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154362Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$execute$1$adapted(RuleExecutor.scala:231)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154392Z","level":"error","event":"at scala.collection.immutable.List.foreach(List.scala:334)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154420Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:231)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154447Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$executeSameContext(Analyzer.scala:290)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154476Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.$anonfun$execute$1(Analyzer.scala:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154507Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.AnalysisContext$.withNewAnalysisContext(Analyzer.scala:234)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154535Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:286)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154562Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:249)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154589Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.$anonfun$executeAndTrack$1(RuleExecutor.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154616Z","level":"error","event":"at org.apache.spark.sql.catalyst.QueryPlanningTracker$.withTracker(QueryPlanningTracker.scala:89)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154643Z","level":"error","event":"at org.apache.spark.sql.catalyst.rules.RuleExecutor.executeAndTrack(RuleExecutor.scala:201)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154670Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.resolveInFixedPoint(HybridAnalyzer.scala:190)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154697Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.$anonfun$apply$1(HybridAnalyzer.scala:76)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154724Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.withTrackedAnalyzerBridgeState(HybridAnalyzer.scala:111)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154751Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.resolver.HybridAnalyzer.apply(HybridAnalyzer.scala:71)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154778Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.$anonfun$executeAndCheck$1(Analyzer.scala:280)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154805Z","level":"error","event":"at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:423)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154833Z","level":"error","event":"at org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:280)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154860Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyAnalyzed$2(QueryExecution.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154894Z","level":"error","event":"at org.apache.spark.sql.catalyst.QueryPlanningTracker.measurePhase(QueryPlanningTracker.scala:148)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154927Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$2(QueryExecution.scala:278)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154957Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.154989Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$executePhase$1(QueryExecution.scala:278)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155019Z","level":"error","event":"at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155046Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.executePhase(QueryExecution.scala:277)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155073Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyAnalyzed$1(QueryExecution.scala:110)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155102Z","level":"error","event":"at scala.util.Try$.apply(Try.scala:217)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155128Z","level":"error","event":"at org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155155Z","level":"error","event":"at org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155181Z","level":"error","event":"at org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155207Z","level":"error","event":"at org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155233Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:121)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155260Z","level":"error","event":"at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:80)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155287Z","level":"error","event":"at org.apache.spark.sql.classic.Dataset$.$anonfun$ofRows$1(Dataset.scala:115)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155315Z","level":"error","event":"at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155341Z","level":"error","event":"at org.apache.spark.sql.classic.Dataset$.ofRows(Dataset.scala:113)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155369Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.load(DataFrameReader.scala:109)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155397Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.load(DataFrameReader.scala:58)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155425Z","level":"error","event":"at org.apache.spark.sql.DataFrameReader.json(DataFrameReader.scala:296)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155451Z","level":"error","event":"at org.apache.spark.sql.classic.DataFrameReader.json(DataFrameReader.scala:150)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155477Z","level":"error","event":"at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155504Z","level":"error","event":"at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155530Z","level":"error","event":"at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155556Z","level":"error","event":"at java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155582Z","level":"error","event":"at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155608Z","level":"error","event":"at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155635Z","level":"error","event":"at py4j.Gateway.invoke(Gateway.java:282)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155684Z","level":"error","event":"at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155718Z","level":"error","event":"at py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155747Z","level":"error","event":"at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155777Z","level":"error","event":"at py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.155806Z","level":"error","event":"at java.base/java.lang.Thread.run(Thread.java:840)","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.368644Z","level":"info","event":"spark data extracted","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378254Z","level":"info","event":"root","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378387Z","level":"info","event":" |-- list: array (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378427Z","level":"info","event":" |    |-- element: struct (containsNull = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378457Z","level":"info","event":" |    |    |-- dt: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378485Z","level":"info","event":" |    |    |-- main: struct (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378513Z","level":"info","event":" |    |    |    |-- temp: double (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378540Z","level":"info","event":" |    |    |    |-- pressure: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378566Z","level":"info","event":" |    |    |    |-- humidity: long (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378592Z","level":"info","event":" |    |    |-- weather: array (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378619Z","level":"info","event":" |    |    |    |-- element: struct (containsNull = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378646Z","level":"info","event":" |    |    |    |    |-- description: string (nullable = true)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:52.378673Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:53.507724Z","level":"info","event":"+--------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:53.507909Z","level":"info","event":"|                list|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:53.507961Z","level":"info","event":"+--------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:53.508009Z","level":"info","event":"|[{1752192000, {26...|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:53.508048Z","level":"info","event":"+--------------------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:53.508078Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148364Z","level":"info","event":"+----------+-----------+--------+--------+-----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148561Z","level":"info","event":"|        dt|temperature|pressure|humidity|description|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148651Z","level":"info","event":"+----------+-----------+--------+--------+-----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148709Z","level":"info","event":"|1752192000|      26.72|     998|      89|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148765Z","level":"info","event":"|1752202800|      27.27|     999|      81|    mưa nhẹ|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148816Z","level":"info","event":"|1752213600|      30.07|     999|      67|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.148867Z","level":"info","event":"|1752224400|      29.96|     998|      75|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.149001Z","level":"info","event":"|1752235200|      26.19|    1000|      91|    mưa vừa|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.149060Z","level":"info","event":"+----------+-----------+--------+--------+-----------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.149113Z","level":"info","event":"only showing top 5 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.149171Z","level":"info","event":"spark data selected","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.149223Z","level":"info","event":"transform data","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.230618Z","level":"info","event":"load data","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.230774Z","level":"info","event":"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=orcl-21c)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=TEST_O)))","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.391113Z","level":"info","event":"Table `WEATHER` created successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.624623Z","level":"info","event":"An error occurred while calling o314.save.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.624916Z","level":"info","event":": java.sql.SQLRecoverableException: Listener refused the connection with the following error:","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625043Z","level":"info","event":"ORA-12514, TNS:listener does not currently know of service requested in connect descriptor","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625141Z","level":"info","event":"  (CONNECTION_ID=IeA6k5DYSleHgUB3hGEH/g==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625231Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625319Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625404Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625490Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625577Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625660Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625746Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625831Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.625924Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626014Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626103Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626190Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626297Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626386Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626471Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626555Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626639Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626721Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626803Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626907Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.626996Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627079Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627162Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627244Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627326Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627410Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627493Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627577Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627661Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627744Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627827Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.627927Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628029Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628122Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628208Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628292Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628375Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628556Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628663Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628751Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628838Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.628958Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629050Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629134Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629222Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629306Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629390Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629473Z","level":"info","event":"\tat org.apache.spark.util.Utils$.getTryWithCallerStacktrace(Utils.scala:1439)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629556Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629640Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:131)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629723Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:192)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629808Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.runCommand(DataFrameWriter.scala:622)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.629902Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630004Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveInternal(DataFrameWriter.scala:241)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630094Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.save(DataFrameWriter.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630180Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630267Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630354Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630440Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630524Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630607Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630691Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630775Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630857Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.630954Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631040Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631124Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631206Z","level":"info","event":"\tSuppressed: org.apache.spark.util.Utils$OriginalTryStackTraceException: Full stacktrace of original doTryWithCallerStacktrace caller","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631288Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631369Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631451Z","level":"info","event":"\t\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631534Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631617Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631698Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631779Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631888Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.631983Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632069Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632153Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632242Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632327Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632415Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632497Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632636Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632739Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632830Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.632952Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633045Z","level":"info","event":"\t\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633129Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633213Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633298Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633382Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633467Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633552Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633637Z","level":"info","event":"\t\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633731Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633820Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.633912Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634005Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634091Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634184Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634270Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634354Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634438Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634520Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634602Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634685Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634769Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634854Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.634950Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635034Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635121Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635204Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635288Z","level":"info","event":"\t\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635382Z","level":"info","event":"\t\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635470Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635555Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635636Z","level":"info","event":"\t\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635717Z","level":"info","event":"Caused by: oracle.net.ns.NetException: Listener refused the connection with the following error:","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635807Z","level":"info","event":"ORA-12514, TNS:listener does not currently know of service requested in connect descriptor","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635908Z","level":"info","event":"  (CONNECTION_ID=IeA6k5DYSleHgUB3hGEH/g==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.635998Z","level":"info","event":"\tat oracle.net.ns.NSProtocolNIO.createRefusePacketException(NSProtocolNIO.java:824)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636081Z","level":"info","event":"\tat oracle.net.ns.NSProtocolNIO.handleConnectPacketResponse(NSProtocolNIO.java:396)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636163Z","level":"info","event":"\tat oracle.net.ns.NSProtocolNIO.negotiateConnection(NSProtocolNIO.java:207)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636246Z","level":"info","event":"\tat oracle.net.ns.NSProtocol.connect(NSProtocol.java:354)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636337Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.connect(T4CConnection.java:2627)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636418Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:666)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636559Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636664Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636755Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636840Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.636959Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637052Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637137Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637223Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637308Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637395Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637471Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637534Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637594Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637654Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637714Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637773Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637833Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637909Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.637976Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638037Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638097Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638160Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638219Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638278Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638336Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638395Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638453Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638512Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638571Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638630Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638697Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638758Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638817Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638879Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.638951Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639013Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639077Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639145Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639205Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639265Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639372Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639447Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639512Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639576Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639637Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639699Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639760Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639820Z","level":"info","event":"\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.639880Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.020770Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.021147Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.021282Z","level":"info","event":"Task:<Task(PythonOperator): etl_data_weather.extract_transform_load>","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:54.977479","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"Py4JJavaError","exc_value":"An error occurred while calling o314.save.\n: java.sql.SQLRecoverableException: Listener refused the connection with the following error:\nORA-12514, TNS:listener does not currently know of service requested in connect descriptor\n  (CONNECTION_ID=IeA6k5DYSleHgUB3hGEH/g==)\n\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)\n\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)\n\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)\n\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)\n\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)\n\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)\n\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)\n\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)\n\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)\n\tat scala.util.Try$.apply(Try.scala:217)\n\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)\n\tat org.apache.spark.util.Utils$.getTryWithCallerStacktrace(Utils.scala:1439)\n\tat org.apache.spark.util.LazyTry.get(LazyTry.scala:58)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:131)\n\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:192)\n\tat org.apache.spark.sql.classic.DataFrameWriter.runCommand(DataFrameWriter.scala:622)\n\tat org.apache.spark.sql.classic.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)\n\tat org.apache.spark.sql.classic.DataFrameWriter.saveInternal(DataFrameWriter.scala:241)\n\tat org.apache.spark.sql.classic.DataFrameWriter.save(DataFrameWriter.scala:126)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)\n\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n\tSuppressed: org.apache.spark.util.Utils$OriginalTryStackTraceException: Full stacktrace of original doTryWithCallerStacktrace caller\n\t\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)\n\t\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)\n\t\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)\n\t\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)\n\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)\n\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)\n\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)\n\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)\n\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)\n\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)\n\t\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)\n\t\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)\n\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)\n\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)\n\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)\n\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)\n\t\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)\n\t\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)\n\t\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)\n\t\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)\n\t\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)\n\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)\n\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)\n\t\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)\n\t\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)\n\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)\n\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)\n\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)\n\t\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)\n\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)\n\t\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)\n\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)\n\t\tat scala.util.Try$.apply(Try.scala:217)\n\t\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)\n\t\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)\n\t\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)\n\t\t... 19 more\nCaused by: oracle.net.ns.NetException: Listener refused the connection with the following error:\nORA-12514, TNS:listener does not currently know of service requested in connect descriptor\n  (CONNECTION_ID=IeA6k5DYSleHgUB3hGEH/g==)\n\tat oracle.net.ns.NSProtocolNIO.createRefusePacketException(NSProtocolNIO.java:824)\n\tat oracle.net.ns.NSProtocolNIO.handleConnectPacketResponse(NSProtocolNIO.java:396)\n\tat oracle.net.ns.NSProtocolNIO.negotiateConnection(NSProtocolNIO.java:207)\n\tat oracle.net.ns.NSProtocol.connect(NSProtocol.java:354)\n\tat oracle.jdbc.driver.T4CConnection.connect(T4CConnection.java:2627)\n\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:666)\n\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)\n\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)\n\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)\n\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)\n\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)\n\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)\n\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)\n\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)\n\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)\n\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)\n\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)\n\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)\n\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)\n\tat scala.util.Try$.apply(Try.scala:217)\n\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)\n\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)\n\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)\n\t... 19 more\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/main.py","lineno":24,"name":"run_etl_weather"},{"filename":"/opt/airflow/dags/etl_data_weather.py","lineno":86,"name":"load_data_weather"},{"filename":"/opt/airflow/dags/spark/build_spark.py","lineno":87,"name":"write_spark"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/sql/readwriter.py","lineno":1743,"name":"save"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/java_gateway.py","lineno":1362,"name":"__call__"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py","lineno":282,"name":"deco"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/py4j/protocol.py","lineno":327,"name":"get_return_value"}]}]}
{"timestamp":"2025-08-29T03:14:55.063658Z","level":"info","event":"Failure caused by An error occurred while calling o314.save.","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064010Z","level":"info","event":": java.sql.SQLRecoverableException: Listener refused the connection with the following error:","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064139Z","level":"info","event":"ORA-12514, TNS:listener does not currently know of service requested in connect descriptor","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064244Z","level":"info","event":"  (CONNECTION_ID=IeA6k5DYSleHgUB3hGEH/g==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064351Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064455Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064555Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064658Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064786Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.064924Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065037Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065142Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065241Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065348Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065446Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065560Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065659Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065759Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065859Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.065982Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066131Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066263Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066369Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066470Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066570Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066671Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066770Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.066870Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067007Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067117Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067218Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067316Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067407Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067498Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067589Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067688Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067786Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067878Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.067987Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068079Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068170Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068376Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068496Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068593Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068688Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068781Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068872Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.068977Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069082Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069178Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069272Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069363Z","level":"info","event":"\tat org.apache.spark.util.Utils$.getTryWithCallerStacktrace(Utils.scala:1439)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069453Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.get(LazyTry.scala:58)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069545Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:131)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069635Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:192)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069724Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.runCommand(DataFrameWriter.scala:622)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069813Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.069913Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.saveInternal(DataFrameWriter.scala:241)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070005Z","level":"info","event":"\tat org.apache.spark.sql.classic.DataFrameWriter.save(DataFrameWriter.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070095Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070184Z","level":"info","event":"\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070274Z","level":"info","event":"\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070362Z","level":"info","event":"\tat java.base/java.lang.reflect.Method.invoke(Method.java:569)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070457Z","level":"info","event":"\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070549Z","level":"info","event":"\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070640Z","level":"info","event":"\tat py4j.Gateway.invoke(Gateway.java:282)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070728Z","level":"info","event":"\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070817Z","level":"info","event":"\tat py4j.commands.CallCommand.execute(CallCommand.java:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.070913Z","level":"info","event":"\tat py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:184)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071008Z","level":"info","event":"\tat py4j.ClientServerConnection.run(ClientServerConnection.java:108)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071106Z","level":"info","event":"\tat java.base/java.lang.Thread.run(Thread.java:840)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071201Z","level":"info","event":"\tSuppressed: org.apache.spark.util.Utils$OriginalTryStackTraceException: Full stacktrace of original doTryWithCallerStacktrace caller","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071291Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.handleLogonNetException(T4CConnection.java:902)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071382Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:707)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071468Z","level":"info","event":"\t\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071556Z","level":"info","event":"\t\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071646Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071740Z","level":"info","event":"\t\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071827Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.071925Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072022Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072112Z","level":"info","event":"\t\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072201Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072297Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072388Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072478Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072573Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072723Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072832Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.072938Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073038Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073141Z","level":"info","event":"\t\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073236Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073326Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073417Z","level":"info","event":"\t\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073508Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073598Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073688Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073778Z","level":"info","event":"\t\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073870Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.073977Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074067Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074152Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074235Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074320Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074404Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074487Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074576Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074660Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074743Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074840Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.074934Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075024Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075109Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075192Z","level":"info","event":"\t\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075275Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075359Z","level":"info","event":"\t\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075441Z","level":"info","event":"\t\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075525Z","level":"info","event":"\t\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075607Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075688Z","level":"info","event":"\t\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075772Z","level":"info","event":"\t\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075855Z","level":"info","event":"Caused by: oracle.net.ns.NetException: Listener refused the connection with the following error:","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.075958Z","level":"info","event":"ORA-12514, TNS:listener does not currently know of service requested in connect descriptor","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076044Z","level":"info","event":"  (CONNECTION_ID=IeA6k5DYSleHgUB3hGEH/g==)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076132Z","level":"info","event":"\tat oracle.net.ns.NSProtocolNIO.createRefusePacketException(NSProtocolNIO.java:824)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076214Z","level":"info","event":"\tat oracle.net.ns.NSProtocolNIO.handleConnectPacketResponse(NSProtocolNIO.java:396)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076331Z","level":"info","event":"\tat oracle.net.ns.NSProtocolNIO.negotiateConnection(NSProtocolNIO.java:207)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076420Z","level":"info","event":"\tat oracle.net.ns.NSProtocol.connect(NSProtocol.java:354)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076508Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.connect(T4CConnection.java:2627)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076593Z","level":"info","event":"\tat oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:666)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076743Z","level":"info","event":"\tat oracle.jdbc.driver.PhysicalConnection.connect(PhysicalConnection.java:1094)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076846Z","level":"info","event":"\tat oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:89)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.076958Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:732)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077053Z","level":"info","event":"\tat oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:648)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077141Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.BasicConnectionProvider.getConnection(BasicConnectionProvider.scala:50)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077228Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.connection.ConnectionProviderBase.create(ConnectionProvider.scala:102)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077312Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1(JdbcDialects.scala:235)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077396Z","level":"info","event":"\tat org.apache.spark.sql.jdbc.JdbcDialect.$anonfun$createConnectionFactory$1$adapted(JdbcDialects.scala:231)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077480Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:51)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077563Z","level":"info","event":"\tat org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:55)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077649Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:79)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077734Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077817Z","level":"info","event":"\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:88)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.077908Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$2(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078004Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$8(SQLExecution.scala:162)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078090Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSessionTagsApplied(SQLExecution.scala:268)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078175Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$7(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078257Z","level":"info","event":"\tat org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078343Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.$anonfun$withResources$1(ArtifactManager.scala:112)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078427Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withClassLoaderIfNeeded(ArtifactManager.scala:106)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078510Z","level":"info","event":"\tat org.apache.spark.sql.artifact.ArtifactManager.withResources(ArtifactManager.scala:111)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078594Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$6(SQLExecution.scala:124)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078685Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:291)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078773Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId0$1(SQLExecution.scala:123)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078858Z","level":"info","event":"\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:804)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.078953Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId0(SQLExecution.scala:77)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079043Z","level":"info","event":"\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:233)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079130Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$eagerlyExecuteCommands$1(QueryExecution.scala:155)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079215Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$.withInternalError(QueryExecution.scala:654)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079298Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.org$apache$spark$sql$execution$QueryExecution$$eagerlyExecute$1(QueryExecution.scala:154)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079382Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:169)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079466Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$3.applyOrElse(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079547Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079628Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:86)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079712Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:470)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079795Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079879Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:360)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.079976Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:356)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080063Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080149Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:37)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080291Z","level":"info","event":"\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:446)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080392Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:164)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080476Z","level":"info","event":"\tat org.apache.spark.sql.execution.QueryExecution.$anonfun$lazyCommandExecuted$1(QueryExecution.scala:126)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080539Z","level":"info","event":"\tat scala.util.Try$.apply(Try.scala:217)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080598Z","level":"info","event":"\tat org.apache.spark.util.Utils$.doTryWithCallerStacktrace(Utils.scala:1378)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080656Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT$lzycompute(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080714Z","level":"info","event":"\tat org.apache.spark.util.LazyTry.tryT(LazyTry.scala:46)","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080774Z","level":"info","event":"\t... 19 more","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-29T03:14:55.080842Z","level":"info","event":"","chan":"stdout","logger":"task"}
