{"timestamp":"2025-09-01T11:30:01.113204","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-01T11:30:01.113647","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/main.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-01T11:30:01.788164Z","level":"info","event":"WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:02.443312Z","level":"error","event":"25/09/01 11:30:02 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-01T11:30:02.611906Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-01T11:30:02.612099Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-01T11:30:03.312769Z","level":"error","event":"25/09/01 11:30:03 WARN Utils: Service 'SparkUI' could not bind on port 4040. Attempting port 4041.","chan":"stderr","logger":"task"}
{"timestamp":"2025-09-01T11:30:04.853196Z","level":"info","event":"Iceberg SparkCatalog OK.","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:04.924301Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:04.924452Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:04.924517Z","level":"info","event":"Current task name:data_weather","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:04.924567Z","level":"info","event":"Dag name:etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:05.105884Z","level":"info","event":"Dữ liệu đã lưu: weather_data.json","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:05.106388","level":"info","event":"Done. Returned value was: weather_data.json","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-01T11:30:05.106620","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199050a-8880-7704-aa8a-b46c097e9122'), task_id='data_weather', dag_id='etl_pipeline', run_id='scheduled__2025-09-01T11:30:00+00:00', try_number=1, map_index=-1, hostname='e9121ca83f35', context_carrier={}, task=<Task(PythonOperator): data_weather>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 9, 1, 11, 30, 0, 563925, tzinfo=TzInfo(UTC)), end_date=None, is_mapped=False)","logger":"task"}
{"timestamp":"2025-09-01T11:30:05.132672Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:05.132906Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-01T11:30:05.132962Z","level":"info","event":"Task operator:<Task(PythonOperator): data_weather>","chan":"stdout","logger":"task"}
